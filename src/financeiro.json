[{"id":"8ac4efec.52279","type":"subflow","name":"pedidos","info":"","in":[{"x":180,"y":100,"wires":[{"id":"cd192c25.011c5"}]}],"out":[{"x":1060,"y":100,"wires":[{"id":"3fcedb11.de2984","port":0}]}]},{"id":"30f381b.eb9b67e","type":"comment","z":"8ac4efec.52279","name":"IMPORTAR PEDIDOS LIBERADOS","info":"GERA TAREFAS DE TESTE PARA CONFERIR DUPLICATA","x":200,"y":40,"wires":[]},{"id":"a43a9197.302c","type":"inject","z":"8ac4efec.52279","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":140,"y":140,"wires":[["cd192c25.011c5"]]},{"id":"cd192c25.011c5","type":"function","z":"8ac4efec.52279","name":"EVENTO","func":"var sql = `\nSELECT\n\tEVT.*,\n\tLTRIM(RTRIM(LPV.LPEMP))     AS empresa,\n\tCAST(LPV.LPPED AS INT)      AS numero,\n    LPV.LPENT                   AS emissao,\n\tLPV.Lp0SaiRed               AS entrega,\n    LTRIM(RTRIM(LPV.CCCGC))\t    AS cliente,\n\tLPV.LPPAG\t                AS condicao, \n\tLPV.LPVEN\t\t\t\t    AS representante, \n\tLPV.LpCom\t\t\t\t\tAS comissao\nFROM\n\tGPIMAC_Altamira.dbo.INTEGRACAO_EVENTO EVT WITH (NOLOCK) INNER JOIN \n    GPIMAC_Altamira.dbo.LPV WITH (NOLOCK) \n    ON LPV.LPPED = EVT.ID\nWHERE\n   EVT.evento = 'PEDIDO_LIBERADO' AND \n   EVT.reconhecido = 0 AND \n   EVT.antes = 'N' AND \n   EVT.depois = 'S'\n`\n\nvar mssql = global.get('mssql');\n\nvar request = new mssql.Request(global.get('GPIMAC')).query(sql).then(function(recordset) {\n    msg.eventos = recordset.map( function(e) { return {sequencial: e.sequencial, uid: e.uid, id: e.id} });\n    msg.pedidos = recordset.map( function(p) { return {\n        empresa: p.empresa, \n        numero: p.numero, \n        emissao: p.emissao, \n        entrega: p.entrega, \n        cliente: p.cliente, \n        condicao: p.condicao, \n        representante: p.representante,\n        comissao: p.comissao\n    }})\n    node.send(msg);\n})\n.catch(function(err) {\n    msg.payload = err;\n    node.error(msg);\n});","outputs":"1","noerr":0,"x":320,"y":120,"wires":[["dba3acde.86889"]]},{"id":"1547c9e8.4b3846","type":"function","z":"8ac4efec.52279","name":"LOOP","func":"if (msg.index === undefined) {\n    msg.index = 0;\n    return [null, msg];\n} else {\n    msg.index++\n    if (msg.index < msg.pedidos.length) {\n        return [null, msg];\n    } else {\n        msg.payload = 'Importar Pedidos Liberados: ' + msg.pedidos.length + ' pedidos encontrados.';\n        return [msg, null];\n    }\n}\n","outputs":"2","noerr":0,"x":170,"y":540,"wires":[["eabe2b81.d96bd8","91bed923.de9bb8"],["116d104f.e14d7"]]},{"id":"dba3acde.86889","type":"function","z":"8ac4efec.52279","name":"EXISTE ?","func":"if (Array.isArray(msg.pedidos) && msg.pedidos.length > 0) {\n    return [null, msg];\n} else {\n    msg.payload = 'Importar Pedidos Liberados: Nenhum pedido encontrado.';\n    return [msg, null];\n}","outputs":"2","noerr":0,"x":500,"y":120,"wires":[["5630434a.56d32c","9bf7da30.00b078"],["fa80bb5f.c59208"]]},{"id":"e0dda54.0672358","type":"function","z":"8ac4efec.52279","name":"EVENTO","func":"\nvar sql = `\nUPDATE GPIMAC_Altamira.dbo.INTEGRACAO_EVENTO\n    SET reconhecido = 1\nWHERE \n    sequencial = ${msg.eventos[msg.index].sequencial}\n`\nvar mssql = global.get('mssql');\n\nvar request = new mssql.Request(global.get('GPIMAC')).query(sql).then(function(recordset) {\n    node.send(msg);\n})\n.catch(function(err) {\n    msg.payload = err;\n    node.error(msg);\n});\n","outputs":1,"noerr":0,"x":180,"y":280,"wires":[["e36246a5.d26358"]]},{"id":"c880762.9ee1388","type":"mqtt out","z":"8ac4efec.52279","name":"","topic":"","qos":"","retain":"","broker":"404ac8f7.f80bb8","x":1170,"y":240,"wires":[]},{"id":"302b9106.ab3aae","type":"function","z":"8ac4efec.52279","name":"TAREFA","func":"msg.tarefa = {\n    nome: 'Lan√ßamentos a Receber',\n    titulo: 'Pedido ' + msg.pedidos[msg.index].numero,\n    descricao: msg.pedidos[msg.index].cliente.nome,\n    documento: msg.pedidos[msg.index],\n    atribuir: 'faturamento',\n    form: '/recebiveis/lancamento/',\n}\n\nvar sql = `\nDECLARE @ID INT\n\nSET @ID = NEXT VALUE FOR tarefa_seq\n\nINSERT INTO TRF\n   (id,\n   nome,\n   titulo,\n   descricao,\n   documento,\n   atribuir,\n   form,\n   parametros,\n   prazo,\n   criado,\n   concluido)\nVALUES\n   (@ID,\n   '${msg.tarefa.nome}',\n   '${msg.tarefa.titulo}',\n   '${msg.tarefa.descricao}',\n   '${JSON.stringify(msg.tarefa.documento)}', \n   '${msg.tarefa.atribuir}',\n   '${msg.tarefa.form}',\n   NULL,\n   NULL,\n   GETDATE(),\n   NULL);\n\nSELECT\n   id,\n   nome,\n   titulo,\n   descricao,\n   atribuir,\n   form,\n   parametros,\n   prazo,\n   criado,\n   concluido\nFROM TRF \nWHERE id = @ID;\n`\n\nvar mssql = global.get('mssql');\n\nvar request = new mssql.Request(global.get('FINANCEIRO')).query(sql).then(function(recordset) {\n    msg.payload = recordset[0];\n    node.send(msg);\n})\n.catch(function(err) {\n    msg.payload = err;\n    console.dir(err);\n    node.error(msg);\n});","outputs":1,"noerr":0,"x":1100,"y":600,"wires":[["f0735298.d10c3"]]},{"id":"1574d7db.008ee8","type":"function","z":"8ac4efec.52279","name":"PARCELAS","func":"var sql = `\nSELECT\n   LPVCPGPAR.LPPED          AS pedido,\n   LPVCPGPAR.LpCPg1DtV      AS vencto,\n   'VENDA'                  AS origem,\n   'COBRANCA'               AS forma_pagto,\n   LPVCPGPAR.LpCPg1Tip      AS tipo_vencto,\n   LPVCPGPAR.LpCpg1Par      AS parcela,\n   LPVCPGPAR.LpCPg1Dias     AS prazo,\n   LPVCPGPAR.LpCPg1ProIdxRed AS porcentagem,\n   LPVCPGPAR.LpCPg1ParVal   AS valor\nFROM\n   GPIMAC_Altamira.dbo.LPVCPGPAR\nWHERE\n   LPVCPGPAR.LPPED = ${msg.pedidos[msg.index].numero}\nORDER BY LPVCPGPAR.LpCpg1Par\n`\n\nvar mssql = global.get('mssql');\n\nvar request = new mssql.Request(global.get('GPIMAC')).query(sql).then(function(recordset) {\n    msg.pedidos[msg.index].parcelas = recordset;\n    node.send(msg);\n})\n.catch(function(err) {\n    msg.payload = err;\n    node.error(msg);\n});\n","outputs":1,"noerr":0,"x":750,"y":600,"wires":[["ec94b699.ac84f8"]]},{"id":"116d104f.e14d7","type":"function","z":"8ac4efec.52279","name":"CLIENTE","func":"var sql = `\nSELECT\n    LTRIM(RTRIM(CACLI.CCCGC))                               AS cnpj,\n    LTRIM(RTRIM(CACLI.CCINS))                               AS inscricao,\n\tREPLACE(LTRIM(RTRIM(CACLI.CCFAN)), '''', '')            AS fantasia,\n\tREPLACE(LTRIM(RTRIM(CACLI.CCNOM)), '''', '')            AS nome,\n    REPLACE(LTRIM(RTRIM(CACLI.CCLogTip0CodC)), '''', '')    AS logradouro,\n    REPLACE(LTRIM(RTRIM(CACLI.CCCEN)), '''', '')            AS endereco,\n    LTRIM(RTRIM(CACLI.CCCENNum))                            AS numero,\n    REPLACE(LTRIM(RTRIM(CACLI.CCCENCpl)), '''', '')         AS complemento,\n    LTRIM(RTRIM(CACLI.CCCBA))                               AS bairro,\n    CACLI.CCCCIIBGECOD                                      AS municipio,\n    LTRIM(RTRIM(CACLI.CCCCI))                               AS cidade,\n    LTRIM(RTRIM(CACLI.CCCcEP))                              AS CEP,\n    LTRIM(RTRIM(CACLI.CCCES))                               AS UF,\n    LTRIM(RTRIM(CACLI.CCDD5))                               AS ddd,\n    LTRIM(RTRIM(CACLI.CCtFO3))                              AS telefone,\n    REPLACE(LTRIM(RTRIM(CACLI.CCCO1)), '''', '')            AS contato,\n    LTRIM(RTRIM(CACLI.CCCL))                                AS conta_contabil\nFROM\n    GPIMAC_Altamira.dbo.CACLI WITH (NOLOCK)\nWHERE\n    CACLI.CCCGC = '${msg.pedidos[msg.index].cliente}'\n`\n\nvar mssql = global.get('mssql');\n\nvar request = new mssql.Request(global.get('GPIMAC')).query(sql).then(function(recordset) {\n    msg.pedidos[msg.index].cliente = recordset[0];\n    node.send(msg);\n})\n.catch(function(err) {\n    msg.payload = err;\n    node.error(msg);\n});\n\n","outputs":"1","noerr":0,"x":360,"y":600,"wires":[["5c34033.a7ebcfc"]]},{"id":"5c34033.a7ebcfc","type":"function","z":"8ac4efec.52279","name":"REPRESENTANTE","func":"var sql = `\nSELECT\n   LTRIM(RTRIM(CAREP.CVCOD)) AS codigo,\n   LTRIM(RTRIM(CAREP.CVNOM)) AS nome\nFROM\n   GPIMAC_Altamira.dbo.CAREP WITH (NOLOCK)\nWHERE\n   CAREP.CVCOD = '${msg.pedidos[msg.index].representante}'\n`\n\nvar mssql = global.get('mssql');\n\nvar request = new mssql.Request(global.get('GPIMAC')).query(sql).then(function(recordset) {\n    msg.pedidos[msg.index].representante = recordset[0];\n    node.send(msg);\n})\n.catch(function(err) {\n    msg.payload = err;\n    node.error(msg);\n});\n","outputs":1,"noerr":0,"x":550,"y":600,"wires":[["1574d7db.008ee8"]]},{"id":"5630434a.56d32c","type":"mqtt out","z":"8ac4efec.52279","name":"","topic":"/event/carteira","qos":"","retain":"","broker":"404ac8f7.f80bb8","x":740,"y":40,"wires":[]},{"id":"a93a753c.571938","type":"function","z":"8ac4efec.52279","name":"NOTIFY","func":"msg.filename = msg.eventos[msg.index].uid\nmsg.topic = '/tarefas/nova/' + msg.pedidos[msg.index].atribuir\n\nreturn [\n    msg, \n    { \n        bucket: 'event.altamira.com.br',\n        filename: msg.eventos[msg.index].uid.toLowerCase() + '.json', \n        payload: { \n            id: msg.eventos[msg.index].uid, \n            type: 'Pedido Liberado', \n            target: {\n                id: '55694903.217c88',\n                type: 'event'\n            },\n            payload: msg.pedidos[msg.index]\n        }\n        \n    }\n];","outputs":"2","noerr":0,"x":960,"y":280,"wires":[["c880762.9ee1388","7e2e5421.5ac13c"],["1d3aa84d.b752a8"]]},{"id":"fa80bb5f.c59208","type":"link out","z":"8ac4efec.52279","name":"NAO_EXISTE_OUT","links":["6b8149d9.6bdd98"],"x":675,"y":160,"wires":[]},{"id":"6b8149d9.6bdd98","type":"link in","z":"8ac4efec.52279","name":"LOOP_IN","links":["fa80bb5f.c59208","e36246a5.d26358"],"x":75,"y":540,"wires":[["1547c9e8.4b3846"]]},{"id":"7e2e5421.5ac13c","type":"link out","z":"8ac4efec.52279","name":"NOTIFY_OUT","links":["c9eb1282.f9007"],"x":1135,"y":200,"wires":[]},{"id":"c9eb1282.f9007","type":"link in","z":"8ac4efec.52279","name":"EVENTO_IN","links":["7e2e5421.5ac13c"],"x":75,"y":280,"wires":[["e0dda54.0672358"]]},{"id":"e36246a5.d26358","type":"link out","z":"8ac4efec.52279","name":"EVENTO_OUT","links":["6b8149d9.6bdd98"],"x":295,"y":280,"wires":[]},{"id":"eabe2b81.d96bd8","type":"mqtt out","z":"8ac4efec.52279","name":"","topic":"/event/carteira","qos":"","retain":"","broker":"404ac8f7.f80bb8","x":380,"y":500,"wires":[]},{"id":"f0735298.d10c3","type":"link out","z":"8ac4efec.52279","name":"LOOP_OUT","links":["31df996f.df0236"],"x":1195,"y":600,"wires":[]},{"id":"31df996f.df0236","type":"link in","z":"8ac4efec.52279","name":"NOTIFY_IN","links":["f0735298.d10c3"],"x":835,"y":280,"wires":[["a93a753c.571938"]]},{"id":"1d3aa84d.b752a8","type":"amazon s3 out","z":"8ac4efec.52279","aws":"","bucket":"event.altamira.com.br","filename":"","localFilename":"","region":"us-east-1","name":"event","x":1230,"y":360,"wires":[]},{"id":"91bed923.de9bb8","type":"link out","z":"8ac4efec.52279","name":"LOOP_OUT","links":["3fcedb11.de2984"],"x":315,"y":560,"wires":[]},{"id":"9bf7da30.00b078","type":"link out","z":"8ac4efec.52279","name":"EXISTE_OUT","links":["3fcedb11.de2984"],"x":675,"y":100,"wires":[]},{"id":"3fcedb11.de2984","type":"link in","z":"8ac4efec.52279","name":"OUTPUT","links":["91bed923.de9bb8","9bf7da30.00b078"],"x":875,"y":100,"wires":[[]]},{"id":"ec94b699.ac84f8","type":"function","z":"8ac4efec.52279","name":"TOTAIS","func":"var sql = `\nSELECT\n   LPVCPGPAR.LpCPg1ProVal   AS produtos,\n   LPVCPGPAR.LpCPg1ImpVal   AS ipi,\n   LPVCPGPAR.LpCPg1ParVal   AS total\nFROM\n   GPIMAC_Altamira.dbo.LPVCPGPAR\nWHERE\n   LPVCPGPAR.LPPED = ${msg.pedidos[msg.index].numero}\n`\n\nvar mssql = global.get('mssql');\n\nvar request = new mssql.Request(global.get('GPIMAC')).query(sql).then(function(recordset) {\n    msg.pedidos[msg.index].totais = recordset;\n    node.send(msg);\n})\n.catch(function(err) {\n    msg.payload = err;\n    node.error(msg);\n});\n","outputs":1,"noerr":0,"x":920,"y":600,"wires":[["302b9106.ab3aae"]]},{"id":"404ac8f7.f80bb8","type":"mqtt-broker","z":"","broker":"192.168.0.1","port":"1883","clientid":"","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"willTopic":"","willQos":"0","willPayload":"","birthTopic":"","birthQos":"0","birthPayload":""},{"id":"bd7cc7ec.84f238","type":"http in","z":"8364cdd3.e51ef","name":"busca","url":"/api/financeiro/duplicata/emissao/busca","method":"get","swaggerDoc":"","x":70,"y":580,"wires":[["ea3899e6.a96d98"]]},{"id":"ea3899e6.a96d98","type":"function","z":"8364cdd3.e51ef","name":"SQL","func":"var sql = \n    \"DECLARE @PEDIDO INT\\n\" +\n    \"DECLARE @CNPJ NVARCHAR(14)\\n\" +\n    \"DECLARE @NOME NVARCHAR(100)\\n\" +\n    \"SET @PEDIDO = \" + (msg.req.query.pedido) + \"\\n\" +\n    \"SET @CNPJ = \" + (\"'\" + msg.req.query.cnpj + \"'\") + \"\\n\" +\n    \"SET @NOME = \" + (\"'\" + msg.req.query.nome + \"'\") + \"\\n\" +\n    \"SELECT top 10 \" +\n    \"\tLTRIM(RTRIM(LPV.LPEMP)) AS empresa, \\n\" +\n    \"\tCAST(LPV.LPPED AS INT) AS pedido, \\n\" +\n    \"\tCAST(LPV.LPENT AS DATE) AS emissao, \\n\" +\n    \"\tLPV.Lp0SaiRed AS entrega, \\n\" +\n    \"\tLTRIM(RTRIM(CACLI.CCCGC)) AS cnpj, \\n\" +\n    \"\tLTRIM(RTRIM(CACLI.CCFAN)) AS fantasia, \\n\" +\n    \"\tLTRIM(RTRIM(CACLI.CCNOM)) AS nome \\n\" +\n    \"FROM \\n\" +\n    \"\tGPIMAC_Altamira.dbo.LPV AS LPV INNER JOIN \\n\" +\n    \"   GPIMAC_Altamira.dbo.CACLI ON LPV.CCCGC = GPIMAC_Altamira.dbo.CACLI.CCCGC \\n\" +\n    \"WHERE \\n\" +\n    \"   (@PEDIDO IS NULL OR LPV.LPPED LIKE '%' + CAST(@PEDIDO AS NVARCHAR(10)) + '%') AND \\n\" +\n    \"   (@CNPJ IS NULL OR CACLI.CCCGC LIKE '%' + @CNPJ + '%') AND \\n\" +\n    \"   (@NOME IS NULL OR CACLI.CCFAN LIKE '%' + @NOME + '%') AND \\n\" +\n    \"   (@NOME IS NULL OR CACLI.CCNOM LIKE '%' + @NOME + '%') \\n\" +\n    \"ORDER BY \\n\" +\n    \"   LPV.LPPED DESC\"\n\nvar mssql = global.get('mssql');\n\nvar request = new mssql.Request(global.get('FINANCEIRO')).query(sql).then(function(recordset) {\n    msg.payload = recordset;\n    console.dir(recordset);\n    node.send(msg);\n})\n.catch(function(err) {\n    msg.payload = err;\n    node.error(msg);\n});","outputs":1,"noerr":0,"x":330,"y":580,"wires":[["60790765.817b98"]]},{"id":"60790765.817b98","type":"http response","z":"8364cdd3.e51ef","name":"","x":1030,"y":580,"wires":[]},{"id":"7725f43.0bf330c","type":"http in","z":"8364cdd3.e51ef","name":"lancamento","url":"/api/financeiro/recebiveis/lancamento/tarefa/:tarefa","method":"post","swaggerDoc":"","x":90,"y":780,"wires":[["151471f0.f2471e"]]},{"id":"151471f0.f2471e","type":"function","z":"8364cdd3.e51ef","name":"SQL","func":"var mssql = global.get('mssql');\n\nvar procedure_name = 'REC_INSERE'\n\nvar request = new mssql.Request(global.get('FINANCEIRO'));\n\nrequest.input('TAREFA_ATUAL', mssql.Int, parseInt(msg.payload.id))\nrequest.input('VERSAO', mssql.Int, parseInt(msg.payload.versao))\n\nvar tarefas = new mssql.Table()\n\ntarefas.columns.add('id', mssql.Int);\ntarefas.columns.add('nome', mssql.NVarChar(100));\ntarefas.columns.add('titulo', mssql.NVarChar(50));\ntarefas.columns.add('descricao', mssql.NVarChar(50));\ntarefas.columns.add('detalhes', mssql.NVarChar(100));\ntarefas.columns.add('documento', mssql.NVarChar(mssql.MAX));\ntarefas.columns.add('atribuir', mssql.NVarChar(50));\ntarefas.columns.add('atribuido', mssql.NVarChar(50));\ntarefas.columns.add('form', mssql.NVarChar(100));\ntarefas.columns.add('parametros', mssql.NVarChar(mssql.MAX));\ntarefas.columns.add('prazo', mssql.DateTime2(7));\ntarefas.columns.add('criado', mssql.DateTime2(7));\ntarefas.columns.add('concluido', mssql.DateTime2(7));\ntarefas.columns.add('versao', mssql.Int);\n\nif (msg.payload.documento.parcelas.find( p => p.forma_pagto === 'COBRANCA')) {\n\n    var tarefa = \n    {\n        id: 0,\n        nome: 'Cobran√ßa Banc√°ria',\n        titulo: 'Gerar Remessa de Cobran√ßa',\n        descricao: 'Saldo R$ ' + msg.payload.documento.parcelas.reduce( (total, parcela) => total + parcela.valor, 0).toFixed(2).replace('.', ','), \n        detalhes: '',\n        documento: JSON.stringify(\n            {\n                nosso_numero: msg.payload.documento.nosso_numero,\n                pedido: msg.payload.documento.numero,\n                cliente: msg.payload.documento.cliente,\n                parcelas: msg.payload.documento.parcelas.filter( p => p.forma_pagto === 'COBRANCA')\n            }),\n        atribuir: 'financeiro',\n        atribuido: null,\n        form: '/recebiveis/cobranca/',\n        parametros: null,\n        prazo: null,\n        criado: new Date(),\n        concluido: null,\n        versao: 0\n    }    \n    \n    request.input('TAREFA_COBRANCA_NOME', mssql.VarChar(100), tarefa.nome)\n    \n    //TODO Calcular a soma das parcelas em cobran√ßa em aberto\n    request.input('TAREFA_COBRANCA_DESCRICAO', 'Saldo R$ ' + msg.payload.documento.parcelas.reduce( (total, parcela) => total + parcela.valor, 0).toFixed(2).replace('.', ','))\n\n    tarefas.rows.add(\n        0,\n        tarefa.nome,\n        tarefa.titulo,\n        tarefa.descricao,\n        tarefa.detalhes,\n        tarefa.documento, \n        tarefa.atribuir,\n        tarefa.atribuido,\n        tarefa.form,\n        tarefa.parametros,\n        tarefa.prazo,\n        tarefa.criado,\n        tarefa.concluido,\n        tarefa.versao\n    );\n    \n}\n\nrequest.input('TAREFAS', tarefas)\n\nrequest.input('NOSSO_NUMERO', mssql.Int, parseInt(msg.payload.documento.nosso_numero))\n\nrequest.input('PEDIDO', mssql.Int, parseInt(msg.payload.documento.numero))\n\nrequest.input('CONTA_CONTABIL', mssql.VarChar(20), msg.payload.documento.cliente.conta_contabil)\nrequest.input('CNPJ', mssql.VarChar(20), msg.payload.documento.cliente.cnpj)\nrequest.input('INSCRICAO', mssql.VarChar(12), msg.payload.documento.cliente.inscricao)\nrequest.input('FANTASIA', mssql.VarChar(30), msg.payload.documento.cliente.fantasia)\nrequest.input('NOME', mssql.VarChar(100), msg.payload.documento.cliente.nome)\nrequest.input('LOGRADOURO', mssql.VarChar(5), msg.payload.documento.cliente.logradouro)\nrequest.input('ENDERECO', mssql.VarChar(50), msg.payload.documento.cliente.endereco)\nrequest.input('NUMERO', mssql.VarChar(10), msg.payload.documento.cliente.numero)\nrequest.input('COMPLEMENTO', mssql.VarChar(20), msg.payload.documento.cliente.complemento)\nrequest.input('BAIRRO', mssql.VarChar(30), msg.payload.documento.cliente.bairro)\nrequest.input('MUNICIPIO', mssql.Int, parseInt(msg.payload.documento.cliente.municipio))\nrequest.input('CIDADE', mssql.VarChar(20), msg.payload.documento.cliente.cidade)\nrequest.input('CEP', mssql.VarChar(9), msg.payload.documento.cliente.CEP)\nrequest.input('UF', mssql.VarChar(2), msg.payload.documento.cliente.UF)\nrequest.input('DDD', mssql.VarChar(3), msg.payload.documento.cliente.ddd)\nrequest.input('TELEFONE', mssql.VarChar(15), msg.payload.documento.cliente.telefone)\nrequest.input('CONTATO', mssql.VarChar(20), msg.payload.documento.cliente.contato)\n\nvar parcelas = new mssql.Table()\n\nparcelas.columns.add('nosso_numero', mssql.Int);\nparcelas.columns.add('parcela', mssql.Int);\nparcelas.columns.add('forma_pagto', mssql.VarChar(10));\nparcelas.columns.add('tipo_vencto', mssql.VarChar(3));\nparcelas.columns.add('vencto', mssql.Date);\nparcelas.columns.add('prazo', mssql.Int);\nparcelas.columns.add('valor', mssql.Money);\nparcelas.columns.add('origem', mssql.VarChar(10));\n\nmsg.payload.documento.parcelas.forEach( parcela => \n    parcelas.rows.add(\n        msg.payload.documento.nosso_numero,\n        parcela.parcela,\n        parcela.forma_pagto,\n        parcela.tipo_vencto,\n        new Date(parcela.vencto),\n        parcela.prazo,\n        parcela.valor,\n        parcela.origem\n    )\n);\n\nrequest.input('PARCELAS', parcelas)\n\nrequest.execute(procedure_name).then(function(recordsets, returnValue, affected) {\n\n    console.dir('Recordsets: ' + recordsets.length); // count of recordsets returned by the procedure\n    console.dir('Record count in first recordset: ' + recordsets[0].length); // count of rows contained in first recordset\n    console.dir('Return value: ' + returnValue); // procedure return value\n    console.dir('Recordsets return value: ' + recordsets.returnValue); // same as previous line\n    console.dir('Rows affected: ' + affected); // number of rows affected by the statemens\n    console.dir('Recordset rows affected: ' + recordsets.rowsAffected); // same as previous line\n\n    //console.log(request.parameters.output_parameter.value); // output value\n\n    msg.payload = Array.isArray(recordsets) && recordsets || [{ erro: 9997, mensagem: 'A procedure foi executada mas n√£o retornou resposta para esta solicita√ß√£o !'}];\n    console.dir(msg.payload);\n    node.send(msg);\n\n})\n.catch(function(err) {\n    console.dir('-----------------> Erro ao chamar Stored Procedure' + procedure_name + ' <-----------------\\n' + JSON.stringify(err))\n    msg.payload = err || { erro: 9999, mensagem: 'Erro desconhecido.'};\n    node.send(msg);\n});\n\n","outputs":"1","noerr":0,"x":330,"y":780,"wires":[["3c3c527e.2f99ee"]]},{"id":"5befa2a3.3faa1c","type":"function","z":"8364cdd3.e51ef","name":"SQL","func":"\nvar sql = `\n    SELECT * FROM CRT\n`\n\nvar mssql = global.get('mssql');\n\nvar request = new mssql.Request(global.get('FINANCEIRO')).query(sql).then(function(recordset) {\n    msg.payload = recordset;\n    node.send(msg);\n})\n.catch(function(err) {\n    msg.payload = err;\n    node.error(msg);\n});\n","outputs":1,"noerr":0,"x":230,"y":380,"wires":[["a3483bb4.f07c78"]]},{"id":"3c3c527e.2f99ee","type":"function","z":"8364cdd3.e51ef","name":"NOTIFY","func":"if (Array.isArray(msg.payload) && msg.payload.length > 0) {\n    \n    if (Array.isArray(msg.payload[0]) && msg.payload[0].length > 0 && msg.payload[0][0].erro === 0) {\n        return [\n            {req: msg.req, res: msg.res, payload: msg.payload[0][0]}, // mensagens de retorno\n            {payload: msg.payload[1]}, // notifica√ß√µes\n            null\n        ];\n    } else {\n        return [\n            {req: msg.req, res: msg.res, payload: msg.payload[0][0]}, // mensagens de retorno\n            null, // notifica√ß√µes\n            null\n        ];\n    }\n    \n} else {\n    return [\n        msg, \n        null, \n        null\n    ];\n}\n","outputs":"3","noerr":0,"x":700,"y":840,"wires":[["98448223.15c58","d228cf2c.9c552"],["3029d409.f846ac"],["d89f9d70.ae8ca","cf265f0e.c5ab1"]]},{"id":"ed44d050.6c7bd","type":"mqtt out","z":"8364cdd3.e51ef","name":"","topic":"","qos":"","retain":"","broker":"404ac8f7.f80bb8","x":1350,"y":840,"wires":[]},{"id":"df6f75aa.71d018","type":"http in","z":"8364cdd3.e51ef","name":"nosso_numero 1","url":"/api/financeiro/recebiveis/lancamento/nosso_numero1","method":"get","swaggerDoc":"","x":100,"y":660,"wires":[["bdad0277.6347b"]]},{"id":"bdad0277.6347b","type":"function","z":"8364cdd3.e51ef","name":"SQL","func":"var sql = \n    \"BEGIN TRY\" + '\\n' + '\\n' +\n    \n    \"   SELECT ISNULL(MAX(REC.nosso_numero), 0) AS nosso_numero FROM REC INNER JOIN REC_PED ON REC.nosso_numero = REC_PED.nosso_numero;\" + '\\n' + '\\n' +\n    \n    \"END TRY\" + '\\n' +\n    \"BEGIN CATCH\" + '\\n' + '\\n' +\n    \n    \"   DECLARE @ERR_ID INT\" + '\\n' +\n    \"   SET @ERR_ID = NEXT VALUE FOR err_log_seq\" + '\\n' +\n    \"   INSERT INTO err_log SELECT @ERR_ID AS id, ERROR_NUMBER() AS erro, ERROR_SEVERITY() AS nivel, ERROR_STATE() AS situacao, ERROR_PROCEDURE() AS procedimento, ERROR_LINE() AS linha, ERROR_MESSAGE() AS mensagem\" + '\\n' + '\\n' +\n    \n    \"END CATCH\" + '\\n'\n\nvar mssql = global.get('mssql');\n\nvar request = new mssql.Request(global.get('FINANCEIRO')).query(sql).then(function(recordset) {\n    msg.payload = recordset;\n    console.dir(recordset);\n    node.send(msg);\n})\n.catch(function(err) {\n    msg.payload = err;\n    node.error(msg);\n});","outputs":"1","noerr":0,"x":330,"y":660,"wires":[["aa019044.635c6"]]},{"id":"aa019044.635c6","type":"function","z":"8364cdd3.e51ef","name":"NOTIFY","func":"if (Array.isArray(msg.payload) && msg.payload.length > 0 && msg.payload[0].erro === undefined) {\n    \n    msg.payload = msg.payload[0];\n    return msg;\n    \n} else {\n    msg.statusCode = 500;\n    msg.payload = msg.payload[0];\n    return msg\n}\n","outputs":"1","noerr":0,"x":700,"y":660,"wires":[["60d872e8.03385c"]]},{"id":"60d872e8.03385c","type":"http response","z":"8364cdd3.e51ef","name":"","x":1030,"y":660,"wires":[]},{"id":"f864e57a.422708","type":"http in","z":"8364cdd3.e51ef","name":"nosso_numero 2","url":"/api/financeiro/recebiveis/lancamento/nosso_numero2","method":"get","swaggerDoc":"","x":100,"y":700,"wires":[["3f31c851.0c6ae8"]]},{"id":"3f31c851.0c6ae8","type":"function","z":"8364cdd3.e51ef","name":"SQL","func":"var sql = \n    \"BEGIN TRY\" + '\\n' + '\\n' +\n\n    \"   SELECT ISNULL(MAX(RCB.nosso_numero), 0) AS nosso_numero FROM RCB WHERE NOT EXISTS(SELECT * FROM RCB_PED WHERE RCB.nosso_numero = RCB_PED.nosso_numero); \" + '\\n' + '\\n' +\n\n    \"END TRY\" + '\\n' +\n    \"BEGIN CATCH\" + '\\n' + '\\n' +\n    \n    \"   DECLARE @ERR_ID INT\" + '\\n' +\n    \"   SET @ERR_ID = NEXT VALUE FOR err_log_seq\" + '\\n' +\n    \"   INSERT INTO err_log SELECT @ERR_ID AS id, ERROR_NUMBER() AS erro, ERROR_SEVERITY() AS nivel, ERROR_STATE() AS situacao, ERROR_PROCEDURE() AS procedimento, ERROR_LINE() AS linha, ERROR_MESSAGE() AS mensagem\" + '\\n' + '\\n' +\n    \n    \"END CATCH\"\n\nvar mssql = global.get('mssql');\n\nvar request = new mssql.Request(global.get('FINANCEIRO')).query(sql).then(function(recordset) {\n    msg.payload = recordset;\n    console.dir(recordset);\n    node.send(msg);\n})\n.catch(function(err) {\n    msg.payload = err;\n    node.error(msg);\n});","outputs":"1","noerr":0,"x":330,"y":700,"wires":[["4c3881c8.aa7c9"]]},{"id":"4c3881c8.aa7c9","type":"function","z":"8364cdd3.e51ef","name":"NOTIFY","func":"if (Array.isArray(msg.payload) && msg.payload.length > 0 && msg.payload[0].erro === undefined) {\n    \n    msg.payload = msg.payload[0];\n    return msg;\n    \n} else {\n    msg.statusCode = 500;\n    msg.payload = msg.payload[0];\n    return msg\n}\n","outputs":"1","noerr":0,"x":700,"y":700,"wires":[["301f8ef0.bda732"]]},{"id":"301f8ef0.bda732","type":"http response","z":"8364cdd3.e51ef","name":"","x":1030,"y":700,"wires":[]},{"id":"a244e65d.dfaac8","type":"http in","z":"8364cdd3.e51ef","name":"login","url":"/api/usuario/login","method":"post","swaggerDoc":"","x":70,"y":540,"wires":[["7c964b17.f489d4"]]},{"id":"eec054ce.d02158","type":"http response","z":"8364cdd3.e51ef","name":"","x":550,"y":540,"wires":[]},{"id":"7c964b17.f489d4","type":"function","z":"8364cdd3.e51ef","name":"SQL","func":"var sql = `\n    DECLARE @LOGIN NVARCHAR(50)\n    DECLARE @SENHA NVARCHAR(50)\n\n    SET @LOGIN = '${msg.payload.login}'\n    SET @SENHA = '${msg.payload.senha}'\n    \n    SELECT *\n    FROM\n    \tUSR\n    WHERE\n       login = @LOGIN AND\n       senha = @SENHA\n`\n\nvar mssql = global.get('mssql');\n\nvar request = new mssql.Request(global.get('FINANCEIRO')).query(sql).then(function(recordset) {\n    if (Array.isArray(recordset) && recordset.length > 0) {\n        msg.payload = recordset[0];\n    } else {\n        msg.payload = {};\n    }\n    node.send(msg);\n})\n.catch(function(err) {\n    msg.payload = err;\n    node.error(msg);\n});","outputs":1,"noerr":0,"x":330,"y":540,"wires":[["eec054ce.d02158"]]},{"id":"c7a9e9a0.988268","type":"http in","z":"8364cdd3.e51ef","name":"cobranca","url":"/api/financeiro/recebiveis/cobranca/tarefa/:tarefa","method":"post","swaggerDoc":"","x":80,"y":840,"wires":[["62ec6214.acbf7c"]]},{"id":"62ec6214.acbf7c","type":"function","z":"8364cdd3.e51ef","name":"SQL","func":"/*\nvar tarefa_atual = \n{\n    id: 0,\n    nome: 'Cobran√ßa Banc√°ria',\n    titulo: 'Gerar Remessa de Cobran√ßa',\n    descricao: 'Saldo R$ ' + msg.payload.documento.cobranca.reduce( (total, c) => total + c.parcelas.filter( (p) => !p.selected && !p.carteira).reduce( (soma, p) => soma + p.valor, 0.0), 0.0).toFixed(2).replace('.', ','), \n    detalhes: '',\n    documento: JSON.stringify(\n        msg.payload.documento.cobranca.map( c => {\n            \n            var cobranca = {\n                nosso_numero: c.nosso_numero,\n                pedido: c.pedido,\n                cliente: c.cliente,\n                parcelas: c.parcelas.map( (p) => {\n                \n                    var parcela = {\n                        vencto: p.vencto,\n                        origem: p.origem,\n                        forma_pagto: p.forma_pagto,\n                        tipo_vencto: p.tipo_vencto,\n                        parcela: p.parcela,\n                        prazo: p.prazo,\n                        valor: p.valor\n                    }\n                    \n                    if (p.carteira) {\n                        parcela.carteira = p.carteira;\n                        parcela.remessa = p.remessa;\n                    } else if (p.selected) {\n                        parcela.carteira = msg.payload.documento.carteira.nome;\n                        parcela.remessa = new Date().toISOString();\n                    }\n                    \n                    return parcela;\n                    \n                })\n            };\n            \n            return cobranca;\n        })\n    ),\n    atribuir: 'financeiro',\n    atribuido: null,\n    form: '/recebiveis/cobranca/',\n    parametros: null,\n    prazo: null,\n    criado: new Date(),\n    concluido: null,\n    versao: 0\n}\n\nvar tarefa_remessa = \n{\n    id: 0,\n    nome: 'Remessa de Cobran√ßa',\n    titulo: msg.payload.documento.carteira.nome,\n    descricao: 'Total R$ ' + msg.payload.documento.cobranca.reduce( (total, c) => total + c.parcelas.filter( (p) => p.selected && !p.carteira).reduce( (soma, p) => soma + p.valor, 0.0), 0.0).toFixed(2).replace('.', ','), \n    detalhes: '',\n    documento: JSON.stringify({ \n        \n        carteira: msg.payload.documento.carteira,\n        data: new Date().toISOString(),\n        \n        remessa: msg.payload.documento.cobranca.filter( cobranca => cobranca.parcelas.find( parcela => parcela.selected)).map( c => {\n            var cobranca = {\n                nosso_numero: c.nosso_numero,\n                pedido: c.pedido,\n                cliente: c.cliente,\n                parcelas: c.parcelas.filter( parcela => parcela.selected).map( (p) => {\n                \n                    var parcela = {\n                        vencto: p.vencto,\n                        origem: p.origem,\n                        forma_pagto: p.forma_pagto,\n                        tipo_vencto: p.tipo_vencto,\n                        parcela: p.parcela,\n                        prazo: p.prazo,\n                        valor: p.valor\n                    }\n                    \n                    parcela.carteira = msg.payload.documento.carteira.nome;\n                    parcela.remessa = new Date().toISOString();\n\n                    return parcela;\n                    \n                })\n            };\n            \n            return cobranca;\n        }),\n        \n        bordero: msg.payload.documento.bordero\n        \n    }),\n    atribuir: 'cobranca',\n    atribuido: null,\n    form: '/recebiveis/remessa/',\n    parametros: null,\n    prazo: null,\n    criado: new Date(),\n    concluido: null,\n    versao: 0\n}\n*/\n\n/*\nvar sql = `\n\nSET NOCOUNT ON\n\nDECLARE @NOSSO_NUMERO INT\nDECLARE @PARCELA INT\nDECLARE @CARTEIRA INT\n\nDECLARE @CONTA_CONTABIL VARCHAR(20)\nDECLARE @CNPJ VARCHAR(20)\nDECLARE @INSCRICAO VARCHAR(12)\nDECLARE @FANTASIA VARCHAR(30)\nDECLARE @NOME VARCHAR(100)\nDECLARE @LOGRADOURO VARCHAR(5)\nDECLARE @ENDERECO VARCHAR(50)\nDECLARE @NUMERO VARCHAR(10)\nDECLARE @COMPLEMENTO VARCHAR(20)\nDECLARE @BAIRRO VARCHAR(30)\nDECLARE @MUNICIPIO INT\nDECLARE @CIDADE VARCHAR(20)\nDECLARE @CEP CHAR(9)\nDECLARE @UF CHAR(2)\nDECLARE @DDD VARCHAR(3)\nDECLARE @TELEFONE VARCHAR(15)\nDECLARE @CONTATO VARCHAR(20)\n\nDECLARE @FORMA_PAGTO VARCHAR(10)\nDECLARE @TIPO_VENCTO VARCHAR(3)\nDECLARE @VENCTO DATE\nDECLARE @PRAZO INT\nDECLARE @PORCENTAGEM DECIMAL(18, 3)\nDECLARE @VALOR MONEY\nDECLARE @DESCRICAO VARCHAR(50)\nDECLARE @ORIGEM VARCHAR(10)\n\nDECLARE @TAREFA_ATUAL INT\nDECLARE @VERSAO INT\n\nDECLARE @NOVA_TAREFA INT\n\nDECLARE @ULTIMA_VERSAO INT\nDECLARE @CONCLUIDO DATETIME\n\nDECLARE @PROX_TAREFA INT\nDECLARE @PROX_TAREFA_VERSAO INT\n\nDECLARE @NOVA_NAV INT\n\nDECLARE @TRF TABLE (\n\t[id] [int] NOT NULL,\n\t[nome] [nvarchar](100) NOT NULL,\n\t[titulo] [nvarchar](50) NULL,\n\t[descricao] [nvarchar](50) NULL,\n\t[atribuir] [nvarchar](50) NULL,\n\t[form] [nvarchar](100) NOT NULL,\n\t[parametros] [nvarchar](max) NULL,\n\t[prazo] [datetime] NULL,\n\t[criado] [datetime] NOT NULL,\n\t[concluido] [datetime] NULL,\n\t[versao] [int],\n\t[topico] [nvarchar](100) NOT NULL)\n\t\nBEGIN TRY\n    BEGIN TRANSACTION\n\n    -------------------------------------- ATUALIZACAO DAS TAREFAS ----------------------------------------------\n    SET @TAREFA_ATUAL = CAST('${msg.req.params.tarefa}' AS INT) \n    SET @VERSAO = CAST('${msg.payload.versao}' AS INT)\n\n    UPDATE TRF SET\n\t    concluido = GETDATE()\n    WHERE\n        id = @TAREFA_ATUAL\n        AND concluido IS NULL\n        AND versao = @VERSAO\n\n    IF @@ROWCOUNT != 1\n    BEGIN\n\n        ROLLBACK TRANSACTION\n\n        SELECT TOP 1 @ULTIMA_VERSAO = versao, @CONCLUIDO = concluido FROM TRF WHERE id = @TAREFA_ATUAL\n\n        IF (NOT @CONCLUIDO IS NULL)\n        BEGIN\n            INSERT INTO ERR_LOG (erro, mensagem) SELECT erro, mensagem FROM ERR WHERE erro = 7010\n            SELECT * FROM ERR WHERE erro = 7010\n        END\n        ELSE IF (@ULTIMA_VERSAO <> @VERSAO)\n        BEGIN\n            INSERT INTO ERR_LOG (erro, mensagem) SELECT erro, mensagem FROM ERR WHERE erro = 7450\n            SELECT * FROM ERR WHERE erro = 7450\n        END\n\n        RETURN\n    END\n\n    INSERT INTO @TRF SELECT id, nome, titulo, descricao, atribuir, form, parametros, prazo, criado, concluido, versao, '/tarefas/concluida/' + LTRIM(RTRIM(atribuir)) AS topico FROM TRF WHERE id = @TAREFA_ATUAL\n\n    ---------------------------------------------------- grava as parcelas ----------------------------------------------------\n` +\n\nmsg.payload.documento.cobranca.reduce( (sql, c) => \n\n    sql + c.parcelas.filter( p => p.selected).reduce( (sql, p) => \n    \n        sql + \n`\n        \n    ----------------------------------------------------------------------------------------------------------\n    -- insere nova parcela => nosso_numero:  + ${c.nosso_numero} + ', parcela: ' + ${p.parcela} + ', carteira: ' + ${msg.payload.documento.carteira.id}\n    ----------------------------------------------------------------------------------------------------------\n    SET @NOSSO_NUMERO = CAST('${c.nosso_numero}' AS INT)\n    SET @PARCELA = CAST('${p.parcela}' AS INT)\n    SET @CARTEIRA = CAST('${msg.payload.documento.carteira.id}' AS INT)\n    \n    IF EXISTS(SELECT NOSSO_NUMERO FROM COB WHERE nosso_numero = @NOSSO_NUMERO AND parcela = @PARCELA AND carteira = @CARTEIRA)\n    BEGIN\n    \n       ROLLBACK TRANSACTION\n    \n       INSERT INTO ERR_LOG (erro, mensagem) SELECT erro, mensagem FROM ERR WHERE erro = 1123\n       SELECT * FROM ERR WHERE erro = 1123\n    \n       RETURN\n    END\n    \n    SET @NOSSO_NUMERO = CAST('${c.nosso_numero}' AS INT)\n    SET @PARCELA = CAST('${p.parcela}' AS INT)\n    SET @CARTEIRA = CAST('${msg.payload.documento.carteira.id}' AS INT)\n    \n    SET @CONTA_CONTABIL = CAST('${c.cliente.conta_contabil}' AS VARCHAR(20)) \n    SET @CNPJ = CAST('${c.cliente.cnpj}' AS VARCHAR(20))\n    SET @INSCRICAO = CAST('${c.cliente.inscricao}' AS VARCHAR(14))\n    SET @FANTASIA = CAST('${c.cliente.fantasia}' AS VARCHAR(30))\n    SET @NOME = CAST('${c.cliente.nome}' AS VARCHAR(100))\n    SET @LOGRADOURO = CAST('${c.cliente.logradouro}' AS VARCHAR(5))\n    SET @ENDERECO = CAST('${c.cliente.endereco}' AS VARCHAR(50))\n    SET @NUMERO = CAST('${c.cliente.numero}' AS VARCHAR(10))\n    SET @COMPLEMENTO = CAST('${c.cliente.complemento}' AS VARCHAR(20))\n    SET @BAIRRO = CAST('${c.cliente.bairro}' AS VARCHAR(30))\n    SET @MUNICIPIO = CAST('${c.cliente.municipio}' AS INT)\n    SET @CIDADE = CAST('${c.cliente.cidade}' AS VARCHAR(20))\n    SET @CEP = CAST('${c.cliente.CEP}' AS CHAR(9))\n    SET @UF = CAST('${c.cliente.UF}' AS CHAR(2))\n    SET @DDD = CAST('${c.cliente.ddd}' AS VARCHAR(3))\n    SET @TELEFONE = CAST('${c.cliente.telefone}' AS VARCHAR(15))\n    SET @CONTATO = CAST('${c.cliente.contato}' AS VARCHAR(20))\n    \n    SET @PARCELA = CAST('${p.parcela}' AS INT)\n    SET @FORMA_PAGTO = CAST('${p.forma_pagto}' AS VARCHAR(10))\n    SET @TIPO_VENCTO = CAST('${p.tipo_vencto}' AS VARCHAR(3))\n    SET @VENCTO = CAST('${p.vencto}' AS DATE)\n    SET @PRAZO = CAST('${p.prazo}' AS INT)\n    SET @VALOR = CAST('${p.valor}' AS MONEY)\n    SET @ORIGEM = CAST('${p.origem}' AS VARCHAR(10))\n    \n    INSERT INTO COB (nosso_numero, parcela, carteira, remessa, retorno, situacao, conta_contabil, forma_pagto, tipo_vencto, vencto, prazo, valor, origem, cnpj, inscricao, fantasia, nome, logradouro, endereco, numero, complemento, bairro, municipio, cidade, cep, uf, ddd, telefone, contato)\n    VALUES (@NOSSO_NUMERO, @PARCELA, @CARTEIRA, GETDATE(), NULL, NULL, @CONTA_CONTABIL, @FORMA_PAGTO, @TIPO_VENCTO, @VENCTO, @PRAZO, @VALOR, @ORIGEM, @CNPJ, @INSCRICAO, @FANTASIA, @NOME, @LOGRADOURO, @ENDERECO, @NUMERO, @COMPLEMENTO, @BAIRRO, @MUNICIPIO, @CIDADE, @CEP, @UF, @DDD, @TELEFONE, @CONTATO)\n    \n    UPDATE CRT SET\n       remessa = remessa + @VALOR\n    WHERE id = @CARTEIRA\n\n`\n    , '')\n\n, '') +\n\n(msg.payload.documento.cobranca.find( (c) => c.parcelas.find( (p) => !p.selected && !p.carteira) ) ?\n\n`\n    ----------------------- TAREFA AINDA PENDENTE, RECRIA A TAREFA -----------------------\n    SELECT TOP 1 @PROX_TAREFA = id, @PROX_TAREFA_VERSAO = versao FROM TRF WHERE nome = '${tarefa_atual.nome}' AND concluido IS NULL\n\n    IF @PROX_TAREFA IS NULL\n    BEGIN\n\n        SET @PROX_TAREFA = NEXT VALUE FOR tarefa_seq\n\n        INSERT INTO TRF\n            (id,\n            nome,\n            titulo,\n            descricao,\n            detalhes,\n            documento,\n            atribuir,\n            form,\n            parametros,\n            prazo,\n            criado,\n            concluido)\n        VALUES\n            (@PROX_TAREFA,\n            '${tarefa_atual.nome}',\n            '${tarefa_atual.titulo}',\n            'Saldo R$ ${msg.payload.documento.cobranca.reduce( (total, c) => total + c.parcelas.filter( (p) => !p.selected && !p.carteira).reduce( (soma, p) => soma + p.valor, 0.0), 0.0).toFixed(2).replace('.', ',')}',\n            '',\n            '${tarefa_atual.documento}',\n            '${tarefa_atual.atribuir}',\n            '${tarefa_atual.form}',\n            NULL,\n            NULL,\n            GETDATE(),\n            NULL)\n\n        SET @NOVA_NAV = NEXT VALUE FOR tarefa_nav_seq\n\n        INSERT TRFN (transacao, tarefa_origem, tarefa_destino) VALUES (NEXT VALUE FOR tarefa_nav_seq, @TAREFA_ATUAL, @PROX_TAREFA)\n\n        INSERT INTO @TRF SELECT id, nome, titulo, descricao, atribuir, form, parametros, prazo, criado, concluido, versao, '/tarefas/nova/' + LTRIM(RTRIM(atribuir)) AS topico FROM TRF WHERE id = @PROX_TAREFA\n\n    END\n    ELSE\n    BEGIN\n\n        UPDATE TRF SET\n            descricao = 'Saldo R$${msg.payload.documento.cobranca.reduce( (total, c) => total + c.parcelas.filter( (p) => !p.selected && !p.carteira).reduce( (soma, p) => soma + p.valor, 0.0), 0.0).toFixed(2).replace('.', ',')}',\n            documento = '${tarefa_atual.documento}'\n        WHERE\n            id = @PROX_TAREFA\n            AND versao = @PROX_TAREFA_VERSAO\n\n        IF @@ROWCOUNT != 1\n        BEGIN\n\n            ROLLBACK TRANSACTION\n\n            SELECT TOP 1 @ULTIMA_VERSAO = versao, @CONCLUIDO = concluido FROM TRF WHERE id = @TAREFA_ATUAL\n\n            IF (NOT @CONCLUIDO IS NULL)\n            BEGIN\n                INSERT INTO ERR_LOG (erro, mensagem) SELECT erro, mensagem FROM ERR WHERE erro = 7010\n                SELECT * FROM ERR WHERE erro = 7010\n            END\n            ELSE IF (@ULTIMA_VERSAO <> @VERSAO)\n            BEGIN\n                INSERT INTO ERR_LOG (erro, mensagem) SELECT erro, mensagem FROM ERR WHERE erro = 7450\n                SELECT * FROM ERR WHERE erro = 7450\n            END\n\n            RETURN\n        END\n\n        INSERT INTO @TRF SELECT id, nome, titulo, descricao, atribuir, form, parametros, prazo, criado, concluido, versao, '/tarefas/atualizada/' + LTRIM(RTRIM(atribuir)) AS topico FROM TRF WHERE id = @PROX_TAREFA\n\n    END\n`\n\n:\n\n`\n   -- tarefa finalizada e nenhuma tarefa nova criada --\n`\n\n) +\n\n(msg.payload.documento.cobranca.find( (c) => c.parcelas.find( (p) => p.selected && !p.carteira) ) ?\n\n`\n   -------------------------- PROXIMA TAREFA - REMESSA -----------------------\n\n    SET @PROX_TAREFA = NEXT VALUE FOR tarefa_seq\n\n    INSERT INTO TRF\n        (id,\n        nome,\n        titulo,\n        descricao,\n        detalhes,\n        documento,\n        atribuir,\n        form,\n        parametros,\n        prazo,\n        criado,\n        concluido)\n    VALUES\n        (@PROX_TAREFA,\n        '${tarefa_remessa.nome}',\n        '${tarefa_remessa.titulo}',\n        '${tarefa_remessa.descricao}',\n        '',\n        '${tarefa_remessa.documento}',\n        '${tarefa_remessa.atribuir}',\n        '${tarefa_remessa.form}',\n        NULL,\n        NULL,\n        GETDATE(),\n        NULL)\n\n    SET @NOVA_NAV = NEXT VALUE FOR tarefa_nav_seq\n\n    INSERT TRFN (transacao, tarefa_origem, tarefa_destino) VALUES (NEXT VALUE FOR tarefa_nav_seq, @TAREFA_ATUAL, @PROX_TAREFA)\n\n    INSERT INTO @TRF SELECT id, nome, titulo, descricao, atribuir, form, parametros, prazo, criado, concluido, versao, '/tarefas/nova/' + LTRIM(RTRIM(atribuir)) AS topico FROM TRF WHERE id = @PROX_TAREFA\n`\n\n:\n\n`\n    -- tarefa finalizada e nenhuma tarefa nova criada --\n`\n\n) +\n\n`\n    COMMIT TRANSACTION\n\nEND TRY\nBEGIN CATCH\n\n    DECLARE @ERR_ID INT\n    DECLARE @ERROR_NUMBER INT\n    DECLARE @ERROR_SEVERITY INT\n    DECLARE @ERROR_STATE INT\n    DECLARE @ERROR_PROCEDURE INT\n    DECLARE @ERROR_LINE INT\n    DECLARE @ERROR_MESSAGE NVARCHAR(MAX)\n\n    SET @ERROR_NUMBER = ERROR_NUMBER()\n    SET @ERROR_SEVERITY = ERROR_SEVERITY()\n    SET @ERROR_STATE = ERROR_STATE()\n    SET @ERROR_PROCEDURE = ERROR_PROCEDURE()\n    SET @ERROR_LINE = ERROR_LINE()\n    SET @ERROR_MESSAGE = ERROR_MESSAGE()\n\n    ROLLBACK TRANSACTION\n\n    SET @ERR_ID = NEXT VALUE FOR err_log_seq\n    INSERT INTO err_log SELECT @ERR_ID AS id, @ERROR_NUMBER AS erro, @ERROR_SEVERITY AS nivel, @ERROR_STATE AS situacao, @ERROR_PROCEDURE AS procedimento, @ERROR_LINE AS linha, @ERROR_MESSAGE AS mensagem\n\n    SELECT * FROM err_log WHERE id = @ERR_ID\n\n    RETURN\nEND CATCH\n\nSELECT * FROM @TRF\n`\n*/\n\nvar mssql = global.get('mssql');\n\nvar procedure_name = 'COB_INSERE'\n\nvar request = new mssql.Request(global.get('FINANCEIRO'));\n\nrequest.input('TAREFA_ATUAL', mssql.Int, parseInt(msg.payload.id))\nrequest.input('VERSAO', mssql.Int, parseInt(msg.payload.versao))\n\nvar tarefas = new mssql.Table()\n\ntarefas.columns.add('id', mssql.Int);\ntarefas.columns.add('nome', mssql.NVarChar(100));\ntarefas.columns.add('titulo', mssql.NVarChar(50));\ntarefas.columns.add('descricao', mssql.NVarChar(50));\ntarefas.columns.add('detalhes', mssql.NVarChar(100));\ntarefas.columns.add('documento', mssql.NVarChar(mssql.MAX));\ntarefas.columns.add('atribuir', mssql.NVarChar(50));\ntarefas.columns.add('atribuido', mssql.NVarChar(50));\ntarefas.columns.add('form', mssql.NVarChar(100));\ntarefas.columns.add('parametros', mssql.NVarChar(mssql.MAX));\ntarefas.columns.add('prazo', mssql.DateTime2(7));\ntarefas.columns.add('criado', mssql.DateTime2(7));\ntarefas.columns.add('concluido', mssql.DateTime2(7));\ntarefas.columns.add('versao', mssql.Int);\n\n/*\nif (msg.payload.documento.parcelas.find( parcela => parcela.forma_pagto === 'COBRANCA')) {\n\n    var tarefa = \n    {\n        id: 0,\n        nome: 'Cobran√ßa Banc√°ria',\n        titulo: 'Gerar Remessa de Cobran√ßa',\n        descricao: 'Saldo R$ ' + msg.payload.documento.parcelas.reduce( (total, parcela) => total + parcela.valor, 0).toFixed(2).replace('.', ','), \n        detalhes: '',\n        documento: JSON.stringify(\n            {\n                nosso_numero: msg.payload.documento.nosso_numero,\n                pedido: msg.payload.documento.numero,\n                cliente: msg.payload.documento.cliente,\n                parcelas: msg.payload.documento.parcelas.filter( p => p.forma_pagto === 'COBRANCA')\n            }),\n        atribuir: 'financeiro',\n        atribuido: null,\n        form: '/recebiveis/cobranca/',\n        parametros: null,\n        prazo: null,\n        criado: new Date(),\n        concluido: null,\n        versao: 0\n    }    \n    \n    request.input('TAREFA_COBRANCA_NOME', mssql.VarChar(100), tarefa.nome)\n    \n    //TODO Calcular a soma das parcelas em cobran√ßa em aberto\n    request.input('TAREFA_COBRANCA_DESCRICAO', 'Saldo R$ ' + msg.payload.documento.parcelas.reduce( (total, parcela) => total + parcela.valor, 0).toFixed(2).replace('.', ','))\n\n    tarefas.rows.add(\n        0,\n        tarefa.nome,\n        tarefa.titulo,\n        tarefa.descricao,\n        tarefa.detalhes,\n        tarefa.documento, \n        tarefa.atribuir,\n        tarefa.atribuido,\n        tarefa.form,\n        tarefa.parametros,\n        tarefa.prazo,\n        tarefa.criado,\n        tarefa.concluido,\n        tarefa.versao\n    );\n    \n}\n*/\n\nrequest.input('TAREFAS', tarefas)\n\nvar cobrancas = new mssql.Table()\n\ncobrancas.columns.add('carteira', mssql.Int);\ncobrancas.columns.add('nosso_numero', mssql.Int);\ncobrancas.columns.add('conta_contabil', mssql.VarChar(56));\ncobrancas.columns.add('cnpj', mssql.VarChar(20))\n\ncobrancas.columns.add('inscricao', mssql.VarChar(12))\ncobrancas.columns.add('fantasia', mssql.VarChar(30))\ncobrancas.columns.add('nome', mssql.VarChar(100))\ncobrancas.columns.add('logradouro', mssql.VarChar(5))\ncobrancas.columns.add('endereco', mssql.VarChar(50))\ncobrancas.columns.add('numero', mssql.VarChar(10))\ncobrancas.columns.add('complemento', mssql.VarChar(20))\ncobrancas.columns.add('bairro', mssql.VarChar(30))\ncobrancas.columns.add('municipio', mssql.Int);\ncobrancas.columns.add('cidade', mssql.VarChar(20))\ncobrancas.columns.add('cep', mssql.VarChar(9))\ncobrancas.columns.add('uf', mssql.Char(2))\ncobrancas.columns.add('ddd', mssql.VarChar(3))\ncobrancas.columns.add('telefone', mssql.VarChar(15))\ncobrancas.columns.add('contato', mssql.VarChar(20))\n\nmsg.payload.documento.cobranca.forEach( (cobranca) => {\n    if (cobranca.parcelas.find( parcela => parcela.selected)) { \n\n        cobrancas.rows.add(\n\n            msg.payload.documento.carteira.id,\n            parseInt(cobranca.nosso_numero),\n            cobranca.cliente.conta_contabil,\n            cobranca.cliente.cnpj,\n            \n            '', '', '', '', '', '', '', '', 0, '', '', '', '', '', ''\n            \n        );\n        \n    }\n\n})\n\nrequest.input('COBRANCA', cobrancas)\n\nvar parcelas = new mssql.Table()\n\nparcelas.columns.add('carteira', mssql.Int);\nparcelas.columns.add('nosso_numero', mssql.Int);\nparcelas.columns.add('parcela', mssql.Int);\n\nparcelas.columns.add('forma_pagto', mssql.VarChar(10));\nparcelas.columns.add('tipo_vencto', mssql.VarChar(3));\nparcelas.columns.add('vencto', mssql.Date);\nparcelas.columns.add('prazo', mssql.Int);\nparcelas.columns.add('valor', mssql.Money);\n\nmsg.payload.documento.cobranca.forEach( (cobranca) => \n    cobranca.parcelas.filter( parcela => parcela.selected).forEach( (parcela) => \n    \n        {\n\n            parcelas.rows.add(\n                \n                msg.payload.documento.carteira.id,\n                parseInt(cobranca.nosso_numero),\n                parcela.parcela,\n                \n                parcela.forma_pagto,\n                parcela.tipo_vencto,\n                new Date(parcela.vencto),\n                parcela.prazo,\n                parcela.valor\n                \n            )\n        }\n    )\n)\n\n/*    \nmsg.payload.documento.parcelas.forEach( parcela => \n    parcelas.rows.add(\n        msg.payload.documento.nosso_numero,\n        parcela.parcela,\n        parcela.forma_pagto,\n        parcela.tipo_vencto,\n        new Date(parcela.vencto),\n        parcela.prazo,\n        parcela.valor,\n        parcela.origem\n    )\n);\n*/\n\nrequest.input('PARCELAS', parcelas)\n\nrequest.execute(procedure_name).then(function(recordsets, returnValue, affected) {\n\n    /*console.dir('Recordsets: ' + recordsets.length); // count of recordsets returned by the procedure\n    console.dir('Record count in first recordset: ' + recordsets[0].length); // count of rows contained in first recordset\n    console.dir('Return value: ' + returnValue); // procedure return value\n    console.dir('Recordsets return value: ' + recordsets.returnValue); // same as previous line\n    console.dir('Rows affected: ' + affected); // number of rows affected by the statemens\n    console.dir('Recordset rows affected: ' + recordsets.rowsAffected);*/ // same as previous line\n\n    //console.log(request.parameters.output_parameter.value); // output value\n\n    msg.payload = Array.isArray(recordsets) && recordsets || [{ erro: 9997, mensagem: 'A procedure foi executada mas n√£o retornou resposta para esta solicita√ß√£o !'}];\n    console.log(msg.payload);\n    node.send(msg);\n\n})\n.catch(function(err) {\n    console.log(err)\n    console.log('*****************************  Erro ao chamar Stored Procedure ' + procedure_name + '  *****************************\\n' + (err !== null && typeof err === 'object' ? JSON.stringify(err, null, 2) : err || \"Erro desconhecido\"))\n    msg.payload = err !== null && typeof err === 'object' ? err : { erro: 9999, mensagem: err || \"Erro desconhecido\"};\n    node.error(msg);\n    node.send(msg);\n});\n\n","outputs":"1","noerr":0,"x":330,"y":840,"wires":[["3c3c527e.2f99ee"]]},{"id":"868362a7.8380e","type":"function","z":"8364cdd3.e51ef","name":"","func":"msg.payload = [ { \"id\": 1339, \"nome\": \"Lan√ßamentos a Receber\", \"titulo\": \"Pedido 74782\", \"descricao\": \"CERAMICA VELAS DE IGNICAO NGK BRASIL LTDA\", \"atribuir\": \"faturamento\", \"form\": \"/recebiveis/lancamento/\", \"parametros\": null, \"prazo\": null, \"criado\": \"2016-12-09T09:38:59.156Z\", \"concluido\": \"2016-12-09T09:39:21.036Z\" }, { \"id\": 1340, \"nome\": \"Cobran√ßa Banc√°ria\", \"titulo\": \"Gerar Remessa de Cobran√ßa\", \"descricao\": \"\", \"atribuir\": \"financeiro\", \"form\": \"/recebiveis/cobranca/\", \"parametros\": null, \"prazo\": null, \"criado\": \"2016-12-09T09:39:21.036Z\", \"concluido\": null } ]\nif (Array.isArray(msg.payload) && msg.payload.length > 0 && msg.payload[0].erro === undefined) {\n    \n    var payload = msg.payload;\n    msg.payload = {erro: 0, mensagem: 'Tarefa concluida com sucesso !'};\n    \n    var msgs = []\n    \n    msgs.push(msg);\n    \n    msgs.push({\n        topic: '/tarefas/concluida/' + payload[0].atribuir,\n        payload: payload[0]\n    });\n\n    if (msg.payload.length > 1) {\n        msgs.push({\n            topic: '/tarefas/nova/' + payload[1].atribuir,\n            payload: payload[1]\n        })\n    }\n    \n    return msgs;\n    \n} else {\n    msg.statusCode = 500;\n    msg.payload = msg.payload[0];\n    return [msg, null, null]\n}\n","outputs":"3","noerr":0,"x":330,"y":1060,"wires":[["eac487c2.e4fd18"],["c6c0af7e.74a3b"],["8a232cb9.48858"]]},{"id":"eac487c2.e4fd18","type":"debug","z":"8364cdd3.e51ef","name":"","active":true,"console":"false","complete":"payload","x":530,"y":1020,"wires":[]},{"id":"73b8ee1b.e494f","type":"inject","z":"8364cdd3.e51ef","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":100,"y":1060,"wires":[["868362a7.8380e"]]},{"id":"c6c0af7e.74a3b","type":"debug","z":"8364cdd3.e51ef","name":"","active":true,"console":"false","complete":"payload","x":530,"y":1060,"wires":[]},{"id":"8a232cb9.48858","type":"debug","z":"8364cdd3.e51ef","name":"","active":true,"console":"false","complete":"payload","x":530,"y":1100,"wires":[]},{"id":"ad624c77.f90af","type":"function","z":"8364cdd3.e51ef","name":"tarefa","func":"msg.topic = msg.payload.topico;\n\nreturn msg;","outputs":1,"noerr":0,"x":1190,"y":840,"wires":[["ed44d050.6c7bd","aa2f6b5e.bfa938"]]},{"id":"3029d409.f846ac","type":"split","z":"8364cdd3.e51ef","name":"","splt":"\\n","x":1030,"y":840,"wires":[["ad624c77.f90af"]]},{"id":"98448223.15c58","type":"function","z":"8364cdd3.e51ef","name":"erro","func":"if ((msg.payload.erro && msg.payload.erro !== 0) || (msg.payload.number) || (msg.payload.message)) {\n    msg.statusCode = 500;\n\n    msg.payload = msg.payload || {};\n    msg.payload.erro = msg.payload.erro || msg.payload.error || msg.payload.number || 9999;\n    msg.payload.mensagem = msg.payload.mensagem || msg.payload.message || 'Ocorreu um erro interno ao executar a sua solicita√ß√£o.'\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":1030,"y":800,"wires":[["f8c2fa62.c010c8"]]},{"id":"f8c2fa62.c010c8","type":"http response","z":"8364cdd3.e51ef","name":"","x":1190,"y":800,"wires":[]},{"id":"aa2f6b5e.bfa938","type":"debug","z":"8364cdd3.e51ef","name":"","active":false,"console":"false","complete":"payload","x":1370,"y":900,"wires":[]},{"id":"bb43e898.60ca18","type":"function","z":"8364cdd3.e51ef","name":"","func":"msg.payload = {\n  \"id\": 1307,\n  \"nome\": \"Lan√ßamentos a Receber\",\n  \"titulo\": \"Pedido 74749\",\n  \"concluido\": null,\n  \"versao\": {\n    \"type\": \"Buffer\",\n    \"data\": [\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      8,\n      10\n    ]\n  }\n}\nvar str = String.fromCharCode.apply(null, msg.payload.versao.data);\n    \nmsg.payload.buffer = str;\n\nreturn msg;\n","outputs":"1","noerr":0,"x":330,"y":1180,"wires":[["ef7a9db7.1cbc4"]]},{"id":"8b3d3c2f.2b4c2","type":"inject","z":"8364cdd3.e51ef","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":100,"y":1180,"wires":[["bb43e898.60ca18"]]},{"id":"ef7a9db7.1cbc4","type":"debug","z":"8364cdd3.e51ef","name":"","active":true,"console":"false","complete":"payload","x":530,"y":1180,"wires":[]},{"id":"d228cf2c.9c552","type":"debug","z":"8364cdd3.e51ef","name":"","active":true,"console":"false","complete":"payload","x":1050,"y":760,"wires":[]},{"id":"d2429897.7a4338","type":"http response","z":"8364cdd3.e51ef","name":"","x":510,"y":1260,"wires":[]},{"id":"391ac67e.88e51a","type":"catch","z":"8364cdd3.e51ef","name":"","scope":null,"x":80,"y":1280,"wires":[["dfe50827.9aa608","c41d6a42.f218a8"]]},{"id":"dfe50827.9aa608","type":"debug","z":"8364cdd3.e51ef","name":"","active":true,"console":"false","complete":"payload.documento.cobranca","x":420,"y":1300,"wires":[]},{"id":"c41d6a42.f218a8","type":"function","z":"8364cdd3.e51ef","name":"erro","func":"msg.statusCode = 500;\n\nreturn msg;","outputs":1,"noerr":0,"x":330,"y":1260,"wires":[["d2429897.7a4338"]]},{"id":"43ed355d.7525fc","type":"http in","z":"8364cdd3.e51ef","name":"remessa","url":"/api/financeiro/recebiveis/remessa/tarefa/:tarefa","method":"post","swaggerDoc":"","x":80,"y":900,"wires":[["7e5e3d00.919844"]]},{"id":"7e5e3d00.919844","type":"function","z":"8364cdd3.e51ef","name":"SQL","func":"var tarefa_retorno = \n{\n    id: 0,\n    nome: 'Retorno de Cobran√ßa',\n    titulo: msg.payload.documento.carteira.nome,\n    descricao: 'Total R$ ' + msg.payload.documento.remessa.reduce( (total, c) => total + c.parcelas.reduce( (soma, p) => soma + p.valor, 0), 0).toFixed(2).replace('.', ','), \n    detalhes: '',\n    documento: JSON.stringify({ \n        \n        carteira: msg.payload.documento.carteira,\n        data: new Date().toISOString(),\n        \n        retorno: msg.payload.documento.remessa.map( c => {\n            var cobranca = {\n                nosso_numero: c.nosso_numero,\n                pedido: c.pedido,\n                cliente: c.cliente,\n                parcelas: c.parcelas.map( (p) => {\n                \n                    var parcela = {\n                        vencto: p.vencto,\n                        origem: p.origem,\n                        forma_pagto: p.forma_pagto,\n                        tipo_vencto: p.tipo_vencto,\n                        parcela: p.parcela,\n                        prazo: p.prazo,\n                        valor: p.valor\n                    }\n                    \n                    parcela.carteira = p.carteira;\n                    parcela.data = p.data;\n\n                    return parcela;\n                    \n                })\n            };\n            \n            return cobranca;\n        })\n        \n    }),\n    atribuir: 'cobranca',\n    atribuido: null,\n    form: '/recebiveis/retorno/',\n    parametros: null,\n    prazo: null,\n    criado: new Date(),\n    concluido: null,\n    versao: 0    \n}\n\n/*\nvar sql = `\n\nSET NOCOUNT ON\n\nDECLARE @REMESSA INT\nDECLARE @NOSSO_NUMERO INT\nDECLARE @PARCELA INT\nDECLARE @CARTEIRA INT\n\nDECLARE @VALOR_TITULOS MONEY\nDECLARE @VALOR_LIQUIDO MONEY\nDECLARE @VALOR_OPERACAO MONEY\nDECLARE @VALOR_TARIFA MONEY\nDECLARE @VALOR_JUROS MONEY\nDECLARE @VALOR_IOF MONEY\nDECLARE @TAXA_JUROS DECIMAL(18,2)\n\nDECLARE @FORMA_PAGTO VARCHAR(10)\nDECLARE @TIPO_VENCTO VARCHAR(3)\nDECLARE @VENCTO DATE\nDECLARE @PRAZO INT\nDECLARE @VALOR MONEY\n\nDECLARE @TAREFA_ATUAL INT\nDECLARE @VERSAO INT\n\nDECLARE @NOVA_TAREFA INT\n\nDECLARE @ULTIMA_VERSAO INT\nDECLARE @CONCLUIDO DATETIME\n\nDECLARE @PROX_TAREFA INT\nDECLARE @PROX_TAREFA_VERSAO INT\n\nDECLARE @NOVA_NAV INT\n\nDECLARE @TRF TABLE (\n    [id] [int] NOT NULL,\n\t[nome] [nvarchar](100) NOT NULL,\n\t[titulo] [nvarchar](50) NULL,\n\t[descricao] [nvarchar](50) NULL,\n\t[atribuir] [nvarchar](50) NULL,\n\t[form] [nvarchar](100) NOT NULL,\n\t[parametros] [nvarchar](max) NULL,\n\t[prazo] [datetime] NULL,\n\t[criado] [datetime] NOT NULL,\n\t[concluido] [datetime] NULL,\n\t[versao] [int],\n\t[topico] [nvarchar](100) NOT NULL)\n\nBEGIN TRY\n    BEGIN TRANSACTION\n\n    -------------------------------------- ATUALIZACAO DAS TAREFAS ----------------------------------------------\n    SET @TAREFA_ATUAL =  CAST('${parseInt(msg.req.params.tarefa)}' AS INT)\n    SET @VERSAO = CAST('${msg.payload.versao}' AS INT)\n\n    UPDATE TRF SET\n\t    concluido = GETDATE()\n    WHERE\n        id = @TAREFA_ATUAL\n        AND concluido IS NULL\n        AND versao = @VERSAO\n\n    IF @@ROWCOUNT != 1\n    BEGIN\n\n        ROLLBACK TRANSACTION\n\n        SELECT TOP 1 @ULTIMA_VERSAO = versao, @CONCLUIDO = concluido FROM TRF WHERE id = @TAREFA_ATUAL\n\n        IF (NOT @CONCLUIDO IS NULL)\n        BEGIN\n            INSERT INTO ERR_LOG (erro, mensagem) SELECT erro, mensagem FROM ERR WHERE erro = 7010\n            SELECT * FROM ERR WHERE erro = 7010\n        END\n        ELSE IF (@ULTIMA_VERSAO <> @VERSAO)\n        BEGIN\n            INSERT INTO ERR_LOG (erro, mensagem) SELECT erro, mensagem FROM ERR WHERE erro = 7450\n            SELECT * FROM ERR WHERE erro = 7450\n        END\n\n        RETURN\n    END\n\n    INSERT INTO @TRF SELECT id, nome, titulo, descricao, atribuir, form, parametros, prazo, criado, concluido, versao, '/tarefas/concluida/' + LTRIM(RTRIM(atribuir)) AS topico FROM TRF WHERE id = @TAREFA_ATUAL\n\n    ---------------------------------------------------- cabecalho da remessa ----------------------------------------------------\n    SET @VALOR_TITULOS = CAST('${msg.payload.documento.bordero.valor_titulos}' AS MONEY) \n    SET @VALOR_LIQUIDO = CAST('${msg.payload.documento.bordero.valor_liquido}' AS MONEY)\n    SET @VALOR_OPERACAO = CAST('${msg.payload.documento.bordero.valor_operacao}' AS MONEY)\n    SET @VALOR_TARIFA = CAST('${msg.payload.documento.bordero.valor_tarifa}' AS MONEY)\n    SET @VALOR_JUROS = CAST('${msg.payload.documento.bordero.valor_juros}' AS MONEY)\n    SET @VALOR_IOF = CAST('${msg.payload.documento.bordero.valor_iof}' AS MONEY)\n    SET @TAXA_JUROS = CAST('${msg.payload.documento.bordero.taxa_juros}' AS DECIMAL(18,2))\n\n    SET @CARTEIRA = CAST('${msg.payload.documento.carteira.id}' AS INT)\n\n    SET @REMESSA = NEXT VALUE FOR remessa_seq\n\n    INSERT INTO REM (\n        remessa,\n        carteira,\n        valor_titulos,\n        valor_liquido,\n        valor_operacao,\n        valor_tarifa,\n        valor_iof,\n        valor_juros,\n        taxa_juros)\n    VALUES (\n        @REMESSA,\n        @CARTEIRA,\n        @VALOR_TITULOS,\n        @VALOR_LIQUIDO,\n        @VALOR_OPERACAO,\n        @VALOR_TARIFA,\n        @VALOR_IOF,\n        @VALOR_JUROS,\n        @TAXA_JUROS)\n\n    UPDATE CRT SET\n        utilizado = utilizado + @VALOR_TITULOS,\n        remessa = remessa - @VALOR_TITULOS,\n        retorno = retorno + @VALOR_TITULOS\n    WHERE id = @CARTEIRA\n\n    ---------------------------------------------------- grava as parcelas ----------------------------------------------------\n    ` +\n\nmsg.payload.documento.remessa.reduce( (sql, r) => \n\n    sql + r.parcelas.reduce( (sql, p) => \n    \n        sql + \n    `\n    ----------------------------------------------------------------------------------------------------------\n    -- insere nova parcela => nosso_numero:  + ${r.nosso_numero} + ', parcela: ' + ${p.parcela} + ', carteira: ' + ${msg.payload.documento.carteira.id}\n    ----------------------------------------------------------------------------------------------------------\n    SET @NOSSO_NUMERO = CAST('${r.nosso_numero}' AS INT)\n    SET @PARCELA = CAST('${p.parcela}' AS INT)\n    SET @CARTEIRA = CAST('${msg.payload.documento.carteira.id}' AS INT)\n\n    IF EXISTS(SELECT NOSSO_NUMERO FROM REMD WHERE nosso_numero = @NOSSO_NUMERO AND parcela = @PARCELA AND carteira = @CARTEIRA)\n    BEGIN\n\n        ROLLBACK TRANSACTION\n\n        INSERT INTO ERR_LOG (erro, mensagem) SELECT erro, mensagem FROM ERR WHERE erro = 1123\n        SELECT * FROM ERR WHERE erro = 1123\n\n        RETURN\n    END\n\n    SET @FORMA_PAGTO = CAST('${p.forma_pagto}' AS VARCHAR(10))\n    SET @TIPO_VENCTO = CAST('${p.tipo_vencto}' AS VARCHAR(3))\n    SET @VENCTO = CAST('${p.vencto}' AS DATE)\n    SET @PRAZO = CAST('${p.prazo}' AS INT)\n    SET @VALOR = CAST('${p.valor}' AS MONEY)\n\n    INSERT INTO REMD (remessa, nosso_numero, parcela, carteira, forma_pagto, tipo_vencto, vencto, prazo, valor)\n    VALUES (@REMESSA, @NOSSO_NUMERO, @PARCELA, @CARTEIRA, @FORMA_PAGTO, @TIPO_VENCTO, @VENCTO, @PRAZO, @VALOR) \n    \n    `\n    \n    , '')\n\n, '') +\n\n`\n    -------------------------- PROXIMA TAREFA - RETORNO -----------------------\n    \n    SET @PROX_TAREFA = NEXT VALUE FOR tarefa_seq\n    \n    INSERT INTO TRF\n        (id,\n        nome,\n        titulo,\n        descricao,\n        detalhes,\n        documento,\n        atribuir,\n        form,\n        parametros,\n        prazo,\n        criado,\n        concluido)\n    VALUES\n        (@PROX_TAREFA,\n        '${tarefa_retorno.nome}',\n        '${tarefa_retorno.titulo}',\n        '${tarefa_retorno.descricao}',\n        '',\n        '${tarefa_retorno.documento}',\n        '${tarefa_retorno.atribuir}',\n        '${tarefa_retorno.form}',\n        NULL,\n        NULL,\n        GETDATE(),\n        NULL)\n        \n    SET @NOVA_NAV = NEXT VALUE FOR tarefa_nav_seq\n    \n    INSERT TRFN (transacao, tarefa_origem, tarefa_destino) VALUES (NEXT VALUE FOR tarefa_nav_seq, @TAREFA_ATUAL, @PROX_TAREFA)\n    \n    INSERT INTO @TRF SELECT id, nome, titulo, descricao, atribuir, form, parametros, prazo, criado, concluido, versao, '/tarefas/nova/' + LTRIM(RTRIM(atribuir)) AS topico FROM TRF WHERE id = @PROX_TAREFA\n    \n    COMMIT TRANSACTION\n\nEND TRY\nBEGIN CATCH\n\n   DECLARE @ERR_ID INT\n   DECLARE @ERROR_NUMBER INT\n   DECLARE @ERROR_SEVERITY INT\n   DECLARE @ERROR_STATE INT\n   DECLARE @ERROR_PROCEDURE INT\n   DECLARE @ERROR_LINE INT\n   DECLARE @ERROR_MESSAGE NVARCHAR(MAX)\n\n   SET @ERROR_NUMBER = ERROR_NUMBER()\n   SET @ERROR_SEVERITY = ERROR_SEVERITY()\n   SET @ERROR_STATE = ERROR_STATE()\n   SET @ERROR_PROCEDURE = ERROR_PROCEDURE()\n   SET @ERROR_LINE = ERROR_LINE()\n   SET @ERROR_MESSAGE = ERROR_MESSAGE()\n\n   ROLLBACK TRANSACTION\n\n   SET @ERR_ID = NEXT VALUE FOR err_log_seq\n   INSERT INTO err_log SELECT @ERR_ID AS id, @ERROR_NUMBER AS erro, @ERROR_SEVERITY AS nivel, @ERROR_STATE AS situacao, @ERROR_PROCEDURE AS procedimento, @ERROR_LINE AS linha, @ERROR_MESSAGE AS mensagem\n\n   SELECT * FROM err_log WHERE id = @ERR_ID\n\n   RETURN\nEND CATCH\n\nSELECT * FROM @TRF\n`    \n*/\n\nvar mssql = global.get('mssql');\n\nvar procedure_name = 'REM_INSERE'\n\nvar request = new mssql.Request(global.get('FINANCEIRO'));\n\nrequest.execute(procedure_name).then(function(recordsets, returnValue, affected) {\n\n    console.dir('Recordsets: ' + recordsets.length); // count of recordsets returned by the procedure\n    console.dir('Record count in first recordset: ' + recordsets[0].length); // count of rows contained in first recordset\n    console.dir('Return value: ' + returnValue); // procedure return value\n    console.dir('Recordsets return value: ' + recordsets.returnValue); // same as previous line\n    console.dir('Rows affected: ' + affected); // number of rows affected by the statemens\n    console.dir('Recordset rows affected: ' + recordsets.rowsAffected); // same as previous line\n\n    //console.log(request.parameters.output_parameter.value); // output value\n\n    msg.payload = Array.isArray(recordsets) && recordsets || [{ erro: 9997, mensagem: 'A procedure foi executada mas n√£o retornou resposta para esta solicita√ß√£o !'}];\n    console.dir(msg.payload);\n    node.send(msg);\n\n})\n.catch(function(err) {\n    console.dir('-----------------> Erro ao chamar Stored Procedure' + procedure_name + ' <-----------------\\n' + JSON.stringify(err))\n    msg.payload = err || { erro: 9999, mensagem: 'Erro desconhecido.'};\n    node.send(msg);\n});\n","outputs":"1","noerr":0,"x":330,"y":900,"wires":[["3c3c527e.2f99ee"]]},{"id":"8e66428c.80a45","type":"http in","z":"8364cdd3.e51ef","name":"retorno","url":"/api/financeiro/recebiveis/retorno/tarefa/:tarefa","method":"post","swaggerDoc":"","x":70,"y":960,"wires":[["2bf23b9.7633ac4"]]},{"id":"2bf23b9.7633ac4","type":"function","z":"8364cdd3.e51ef","name":"SQL","func":"/*\nvar sql = \n`\nSET NOCOUNT ON\n\nDECLARE @RETORNO INT\nDECLARE @NOSSO_NUMERO INT\nDECLARE @PARCELA INT\nDECLARE @CARTEIRA INT\n\nDECLARE @DATA AS DATE\nDECLARE @VALOR_TITULOS MONEY\nDECLARE @VALOR_LIQUIDO MONEY\nDECLARE @VALOR_OPERACAO MONEY\nDECLARE @VALOR_TARIFA MONEY\nDECLARE @VALOR_JUROS MONEY\nDECLARE @VALOR_IOF MONEY\nDECLARE @TAXA_JUROS DECIMAL(18,2)\n\nDECLARE @FORMA_PAGTO VARCHAR(10)\nDECLARE @TIPO_VENCTO VARCHAR(3)\nDECLARE @VENCTO DATE\nDECLARE @PRAZO INT\nDECLARE @VALOR MONEY\nDECLARE @ACEITO BIT\n\nDECLARE @TAREFA_ATUAL INT\nDECLARE @VERSAO INT\n\nDECLARE @NOVA_TAREFA INT\n\nDECLARE @ULTIMA_VERSAO INT\nDECLARE @CONCLUIDO DATETIME\n\nDECLARE @PROX_TAREFA INT\nDECLARE @PROX_TAREFA_VERSAO INT\n\nDECLARE @NOVA_NAV INT\n\nDECLARE @TRF TABLE (\n    [id] [int] NOT NULL,\n\t[nome] [nvarchar](100) NOT NULL,\n\t[titulo] [nvarchar](50) NULL,\n\t[descricao] [nvarchar](50) NULL,\n\t[atribuir] [nvarchar](50) NULL,\n\t[form] [nvarchar](100) NOT NULL,\n\t[parametros] [nvarchar](max) NULL,\n\t[prazo] [datetime] NULL,\n\t[criado] [datetime] NOT NULL,\n\t[concluido] [datetime] NULL,\n\t[versao] [int],\n\t[topico] [nvarchar](100) NOT NULL)\n\t\nBEGIN TRY\n    BEGIN TRANSACTION\n\n    -------------------------------------- ATUALIZACAO DAS TAREFAS ----------------------------------------------\n    SET @TAREFA_ATUAL =  CAST('${msg.req.params.tarefa}' AS INT)\n    SET @VERSAO = CAST('${msg.payload.versao}' AS INT)\n\n    UPDATE TRF SET\n\t    concluido = GETDATE()\n    WHERE\n        id = @TAREFA_ATUAL\n        AND concluido IS NULL\n        AND versao = @VERSAO\n\n    IF @@ROWCOUNT != 1\n    BEGIN\n\n        ROLLBACK TRANSACTION\n\n        SELECT TOP 1 @ULTIMA_VERSAO = versao, @CONCLUIDO = concluido FROM TRF WHERE id = @TAREFA_ATUAL\n\n        IF (NOT @CONCLUIDO IS NULL)\n        BEGIN\n            INSERT INTO ERR_LOG (erro, mensagem) SELECT erro, mensagem FROM ERR WHERE erro = 7010\n            SELECT * FROM ERR WHERE erro = 7010\n        END\n        ELSE IF (@ULTIMA_VERSAO <> @VERSAO)\n        BEGIN\n            INSERT INTO ERR_LOG (erro, mensagem) SELECT erro, mensagem FROM ERR WHERE erro = 7450\n            SELECT * FROM ERR WHERE erro = 7450\n        END\n\n        RETURN\n    END\n\n    INSERT INTO @TRF SELECT id, nome, titulo, descricao, atribuir, form, parametros, prazo, criado, concluido, versao, '/tarefas/concluida/' + LTRIM(RTRIM(atribuir)) AS topico FROM TRF WHERE id = @TAREFA_ATUAL\n\n    ---------------------------------------------------- cabecalho do retorno ----------------------------------------------------\n    SET @VALOR_TITULOS = CAST('${msg.payload.documento.bordero.valor_titulos}' AS MONEY) \n    SET @VALOR_LIQUIDO = CAST('${msg.payload.documento.bordero.valor_liquido}' AS MONEY)\n    SET @VALOR_OPERACAO = CAST('${msg.payload.documento.bordero.valor_operacao}' AS MONEY)\n    SET @VALOR_TARIFA = CAST('${msg.payload.documento.bordero.valor_tarifa}' AS MONEY)\n    SET @VALOR_JUROS = CAST('${msg.payload.documento.bordero.valor_juros}' AS MONEY)\n    SET @VALOR_IOF = CAST('${msg.payload.documento.bordero.valor_iof}' AS MONEY)\n    SET @TAXA_JUROS = CAST('${msg.payload.documento.bordero.taxa_juros}' AS DECIMAL(18,2))\n\n    SET @CARTEIRA = CAST('${msg.payload.documento.carteira.id}' AS INT)\n\n    SET @RETORNO = NEXT VALUE FOR retorno_seq\n\n    INSERT INTO RET (\n        retorno,\n        carteira,\n        valor_titulos,\n        valor_liquido,\n        valor_operacao,\n        valor_tarifa,\n        valor_iof,\n        valor_juros,\n        taxa_juros)\n    VALUES (\n        @RETORNO,\n        @CARTEIRA,\n        @VALOR_TITULOS,\n        @VALOR_LIQUIDO,\n        @VALOR_OPERACAO,\n        @VALOR_TARIFA,\n        @VALOR_IOF,\n        @VALOR_JUROS,\n        @TAXA_JUROS)\n\n    SET @CARTEIRA = CAST('${msg.payload.documento.carteira.id}' AS INT)\n\n    UPDATE CRT SET\n        utilizado = utilizado - @VALOR_TITULOS,\n        retorno = retorno - @VALOR_TITULOS,\n        total_iof = total_iof + @VALOR_IOF,\n        total_juros = total_juros + @VALOR_JUROS,\n        total_tarifas = total_tarifas + @VALOR_TARIFA + @VALOR_OPERACAO,\n        taxa_juros = @TAXA_JUROS\n    WHERE id = @CARTEIRA\n\n    ---------------------------------------------------- grava as parcelas ---------------------------------------------------- \n` +\n    \nmsg.payload.documento.retorno.reduce( (sql, r) => \n\n    sql + r.parcelas.reduce( (sql, p) => \n    \n        sql + \n`\n    ----------------------------------------------------------------------------------------------------------\n    -- insere nova parcela => nosso_numero:  + r.nosso_numero + ', parcela: ' + p.parcela + ', carteira: ' + msg.payload.documento.carteira.id +\n    ----------------------------------------------------------------------------------------------------------\n    SET @NOSSO_NUMERO = CAST('${r.nosso_numero}' AS INT)\n    SET @PARCELA = CAST('${p.parcela}' AS INT)\n    SET @CARTEIRA = CAST('${msg.payload.documento.carteira.id}' AS INT)\n    \n    IF EXISTS(SELECT NOSSO_NUMERO FROM RETD WHERE nosso_numero = @NOSSO_NUMERO AND parcela = @PARCELA AND carteira = @CARTEIRA)\n    BEGIN\n    \n       ROLLBACK TRANSACTION\n    \n       INSERT INTO ERR_LOG (erro, mensagem) SELECT erro, mensagem FROM ERR WHERE erro = 7010\n       SELECT * FROM ERR WHERE erro = 1123\n    \n       RETURN\n    END\n    \n    SET @FORMA_PAGTO = CAST('${p.forma_pagto}' AS VARCHAR(10))\n    SET @TIPO_VENCTO = CAST('${p.tipo_vencto}' AS VARCHAR(3))\n    SET @VENCTO = CAST('${p.vencto}' AS DATE)\n    SET @PRAZO = CAST('${p.prazo}' AS INT)\n    SET @VALOR = CAST('${p.valor}' AS MONEY)\n    SET @ACEITO = CAST('${p.aceito}' AS BIT)\n    \n    INSERT INTO RETD (retorno, nosso_numero, parcela, carteira, forma_pagto, tipo_vencto, vencto, prazo, valor, aceito)\n    VALUES (@RETORNO, @NOSSO_NUMERO, @PARCELA, @CARTEIRA, @FORMA_PAGTO, @TIPO_VENCTO, @VENCTO, @PRAZO, @VALOR, @ACEITO)\n\n`\n\n    , '')\n\n, '') +\n\n/*\n   -------------------------- PROXIMA TAREFA - RETORNO -----------------------\n\n   SET @PROX_TAREFA = NEXT VALUE FOR tarefa_seq\n\n   INSERT INTO TRF\n       (id,\n       nome,\n       titulo,\n       descricao,\n       detalhes,\n       documento,\n       atribuir,\n       form,\n       parametros,\n       prazo,\n       criado,\n       concluido)\n   VALUES\n       (@PROX_TAREFA,\n       ' + tarefa_retorno.nome + ',\n       ' + tarefa_retorno.titulo + ',\n       ' + tarefa_retorno.descricao + ',\n       '',\n       ' + tarefa_retorno.documento + ',\n       ' + tarefa_retorno.atribuir + ',\n       ' + tarefa_retorno.form + ',\n       NULL,\n       NULL,\n       GETDATE(),\n       NULL)\n\n   SET @NOVA_NAV = NEXT VALUE FOR TRFN_seq\n\n   INSERT TRFN (transacao, tarefa_origem, tarefa_destino) VALUES (NEXT VALUE FOR TRFN_seq, @TAREFA_ATUAL, @PROX_TAREFA)\n\n   INSERT INTO @TRF SELECT id, nome, titulo, descricao, atribuir, form, parametros, prazo, criado, concluido, versao, '/tarefas/nova/' + LTRIM(RTRIM(atribuir)) AS topico FROM TRF WHERE id = @PROX_TAREFA\n*/\n/*\n`\n   COMMIT TRANSACTION\n\nEND TRY\nBEGIN CATCH\n\n   DECLARE @ERR_ID INT\n   DECLARE @ERROR_NUMBER INT\n   DECLARE @ERROR_SEVERITY INT\n   DECLARE @ERROR_STATE INT\n   DECLARE @ERROR_PROCEDURE INT\n   DECLARE @ERROR_LINE INT\n   DECLARE @ERROR_MESSAGE NVARCHAR(MAX)\n\n   SET @ERROR_NUMBER = ERROR_NUMBER()\n   SET @ERROR_SEVERITY = ERROR_SEVERITY()\n   SET @ERROR_STATE = ERROR_STATE()\n   SET @ERROR_PROCEDURE = ERROR_PROCEDURE()\n   SET @ERROR_LINE = ERROR_LINE()\n   SET @ERROR_MESSAGE = ERROR_MESSAGE()\n\n   ROLLBACK TRANSACTION\n\n   SET @ERR_ID = NEXT VALUE FOR err_log_seq\n   INSERT INTO err_log SELECT @ERR_ID AS id, @ERROR_NUMBER AS erro, @ERROR_SEVERITY AS nivel, @ERROR_STATE AS situacao, @ERROR_PROCEDURE AS procedimento, @ERROR_LINE AS linha, @ERROR_MESSAGE AS mensagem\n\n   SELECT * FROM err_log WHERE id = @ERR_ID\n\n   RETURN\nEND CATCH\n\nSELECT * FROM @TRF\n\n`\n*/\n\nvar mssql = global.get('mssql');\n\nvar procedure_name = 'RET_INSERE'\n\nvar request = new mssql.Request(global.get('FINANCEIRO'));\n\nrequest.execute(procedure_name).then(function(recordsets, returnValue, affected) {\n\n    console.dir('Recordsets: ' + recordsets.length); // count of recordsets returned by the procedure\n    console.dir('Record count in first recordset: ' + recordsets[0].length); // count of rows contained in first recordset\n    console.dir('Return value: ' + returnValue); // procedure return value\n    console.dir('Recordsets return value: ' + recordsets.returnValue); // same as previous line\n    console.dir('Rows affected: ' + affected); // number of rows affected by the statemens\n    console.dir('Recordset rows affected: ' + recordsets.rowsAffected); // same as previous line\n\n    //console.log(request.parameters.output_parameter.value); // output value\n\n    msg.payload = Array.isArray(recordsets) && recordsets || [{ erro: 9997, mensagem: 'A procedure foi executada mas n√£o retornou resposta para esta solicita√ß√£o !'}];\n    console.dir(msg.payload);\n    node.send(msg);\n\n})\n.catch(function(err) {\n    console.dir('-----------------> Erro ao chamar Stored Procedure' + procedure_name + ' <-----------------\\n' + JSON.stringify(err))\n    msg.payload = err || { erro: 9999, mensagem: 'Erro desconhecido.'};\n    node.send(msg);\n});\n","outputs":"1","noerr":0,"x":330,"y":960,"wires":[["3c3c527e.2f99ee"]]},{"id":"abb32f13.b67f6","type":"function","z":"8364cdd3.e51ef","name":"SQL","func":"\nvar sql = `\n    SELECT \n        * \n    FROM \n        REM INNER JOIN CRT ON REM.carteira = CRT.id \n    WHERE \n        NOT EXISTS (\n            SELECT * \n            FROM REM_PAR INNER JOIN RET_PAR ON \n                REM_PAR.nosso_numero = RET_PAR.nosso_numero AND \n                REM_PAR.parcela = RET_PAR.parcela \n            WHERE \n                REM_PAR.remessa = REM.remessa\n        ) \n    ORDER BY \n        data DESC\n`\n\nvar mssql = global.get('mssql');\n\nvar request = new mssql.Request(global.get('FINANCEIRO')).query(sql).then(function(recordset) {\n    msg.payload = recordset;\n    console.dir(recordset);\n    node.send(msg);\n})\n.catch(function(err) {\n    msg.payload = err;\n    node.error(msg);\n});","outputs":1,"noerr":0,"x":230,"y":420,"wires":[["959b2f98.3034b"]]},{"id":"ead32cc4.ab04c","type":"function","z":"8364cdd3.e51ef","name":"SQL","func":"\nvar sql = `\n    SELECT TOP 5 \n        * \n    FROM \n        RET INNER JOIN CRT ON RET.carteira = CRT.id\n    ORDER BY \n        data DESC\n`\n\nvar mssql = global.get('mssql');\n\nvar request = new mssql.Request(global.get('FINANCEIRO')).query(sql).then(function(recordset) {\n    msg.payload = recordset;\n    console.dir(recordset);\n    node.send(msg);\n})\n.catch(function(err) {\n    msg.payload = err;\n    node.error(msg);\n});","outputs":1,"noerr":0,"x":230,"y":460,"wires":[["e9872ad0.cfbcc8"]]},{"id":"d89f9d70.ae8ca","type":"mqtt out","z":"8364cdd3.e51ef","name":"","topic":"/event/carteira","qos":"","retain":"","broker":"404ac8f7.f80bb8","x":1060,"y":880,"wires":[]},{"id":"d7ecd1a8.6f1c9","type":"function","z":"8364cdd3.e51ef","name":"SQL","func":"var sql = `\n    DECLARE @PERFIL NVARCHAR(50)\n    \n    SET @PERFIL = '${msg.req.query.perfil}'\n    \n    SELECT\n       id,\n       nome,\n       titulo,\n       descricao,\n       atribuir,\n       form,\n       parametros,\n       prazo,\n       criado,\n       CAST(versao AS INT) AS versao\n    FROM\n    \tTRF\n    WHERE\n       concluido IS NULL AND\n       (atribuir IS NULL OR atribuir IN (@PERFIL))\n    ORDER BY\n       criado \n`\n\nvar mssql = global.get('mssql');\n\nvar request = new mssql.Request(global.get('FINANCEIRO')).query(sql).then(function(recordset) {\n    msg.payload = recordset;\n    console.dir(recordset);\n    node.send(msg);\n})\n.catch(function(err) {\n    msg.payload = err;\n    node.error(msg);\n});","outputs":1,"noerr":0,"x":230,"y":260,"wires":[["d7eba2da.d733e"]]},{"id":"6bff048d.3162bc","type":"function","z":"8364cdd3.e51ef","name":"SQL","func":"var sql = \n`\nSELECT [id]\n    ,[nome]\n    ,[titulo]\n    ,[descricao]\n    ,[detalhes]\n    ,[documento]\n    ,[atribuir]\n    ,[atribuido]\n    ,[form]\n    ,[parametros]\n    ,[prazo]\n    ,[criado]\n    ,[concluido]\n    ,CAST([versao] AS INT) AS versao\nFROM \n    [dbo].[TRF]\nWHERE \n    id = ${msg.req.params.id}\n`\n\nvar mssql = global.get('mssql');\n\nvar request = new mssql.Request(global.get('FINANCEIRO')).query(sql).then(function(recordset) {\n    msg.payload = recordset.map( function(t) {\n        t.documento = JSON.parse(t.documento);\n        return t;\n    })[0];\n    console.log(recordset);\n    node.send(msg);\n})\n.catch(function(err) {\n    msg.payload = err;\n    node.error(msg);\n});","outputs":1,"noerr":0,"x":230,"y":300,"wires":[["edf1aed9.2b5bf"]]},{"id":"d24c484b.ba2258","type":"inject","z":"8364cdd3.e51ef","name":"connect","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":true,"x":100,"y":60,"wires":[["f2822310.29331"]]},{"id":"f2822310.29331","type":"function","z":"8364cdd3.e51ef","name":"FINANCEIRO","func":"var mssql = global.get('mssql');\n\nvar FINANCEIRO = new mssql.Connection(\"mssql://financeiro:financeiro@localhost/FINANCEIRO\", function(err) {\n    if (err) {\n        console.dir('-------------> ERRO NA CONEXAO FINANCEIRO !!!!!! <-------------')\n    } else {\n        global.set('FINANCEIRO', FINANCEIRO);\n        console.dir('CONECTADO FINANCEIRO !')\n        \n        FINANCEIRO.on('error', function(err) {\n            node.error({payload: err || { erro: 9996, mensagem: 'Erro desconhecido na conex√£o'}})\n        });\n        \n    }\n});\n","outputs":1,"noerr":0,"x":320,"y":60,"wires":[["5cc42b7e.480dd4"]]},{"id":"5cc42b7e.480dd4","type":"debug","z":"8364cdd3.e51ef","name":"result","active":true,"console":"false","complete":"payload","x":550,"y":60,"wires":[]},{"id":"106b2332.4acb1d","type":"inject","z":"8364cdd3.e51ef","name":"test","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":90,"y":140,"wires":[["ccc8b57.a775648"]]},{"id":"ccc8b57.a775648","type":"function","z":"8364cdd3.e51ef","name":"SQL","func":"var mssql = global.get('mssql')\n\nvar request = new mssql.Request(global.get('FINANCEIRO')).query('select top 1 * from usr').then(function(recordset) {\n    node.send({payload:recordset})\n    console.dir(recordset);\n}).catch(function(err) {\n    node.error(err)\n});\n","outputs":1,"noerr":0,"x":290,"y":140,"wires":[["b09912ef.c7057"]]},{"id":"b09912ef.c7057","type":"debug","z":"8364cdd3.e51ef","name":"","active":true,"console":"false","complete":"false","x":570,"y":140,"wires":[]},{"id":"cf265f0e.c5ab1","type":"debug","z":"8364cdd3.e51ef","name":"","active":true,"console":"false","complete":"payload","x":1050,"y":920,"wires":[]},{"id":"5a08a67b.8965a8","type":"inject","z":"8364cdd3.e51ef","name":"connect","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":true,"x":100,"y":100,"wires":[["8b68a7b.3421d58"]]},{"id":"8b68a7b.3421d58","type":"function","z":"8364cdd3.e51ef","name":"GPIMAC","func":"var mssql = global.get('mssql');\n\nvar GPIMAC = new mssql.Connection(\"mssql://gpimac:215083@localhost/GPIMAC_Altamira\", function(err) {\n    if (err) {\n        console.dir('-------------> ERRO NA CONEXAO GPIMAC !!!!!! <-------------')\n    } else {\n        global.set('GPIMAC', GPIMAC);\n        console.dir('CONECTADO GPIMAC !')\n\n        GPIMAC.on('error', function(err) {\n            node.error({payload: err || { erro: 9996, mensagem: 'Erro desconhecido na conex√£o'}})\n        });\n        \n    }\n});\n","outputs":1,"noerr":0,"x":300,"y":100,"wires":[["416414ea.25e89c"]]},{"id":"416414ea.25e89c","type":"debug","z":"8364cdd3.e51ef","name":"result","active":true,"console":"false","complete":"payload","x":550,"y":100,"wires":[]},{"id":"8a720b2.52f6ff8","type":"amazon s3 out","z":"8364cdd3.e51ef","aws":"","bucket":"bpmn.altamira.com.br","filename":"","localFilename":"","region":"us-east-1","name":"event","x":1190,"y":60,"wires":[]},{"id":"18e3a117.51fc6f","type":"inject","z":"8364cdd3.e51ef","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":780,"y":60,"wires":[["a9f5ec37.b0a07"]]},{"id":"a9f5ec37.b0a07","type":"function","z":"8364cdd3.e51ef","name":"process","func":"msg.filename = 'Process_b76e408a-aee5-4796-bba7-a500c028d615.xml';\n\nmsg.payload = `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<bpmn:definitions xmlns:bpmn=\"http://www.omg.org/spec/BPMN/20100524/MODEL\" xmlns:bpmndi=\"http://www.omg.org/spec/BPMN/20100524/DI\" xmlns:di=\"http://www.omg.org/spec/DD/20100524/DI\" xmlns:dc=\"http://www.omg.org/spec/DD/20100524/DC\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" id=\"Definitions_1\" targetNamespace=\"http://bpmn.io/schema/bpmn\" exporter=\"Camunda Modeler\" exporterVersion=\"1.0.0\">\n  <bpmn:process id=\"Process_b76e408a-aee5-4796-bba7-a500c028d615\" isExecutable=\"true\">\n    <bpmn:startEvent id=\"StartEvent_72ac4c2a-9c7d-44f7-bb34-4ba3ed82764c\">\n      <bpmn:outgoing>SequenceFlow_4dae01da-8e63-4625-acb6-df748b413442</bpmn:outgoing>\n    </bpmn:startEvent>\n    <bpmn:task id=\"Task_ac2123f3-ae01-47c5-8b59-9ccda457034d\" name=\"Lan√ßamento em Contas a Receber\">\n      <bpmn:incoming>SequenceFlow_4dae01da-8e63-4625-acb6-df748b413442</bpmn:incoming>\n      <bpmn:outgoing>SequenceFlow_5f61f460-ea8f-438d-9f9d-4b961bd9fcf8</bpmn:outgoing>\n    </bpmn:task>\n    <bpmn:sequenceFlow id=\"SequenceFlow_4dae01da-8e63-4625-acb6-df748b413442\" sourceRef=\"StartEvent_72ac4c2a-9c7d-44f7-bb34-4ba3ed82764c\" targetRef=\"Task_ac2123f3-ae01-47c5-8b59-9ccda457034d\" />\n    <bpmn:endEvent id=\"EndEvent_5ce2c0e5-ec02-44dc-a54b-de5f42c5c830\">\n      <bpmn:incoming>SequenceFlow_5f61f460-ea8f-438d-9f9d-4b961bd9fcf8</bpmn:incoming>\n    </bpmn:endEvent>\n    <bpmn:sequenceFlow id=\"SequenceFlow_5f61f460-ea8f-438d-9f9d-4b961bd9fcf8\" sourceRef=\"Task_ac2123f3-ae01-47c5-8b59-9ccda457034d\" targetRef=\"EndEvent_5ce2c0e5-ec02-44dc-a54b-de5f42c5c830\" />\n  </bpmn:process>\n  <bpmndi:BPMNDiagram id=\"BPMNDiagram_1\">\n    <bpmndi:BPMNPlane id=\"BPMNPlane_1\" bpmnElement=\"Process_b76e408a-aee5-4796-bba7-a500c028d615\">\n      <bpmndi:BPMNShape id=\"_BPMNShape_StartEvent_2\" bpmnElement=\"StartEvent_72ac4c2a-9c7d-44f7-bb34-4ba3ed82764c\">\n        <dc:Bounds x=\"173\" y=\"102\" width=\"36\" height=\"36\" />\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNShape id=\"Task_0iremv1_di\" bpmnElement=\"Task_ac2123f3-ae01-47c5-8b59-9ccda457034d\">\n        <dc:Bounds x=\"297\" y=\"80\" width=\"100\" height=\"80\" />\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNEdge id=\"SequenceFlow_1603g0s_di\" bpmnElement=\"SequenceFlow_4dae01da-8e63-4625-acb6-df748b413442\">\n        <di:waypoint xsi:type=\"dc:Point\" x=\"209\" y=\"120\" />\n        <di:waypoint xsi:type=\"dc:Point\" x=\"297\" y=\"120\" />\n        <bpmndi:BPMNLabel>\n          <dc:Bounds x=\"208\" y=\"95\" width=\"90\" height=\"20\" />\n        </bpmndi:BPMNLabel>\n      </bpmndi:BPMNEdge>\n      <bpmndi:BPMNShape id=\"EndEvent_1esqey2_di\" bpmnElement=\"EndEvent_5ce2c0e5-ec02-44dc-a54b-de5f42c5c830\">\n        <dc:Bounds x=\"481\" y=\"102\" width=\"36\" height=\"36\" />\n        <bpmndi:BPMNLabel>\n          <dc:Bounds x=\"454\" y=\"138\" width=\"90\" height=\"20\" />\n        </bpmndi:BPMNLabel>\n      </bpmndi:BPMNShape>\n      <bpmndi:BPMNEdge id=\"SequenceFlow_1kac5kr_di\" bpmnElement=\"SequenceFlow_5f61f460-ea8f-438d-9f9d-4b961bd9fcf8\">\n        <di:waypoint xsi:type=\"dc:Point\" x=\"397\" y=\"120\" />\n        <di:waypoint xsi:type=\"dc:Point\" x=\"481\" y=\"120\" />\n        <bpmndi:BPMNLabel>\n          <dc:Bounds x=\"394\" y=\"95\" width=\"90\" height=\"20\" />\n        </bpmndi:BPMNLabel>\n      </bpmndi:BPMNEdge>\n    </bpmndi:BPMNPlane>\n  </bpmndi:BPMNDiagram>\n</bpmn:definitions>`\n\nreturn msg","outputs":"1","noerr":0,"x":960,"y":60,"wires":[["8a720b2.52f6ff8"]]},{"id":"158296e9.4a3e49","type":"subflow:8ac4efec.52279","z":"8364cdd3.e51ef","name":"","x":290,"y":180,"wires":[["505a6bcc.d80614"]]},{"id":"c51173c0.01bae","type":"inject","z":"8364cdd3.e51ef","name":"import","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":90,"y":180,"wires":[["158296e9.4a3e49"]]},{"id":"505a6bcc.d80614","type":"debug","z":"8364cdd3.e51ef","name":"","active":true,"console":"false","complete":"false","x":570,"y":180,"wires":[]},{"id":"cf26c5d4.ea3278","type":"http in","z":"8364cdd3.e51ef","name":"carteira","url":"/api/financeiro/carteira","method":"get","swaggerDoc":"","x":70,"y":380,"wires":[["5befa2a3.3faa1c"]]},{"id":"a3483bb4.f07c78","type":"http response","z":"8364cdd3.e51ef","name":"","x":390,"y":380,"wires":[]},{"id":"c69b279a.7876f8","type":"http in","z":"8364cdd3.e51ef","name":"remessa","url":"/api/financeiro/remessa","method":"get","swaggerDoc":"","x":80,"y":420,"wires":[["abb32f13.b67f6"]]},{"id":"ac832ffd.424b4","type":"http in","z":"8364cdd3.e51ef","name":"retorno","url":"/api/financeiro/retorno","method":"get","swaggerDoc":"","x":70,"y":460,"wires":[["ead32cc4.ab04c"]]},{"id":"44e9c60b.790818","type":"http in","z":"8364cdd3.e51ef","name":"tarefas","url":"/api/tarefas/","method":"get","swaggerDoc":"","x":70,"y":260,"wires":[["d7ecd1a8.6f1c9"]]},{"id":"74dd95d9.45001c","type":"http in","z":"8364cdd3.e51ef","name":"tarefa/:id","url":"/api/tarefa/:id","method":"get","swaggerDoc":"","x":80,"y":300,"wires":[["6bff048d.3162bc"]]},{"id":"edf1aed9.2b5bf","type":"http response","z":"8364cdd3.e51ef","name":"","x":390,"y":300,"wires":[]},{"id":"d7eba2da.d733e","type":"http response","z":"8364cdd3.e51ef","name":"","x":390,"y":260,"wires":[]},{"id":"e9872ad0.cfbcc8","type":"http response","z":"8364cdd3.e51ef","name":"","x":390,"y":460,"wires":[]},{"id":"959b2f98.3034b","type":"http response","z":"8364cdd3.e51ef","name":"","x":390,"y":420,"wires":[]},{"id":"404ac8f7.f80bb8","type":"mqtt-broker","z":"","broker":"192.168.0.1","port":"1883","clientid":"","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"willTopic":"","willQos":"0","willPayload":"","birthTopic":"","birthQos":"0","birthPayload":""}]