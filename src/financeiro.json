[{"id":"4cd69e29.adf1a","type":"http in","z":"53205563.d5978c","name":"busca","url":"/api/financeiro/duplicata/emissao/busca","method":"get","swaggerDoc":"","x":90,"y":320,"wires":[["5372119d.40c86"]]},{"id":"5372119d.40c86","type":"function","z":"53205563.d5978c","name":"SQL","func":"var sql = \n    \"DECLARE @PEDIDO INT\\n\" +\n    \"DECLARE @CNPJ NVARCHAR(14)\\n\" +\n    \"DECLARE @NOME NVARCHAR(100)\\n\" +\n    \"SET @PEDIDO = \" + (msg.req.query.pedido) + \"\\n\" +\n    \"SET @CNPJ = \" + (\"'\" + msg.req.query.cnpj + \"'\") + \"\\n\" +\n    \"SET @NOME = \" + (\"'\" + msg.req.query.nome + \"'\") + \"\\n\" +\n    \"SELECT top 10 \" +\n    \"\tLTRIM(RTRIM(LPV.LPEMP)) AS empresa, \\n\" +\n    \"\tCAST(LPV.LPPED AS INT) AS pedido, \\n\" +\n    \"\tCAST(LPV.LPENT AS DATE) AS emissao, \\n\" +\n    \"\tLPV.Lp0SaiRed AS entrega, \\n\" +\n    \"\tLTRIM(RTRIM(CACLI.CCCGC)) AS cnpj, \\n\" +\n    \"\tLTRIM(RTRIM(CACLI.CCFAN)) AS fantasia, \\n\" +\n    \"\tLTRIM(RTRIM(CACLI.CCNOM)) AS nome \\n\" +\n    \"FROM \\n\" +\n    \"\tGPIMAC_Altamira.dbo.LPV AS LPV INNER JOIN \\n\" +\n    \"   GPIMAC_Altamira.dbo.CACLI ON LPV.CCCGC = GPIMAC_Altamira.dbo.CACLI.CCCGC \\n\" +\n    \"WHERE \\n\" +\n    \"   (@PEDIDO IS NULL OR LPV.LPPED LIKE '%' + CAST(@PEDIDO AS NVARCHAR(10)) + '%') AND \\n\" +\n    \"   (@CNPJ IS NULL OR CACLI.CCCGC LIKE '%' + @CNPJ + '%') AND \\n\" +\n    \"   (@NOME IS NULL OR CACLI.CCFAN LIKE '%' + @NOME + '%') AND \\n\" +\n    \"   (@NOME IS NULL OR CACLI.CCNOM LIKE '%' + @NOME + '%') \\n\" +\n    \"ORDER BY \\n\" +\n    \"   LPV.LPPED DESC\"\n\nvar mssql = global.get('mssql');\n\nvar request = new mssql.Request(global.get('FINANCEIRO')).query(sql).then(function(recordset) {\n    msg.payload = recordset;\n    console.dir(recordset);\n    node.send(msg);\n})\n.catch(function(err) {\n    msg.payload = err;\n    node.error(msg);\n});","outputs":1,"noerr":0,"x":350,"y":320,"wires":[["2f650454.af547c"]]},{"id":"2f650454.af547c","type":"http response","z":"53205563.d5978c","name":"","x":570,"y":320,"wires":[]},{"id":"badc38c8.135f48","type":"http in","z":"53205563.d5978c","name":"lancamento","url":"/api/financeiro/recebiveis/lancamento/","method":"post","swaggerDoc":"","x":110,"y":780,"wires":[["9a3f2a25.e0b708"]]},{"id":"9a3f2a25.e0b708","type":"function","z":"53205563.d5978c","name":"SQL","func":"var mssql = global.get('mssql');\n\nvar procedure_name = 'LANCAMENTO_CONTAS_RECEBER'\n\nvar request = new mssql.Request(global.get('FINANCEIRO'));\n\n// ---------------------- Remessa ----------------------\nrequest.input('NOSSO_NUMERO', mssql.Int, msg.payload.documento.nosso_numero)\n\n// ---------------------- Pedido ---------------------- //\nrequest.input('PEDIDO', mssql.Int, parseInt(msg.payload.documento.numero))\nrequest.input('EMISSAO', mssql.DateTime2, msg.payload.documento.emissao)\nrequest.input('ENTREGA', mssql.DateTime2, msg.payload.documento.entrega)\nrequest.input('CONDICAO', mssql.VarChar(3), msg.payload.documento.condicao)\n\n// ---------------------- Cliente ---------------------- //\nrequest.input('CONTA_CONTABIL', mssql.VarChar(20), msg.payload.documento.cliente.conta_contabil)\nrequest.input('CNPJ', mssql.VarChar(20), msg.payload.documento.cliente.cnpj)\nrequest.input('INSCRICAO', mssql.VarChar(12), msg.payload.documento.cliente.inscricao)\nrequest.input('FANTASIA', mssql.VarChar(30), msg.payload.documento.cliente.fantasia)\nrequest.input('NOME', mssql.VarChar(100), msg.payload.documento.cliente.nome)\nrequest.input('LOGRADOURO', mssql.VarChar(5), msg.payload.documento.cliente.logradouro)\nrequest.input('ENDERECO', mssql.VarChar(50), msg.payload.documento.cliente.endereco)\nrequest.input('NUMERO', mssql.VarChar(10), msg.payload.documento.cliente.numero)\nrequest.input('COMPLEMENTO', mssql.VarChar(20), msg.payload.documento.cliente.complemento)\nrequest.input('BAIRRO', mssql.VarChar(30), msg.payload.documento.cliente.bairro)\nrequest.input('MUNICIPIO', mssql.Int, parseInt(msg.payload.documento.cliente.municipio))\nrequest.input('CIDADE', mssql.VarChar(30), msg.payload.documento.cliente.cidade)\nrequest.input('CEP', mssql.VarChar(9), msg.payload.documento.cliente.CEP)\nrequest.input('UF', mssql.VarChar(2), msg.payload.documento.cliente.UF)\nrequest.input('DDD', mssql.VarChar(3), msg.payload.documento.cliente.ddd)\nrequest.input('TELEFONE', mssql.VarChar(15), msg.payload.documento.cliente.telefone)\nrequest.input('CONTATO', mssql.VarChar(20), msg.payload.documento.cliente.contato)\n\n// ---------------------- Representante ---------------------- //\nrequest.input('REPRESENTANTE_CODIGO', mssql.Char(3), msg.payload.documento.representante.codigo)\nrequest.input('REPRESENTANTE_NOME', mssql.VarChar(50), msg.payload.documento.representante.nome)\nrequest.input('REPRESENTANTE_COMISSAO', mssql.Decimal(18,2), msg.payload.documento.representante.comissao)\n\n// ---------------------- Parcelas ---------------------- //\nvar parcelas = new mssql.Table()\n\nparcelas.columns.add('nosso_numero', mssql.Int);\nparcelas.columns.add('parcela', mssql.Int);\nparcelas.columns.add('forma_pagto', mssql.VarChar(10));\nparcelas.columns.add('tipo_vencto', mssql.VarChar(3));\nparcelas.columns.add('vencto', mssql.Date);\nparcelas.columns.add('prazo', mssql.Int);\nparcelas.columns.add('valor_produtos', mssql.Money);\nparcelas.columns.add('valor_ipi', mssql.Money);\nparcelas.columns.add('valor', mssql.Money);\nparcelas.columns.add('origem', mssql.VarChar(10));\n\nmsg.payload.documento.parcelas.forEach( parcela => {\n    \n    let vencto = new Date(parcela.vencto);\n\n    parcelas.rows.add(\n        msg.payload.documento.nosso_numero,\n        parcela.parcela,\n        parcela.forma_pagto,\n        parcela.tipo_vencto,\n        vencto,\n        parcela.prazo,\n        parcela.valor_produtos,\n        parcela.valor_ipi,\n        parcela.valor,\n        parcela.origem\n    )\n    \n});\n\nrequest.input('PARCELAS', parcelas)\n\n// ---------------------- TAREFAS ---------------------- //\nvar tarefas = new mssql.Table()\n\ntarefas.columns.add('id', mssql.Int);\ntarefas.columns.add('nome', mssql.NVarChar(100));\ntarefas.columns.add('titulo', mssql.NVarChar(50));\ntarefas.columns.add('descricao', mssql.NVarChar(50));\ntarefas.columns.add('detalhes', mssql.NVarChar(100));\ntarefas.columns.add('documento', mssql.NVarChar(mssql.MAX));\ntarefas.columns.add('atribuir', mssql.NVarChar(50));\ntarefas.columns.add('atribuido', mssql.NVarChar(50));\ntarefas.columns.add('form', mssql.NVarChar(100));\ntarefas.columns.add('parametros', mssql.NVarChar(mssql.MAX));\ntarefas.columns.add('prazo', mssql.DateTime2(7));\ntarefas.columns.add('criado', mssql.DateTime2(7));\ntarefas.columns.add('concluido', mssql.DateTime2(7));\ntarefas.columns.add('versao', mssql.Int);\ntarefas.columns.add('operacao', mssql.VarChar(10));\n\ntarefas.rows.add(\n    parseInt(msg.payload.id),\n    msg.payload.nome,\n    msg.payload.titulo,\n    msg.payload.descricao,\n    msg.payload.detalhes,\n    JSON.stringify(msg.payload.documento), \n    msg.payload.atribuir,\n    msg.payload.atribuido,\n    msg.payload.form,\n    msg.payload.parametros,\n    msg.payload.prazo,\n    msg.payload.criado,\n    msg.payload.concluido,\n    parseInt(msg.payload.versao),\n    'CONCLUIR'\n);\n\nif (msg.payload.documento.parcelas.find( p => p.forma_pagto === 'COBRANCA')) {\n\n    var tarefa = \n    {\n        id: 0,\n        nome: 'Cobrança Bancária',\n        titulo: msg.payload.documento.cliente.fantasia,\n        descricao: 'Total R$ ' + msg.payload.documento.parcelas.reduce( (total, parcela) => total + parcela.valor, 0).toFixed(2).replace('.', ','),\n        detalhes: '',\n        documento: JSON.stringify(\n            {\n                tipo: 'cobranca',\n                nosso_numero: msg.payload.documento.nosso_numero,\n                pedido: msg.payload.documento.pedido,\n                cliente: msg.payload.documento.cliente,\n                parcelas: msg.payload.documento.parcelas.filter( p => p.forma_pagto === 'COBRANCA')\n            }),\n        atribuir: 'financeiro',\n        atribuido: null,\n        form: '/recebiveis/cobranca/',\n        parametros: null,\n        prazo: null,\n        criado: new Date(),\n        concluido: null,\n        versao: 0,\n        operacao: 'PROXIMA'\n    }    \n    \n    tarefas.rows.add(\n        0,\n        tarefa.nome,\n        tarefa.titulo,\n        tarefa.descricao,\n        tarefa.detalhes,\n        tarefa.documento, \n        tarefa.atribuir,\n        tarefa.atribuido,\n        tarefa.form,\n        tarefa.parametros,\n        tarefa.prazo,\n        tarefa.criado,\n        tarefa.concluido,\n        tarefa.versao,\n        tarefa.operacao\n    );\n    \n}\n\nrequest.input('TAREFAS', tarefas)\n\nrequest.execute(procedure_name).then(function(recordsets, returnValue, affected) {\n\n    console.dir('Recordsets: ' + recordsets.length); // count of recordsets returned by the procedure\n    console.dir('Record count in first recordset: ' + recordsets[0].length); // count of rows contained in first recordset\n    console.dir('Return value: ' + returnValue); // procedure return value\n    console.dir('Recordsets return value: ' + recordsets.returnValue); // same as previous line\n    console.dir('Rows affected: ' + affected); // number of rows affected by the statemens\n    console.dir('Recordset rows affected: ' + recordsets.rowsAffected); // same as previous line\n\n    //console.log(request.parameters.output_parameter.value); // output value\n\n    msg.payload = Array.isArray(recordsets) && recordsets || [{ erro: 9997, mensagem: 'A procedure foi executada mas não retornou resposta para esta solicitação !'}];\n    console.dir(msg.payload);\n    node.send(msg);\n\n})\n.catch(function(err) {\n    console.dir('-----------------> Erro ao chamar Stored Procedure' + procedure_name + ' <-----------------\\n' + JSON.stringify(err))\n    msg.payload = err || { erro: 9999, mensagem: 'Erro desconhecido.'};\n    node.send(msg);\n});\n\n","outputs":"1","noerr":0,"x":350,"y":780,"wires":[["4707a5a7.788d5c"]]},{"id":"67ae5112.cc92e","type":"function","z":"53205563.d5978c","name":"SQL","func":"\nvar sql = `\n    SELECT * FROM CRT\n`\n\nvar mssql = global.get('mssql');\n\nvar request = new mssql.Request(global.get('FINANCEIRO')).query(sql).then(function(recordset) {\n    msg.payload = recordset;\n    node.send(msg);\n})\n.catch(function(err) {\n    msg.payload = err;\n    node.error(msg);\n});\n","outputs":1,"noerr":0,"x":350,"y":440,"wires":[["fead886c.14e5a8"]]},{"id":"4707a5a7.788d5c","type":"function","z":"53205563.d5978c","name":"NOTIFY","func":"if (Array.isArray(msg.payload) && msg.payload.length > 0) {\n    \n    if (Array.isArray(msg.payload[0]) && msg.payload[0].length > 0 && msg.payload[0][0].erro === 0) {\n        return [\n            {req: msg.req, res: msg.res, payload: msg.payload[0][0]}, // mensagens de retorno\n            {payload: msg.payload[1]}, // notificações\n            null\n        ];\n    } else {\n        return [\n            {req: msg.req, res: msg.res, payload: msg.payload[0][0]}, // mensagens de retorno\n            null, // notificações\n            null\n        ];\n    }\n    \n} else {\n    return [\n        msg, \n        null, \n        null\n    ];\n}\n","outputs":"2","noerr":0,"x":580,"y":840,"wires":[["8103ad33.be449","54da1fc2.4cb6"],["e83ab72e.a78bb8"]]},{"id":"2fc76462.32dcec","type":"mqtt out","z":"53205563.d5978c","name":"","topic":"","qos":"","retain":"","broker":"ca2398cb.485db8","x":1090,"y":820,"wires":[]},{"id":"65dfcb0b.47efb4","type":"http in","z":"53205563.d5978c","name":"nosso_numero 1","url":"/api/financeiro/recebiveis/lancamento/nosso_numero1","method":"get","swaggerDoc":"","x":120,"y":640,"wires":[["a51ed4e8.41cc08"]]},{"id":"a51ed4e8.41cc08","type":"function","z":"53205563.d5978c","name":"SQL","func":"var sql = `\nSELECT \n    ISNULL(MAX(REC.nosso_numero), 0) AS nosso_numero \nFROM \n    REC INNER JOIN REC_PED ON REC.nosso_numero = REC_PED.nosso_numero;\n`\n\nvar mssql = global.get('mssql');\n\nvar request = new mssql.Request(global.get('FINANCEIRO')).query(sql).then(function(recordset) {\n    msg.payload = recordset;\n    console.dir(recordset);\n    node.send(msg);\n})\n.catch(function(err) {\n    msg.payload = err;\n    node.error(msg);\n});","outputs":"1","noerr":0,"x":350,"y":640,"wires":[["4923c418.ee10ec"]]},{"id":"4923c418.ee10ec","type":"function","z":"53205563.d5978c","name":"NOTIFY","func":"if (Array.isArray(msg.payload) && msg.payload.length > 0 && msg.payload[0].erro === undefined) {\n    \n    msg.payload = msg.payload[0];\n    return msg;\n    \n} else {\n    msg.statusCode = 500;\n    msg.payload = msg.payload[0];\n    return msg\n}\n","outputs":"1","noerr":0,"x":580,"y":640,"wires":[["7e184b34.ecb584"]]},{"id":"7e184b34.ecb584","type":"http response","z":"53205563.d5978c","name":"","x":790,"y":640,"wires":[]},{"id":"73846783.21bd98","type":"http in","z":"53205563.d5978c","name":"nosso_numero 2","url":"/api/financeiro/recebiveis/lancamento/nosso_numero2","method":"get","swaggerDoc":"","x":120,"y":680,"wires":[["3123a398.58830c"]]},{"id":"3123a398.58830c","type":"function","z":"53205563.d5978c","name":"SQL","func":"var sql = \n    \"BEGIN TRY\" + '\\n' + '\\n' +\n\n    \"   SELECT ISNULL(MAX(RCB.nosso_numero), 0) AS nosso_numero FROM RCB WHERE NOT EXISTS(SELECT * FROM RCB_PED WHERE RCB.nosso_numero = RCB_PED.nosso_numero); \" + '\\n' + '\\n' +\n\n    \"END TRY\" + '\\n' +\n    \"BEGIN CATCH\" + '\\n' + '\\n' +\n    \n    \"   DECLARE @ERR_ID INT\" + '\\n' +\n    \"   SET @ERR_ID = NEXT VALUE FOR err_log_seq\" + '\\n' +\n    \"   INSERT INTO err_log SELECT @ERR_ID AS id, ERROR_NUMBER() AS erro, ERROR_SEVERITY() AS nivel, ERROR_STATE() AS situacao, ERROR_PROCEDURE() AS procedimento, ERROR_LINE() AS linha, ERROR_MESSAGE() AS mensagem\" + '\\n' + '\\n' +\n    \n    \"END CATCH\"\n\nvar mssql = global.get('mssql');\n\nvar request = new mssql.Request(global.get('FINANCEIRO')).query(sql).then(function(recordset) {\n    msg.payload = recordset;\n    console.dir(recordset);\n    node.send(msg);\n})\n.catch(function(err) {\n    msg.payload = err;\n    node.error(msg);\n});","outputs":"1","noerr":0,"x":350,"y":680,"wires":[["b2e927df.655b28"]]},{"id":"b2e927df.655b28","type":"function","z":"53205563.d5978c","name":"NOTIFY","func":"if (Array.isArray(msg.payload) && msg.payload.length > 0 && msg.payload[0].erro === undefined) {\n    \n    msg.payload = msg.payload[0];\n    return msg;\n    \n} else {\n    msg.statusCode = 500;\n    msg.payload = msg.payload[0];\n    return msg\n}\n","outputs":"1","noerr":0,"x":580,"y":680,"wires":[["b0c7505f.f5dd6"]]},{"id":"b0c7505f.f5dd6","type":"http response","z":"53205563.d5978c","name":"","x":790,"y":680,"wires":[]},{"id":"566ecc5e.24fd94","type":"http in","z":"53205563.d5978c","name":"login","url":"/api/usuario/login","method":"post","swaggerDoc":"","x":90,"y":240,"wires":[["4c6c2668.ee0598"]]},{"id":"69be2380.64df5c","type":"http response","z":"53205563.d5978c","name":"","x":570,"y":240,"wires":[]},{"id":"4c6c2668.ee0598","type":"function","z":"53205563.d5978c","name":"SQL","func":"var sql = `\n    DECLARE @USUARIO NVARCHAR(20)\n    DECLARE @SENHA NVARCHAR(32)\n\n    SET @USUARIO = '${msg.payload.usuario}'\n    SET @SENHA = '${msg.payload.senha}'\n    \n    SELECT *\n    FROM\n        USR\n    WHERE\n        usuario = @USUARIO AND\n        senha = @SENHA\n`\n\nvar mssql = global.get('mssql');\n\nvar request = new mssql.Request(global.get('FINANCEIRO')).query(sql).then(function(recordset) {\n    if (Array.isArray(recordset) && recordset.length > 0) {\n        msg.payload = recordset[0];\n    } else {\n        msg.payload = {};\n    }\n    node.send(msg);\n})\n.catch(function(err) {\n    msg.payload = err;\n    node.error(msg);\n});","outputs":1,"noerr":0,"x":350,"y":240,"wires":[["69be2380.64df5c"]]},{"id":"7eacacc6.ff8614","type":"http in","z":"53205563.d5978c","name":"cobranca","url":"/api/financeiro/recebiveis/cobranca/","method":"post","swaggerDoc":"","x":100,"y":820,"wires":[["49f5c9d7.0baa68"]]},{"id":"49f5c9d7.0baa68","type":"function","z":"53205563.d5978c","name":"SQL","func":"\nvar mssql = global.get('mssql');\n\nvar procedure_name = 'LANCAMENTO_COBRANCA'\n\nvar request = new mssql.Request(global.get('FINANCEIRO'));\n\nrequest.input('CARTEIRA', mssql.Int, parseInt(msg.payload.documento.carteira.id))\n\nvar cobrancas = new mssql.Table()\n\ncobrancas.columns.add('carteira', mssql.Int);\ncobrancas.columns.add('nosso_numero', mssql.Int);\ncobrancas.columns.add('conta_contabil', mssql.VarChar(56));\ncobrancas.columns.add('cnpj', mssql.VarChar(20))\n\ncobrancas.columns.add('inscricao', mssql.VarChar(12))\ncobrancas.columns.add('fantasia', mssql.VarChar(50))\ncobrancas.columns.add('nome', mssql.VarChar(100))\ncobrancas.columns.add('logradouro', mssql.VarChar(5))\ncobrancas.columns.add('endereco', mssql.VarChar(50))\ncobrancas.columns.add('numero', mssql.VarChar(10))\ncobrancas.columns.add('complemento', mssql.VarChar(20))\ncobrancas.columns.add('bairro', mssql.VarChar(30))\ncobrancas.columns.add('municipio', mssql.Int);\ncobrancas.columns.add('cidade', mssql.VarChar(30))\ncobrancas.columns.add('cep', mssql.VarChar(9))\ncobrancas.columns.add('uf', mssql.Char(2))\ncobrancas.columns.add('ddd', mssql.VarChar(3))\ncobrancas.columns.add('telefone', mssql.VarChar(15))\ncobrancas.columns.add('contato', mssql.VarChar(20))\n\nif (msg.payload.documento.cobranca.parcelas.find( parcela => parcela.selected)) { \n\n    var cobranca = msg.payload.documento.cobranca;\n    \n    var row = {\n        \n        carteira: msg.payload.documento.carteira.id,\n        nosso_numero: parseInt(cobranca.nosso_numero),\n        conta_contabil: cobranca.cliente.conta_contabil,\n        cnpj: cobranca.cliente.cnpj,\n        \n        inscricao: cobranca.cliente.inscricao,\n        fantasia: cobranca.cliente.fantasia,\n        nome: cobranca.cliente.nome,\n        logradouro: cobranca.cliente.logradouro,\n        endereco: cobranca.cliente.endereco,\n        numero: cobranca.cliente.numero,\n        complemento: cobranca.cliente.complemento,\n        bairro: cobranca.cliente.bairro,\n        municipio: cobranca.cliente.municipio,\n        cidade: cobranca.cliente.cidade,\n        cep: cobranca.cliente.CEP,\n        uf: cobranca.cliente.UF,\n        ddd: cobranca.cliente.ddd,\n        telefone: cobranca.cliente.telefone,\n        contato: cobranca.cliente.contato\n    }\n    \n    console.log(JSON.stringify(row, null, 2));\n    \n    cobrancas.rows.add(\n\n        row.carteira,\n        row.nosso_numero,\n        row.conta_contabil,\n        row.cnpj,\n        \n        row.inscricao,\n        row.fantasia,\n        row.nome,\n        row.logradouro,\n        row.endereco,\n        row.numero,\n        row.complemento,\n        row.bairro,\n        row.municipio,\n        row.cidade,\n        row.cep,\n        row.uf,\n        row.ddd,\n        row.telefone,\n        row.contato\n        \n    );\n    \n}\n\nrequest.input('COBRANCA', cobrancas)\n\nvar parcelas = new mssql.Table()\n\nparcelas.columns.add('carteira', mssql.Int);\nparcelas.columns.add('nosso_numero', mssql.Int);\nparcelas.columns.add('parcela', mssql.Int);\n\nparcelas.columns.add('forma_pagto', mssql.VarChar(10));\nparcelas.columns.add('tipo_vencto', mssql.VarChar(3));\nparcelas.columns.add('vencto', mssql.Date);\nparcelas.columns.add('prazo', mssql.Int);\nparcelas.columns.add('valor', mssql.Money);\n\nmsg.payload.documento.cobranca.parcelas.filter( parcela => parcela.selected).forEach( (parcela) => \n    {\n        var cobranca = msg.payload.documento.cobranca;\n        \n        parcelas.rows.add(\n            \n            msg.payload.documento.carteira.id,\n            parseInt(cobranca.nosso_numero),\n            parcela.parcela,\n            \n            parcela.forma_pagto,\n            parcela.tipo_vencto,\n            new Date(parcela.vencto),\n            parcela.prazo,\n            parcela.valor\n            \n        )\n    }\n)\n\n\nrequest.input('PARCELAS', parcelas)\n\n/*------------------------ TAREFAS------------------------*/\nvar tarefas = new mssql.Table()\n\ntarefas.columns.add('id', mssql.Int);\ntarefas.columns.add('nome', mssql.NVarChar(100));\ntarefas.columns.add('titulo', mssql.NVarChar(50));\ntarefas.columns.add('descricao', mssql.NVarChar(50));\ntarefas.columns.add('detalhes', mssql.NVarChar(100));\ntarefas.columns.add('documento', mssql.NVarChar(mssql.MAX));\ntarefas.columns.add('atribuir', mssql.NVarChar(50));\ntarefas.columns.add('atribuido', mssql.NVarChar(50));\ntarefas.columns.add('form', mssql.NVarChar(100));\ntarefas.columns.add('parametros', mssql.NVarChar(mssql.MAX));\ntarefas.columns.add('prazo', mssql.DateTime2(7));\ntarefas.columns.add('criado', mssql.DateTime2(7));\ntarefas.columns.add('concluido', mssql.DateTime2(7));\ntarefas.columns.add('versao', mssql.Int);\ntarefas.columns.add('operacao', mssql.VarChar(10));\n\ntarefas.rows.add(\n    msg.payload.id,\n    msg.payload.nome,\n    msg.payload.titulo,\n    msg.payload.descricao,\n    msg.payload.detalhes,\n    JSON.stringify(msg.payload.documento), \n    msg.payload.atribuir,\n    msg.payload.atribuido,\n    msg.payload.form,\n    msg.payload.parametros,\n    msg.payload.prazo,\n    msg.payload.criado,\n    msg.payload.concluido,\n    parseInt(msg.payload.versao),\n    'CONCLUIR'\n);\n\nif (msg.payload.documento.cobranca.parcelas.find( (p) => !p.selected && !p.carteira) ) {\n    var tarefa = \n    {\n        id: msg.payload.id,\n        nome: 'Cobrança Bancária',\n        titulo: msg.payload.documento.cobranca.cliente.fantasia, \n        descricao: 'Resta R$ ' + msg.payload.documento.cobranca.parcelas.filter( (p) => !p.selected && !p.carteira).reduce( (soma, p) => soma + p.valor, 0.0).toFixed(2).replace('.', ','), \n        detalhes: '',\n        documento: JSON.stringify({\n            tipo: 'cobranca',\n            nosso_numero: msg.payload.documento.cobranca.nosso_numero,\n            pedido: msg.payload.documento.cobranca.pedido,\n            cliente: msg.payload.documento.cobranca.cliente,\n            parcelas: msg.payload.documento.cobranca.parcelas.map( (p) => {\n            \n                var parcela = {\n                    vencto: p.vencto,\n                    origem: p.origem,\n                    forma_pagto: p.forma_pagto,\n                    tipo_vencto: p.tipo_vencto,\n                    parcela: p.parcela,\n                    prazo: p.prazo,\n                    valor: p.valor\n                }\n                \n                if (p.carteira) {\n                    parcela.carteira = p.carteira;\n                    parcela.remessa = p.remessa;\n                } else if (p.selected) {\n                    parcela.carteira = msg.payload.documento.carteira.nome;\n                    parcela.remessa = new Date().toISOString();\n                }\n                \n                return parcela;\n                \n            })\n        }),\n        atribuir: 'financeiro',\n        atribuido: null,\n        form: '/recebiveis/cobranca/',\n        parametros: null,\n        prazo: null,\n        criado: new Date(),\n        concluido: null,\n        versao: 0\n    }\n    \n    tarefas.rows.add(\n        tarefa.id,\n        tarefa.nome,\n        tarefa.titulo,\n        tarefa.descricao,\n        tarefa.detalhes,\n        tarefa.documento, \n        tarefa.atribuir,\n        tarefa.atribuido,\n        tarefa.form,\n        tarefa.parametros,\n        tarefa.prazo,\n        tarefa.criado,\n        tarefa.concluido,\n        tarefa.versao,\n        'REPETIR'\n    );    \n}\n\nif (msg.payload.documento.cobranca.parcelas.find( (p) => p.selected && !p.carteira) ) {\n    var tarefa = \n    {\n        id: 0,\n        nome: 'Remessa de Cobrança',\n        titulo: msg.payload.documento.carteira.nome,\n        descricao: 'Total R$ ' + msg.payload.documento.cobranca.parcelas.filter( (p) => p.selected && !p.carteira).reduce( (soma, p) => soma + p.valor, 0.0).toFixed(2).replace('.', ','), \n        detalhes: '',\n        documento: JSON.stringify({ \n            \n            tipo: 'remessa',\n            \n            data: new Date().toISOString(),\n\n            nosso_numero: msg.payload.documento.cobranca.nosso_numero,\n            pedido: msg.payload.documento.cobranca.pedido,\n            \n            cliente: msg.payload.documento.cobranca.cliente,\n\n            carteira: msg.payload.documento.carteira,\n            \n            parcelas: msg.payload.documento.cobranca.parcelas.filter( parcela => parcela.selected).map( (p) => {\n            \n                var parcela = {\n                    vencto: p.vencto,\n                    origem: p.origem,\n                    forma_pagto: p.forma_pagto,\n                    tipo_vencto: p.tipo_vencto,\n                    parcela: p.parcela,\n                    prazo: p.prazo,\n                    valor: p.valor\n                }\n                \n                parcela.carteira = msg.payload.documento.carteira.nome;\n                parcela.remessa = new Date().toISOString();\n\n                return parcela;\n                \n            }),\n            \n            bordero: msg.payload.documento.bordero\n            \n        }),\n        atribuir: 'cobranca',\n        atribuido: null,\n        form: '/recebiveis/remessa/',\n        parametros: null,\n        prazo: null,\n        criado: new Date(),\n        concluido: null,\n        versao: 0\n    }  \n\n    tarefas.rows.add(\n        0,\n        tarefa.nome,\n        tarefa.titulo,\n        tarefa.descricao,\n        tarefa.detalhes,\n        tarefa.documento, \n        tarefa.atribuir,\n        tarefa.atribuido,\n        tarefa.form,\n        tarefa.parametros,\n        tarefa.prazo,\n        tarefa.criado,\n        tarefa.concluido,\n        tarefa.versao,\n        'PROXIMA'\n    );    \n}\n\nrequest.input('TAREFAS', tarefas)\n\nrequest.execute(procedure_name).then(function(recordsets, returnValue, affected) {\n\n    /*console.dir('Recordsets: ' + recordsets.length); // count of recordsets returned by the procedure\n    console.dir('Record count in first recordset: ' + recordsets[0].length); // count of rows contained in first recordset\n    console.dir('Return value: ' + returnValue); // procedure return value\n    console.dir('Recordsets return value: ' + recordsets.returnValue); // same as previous line\n    console.dir('Rows affected: ' + affected); // number of rows affected by the statemens\n    console.dir('Recordset rows affected: ' + recordsets.rowsAffected);*/ // same as previous line\n\n    //console.log(request.parameters.output_parameter.value); // output value\n\n    msg.payload = Array.isArray(recordsets) && recordsets || [{ erro: 9997, mensagem: 'A procedure foi executada mas não retornou resposta para esta solicitação !'}];\n    console.log(msg.payload);\n    node.send(msg);\n\n})\n.catch(function(err) {\n    console.log(err)\n    console.log('*****************************  Erro ao chamar Stored Procedure ' + procedure_name + '  *****************************\\n' + (err !== null && typeof err === 'object' ? JSON.stringify(err, null, 2) : err || \"Erro desconhecido\"))\n    msg.payload = err !== null && typeof err === 'object' ? err : { erro: 9999, mensagem: err || \"Erro desconhecido\"};\n    node.error(msg);\n    node.send(msg);\n});\n\n","outputs":"1","noerr":0,"x":350,"y":820,"wires":[["4707a5a7.788d5c"]]},{"id":"5489bb33.e44aa4","type":"function","z":"53205563.d5978c","name":"","func":"msg.payload = [ { \"id\": 1339, \"nome\": \"Lançamentos a Receber\", \"titulo\": \"Pedido 74782\", \"descricao\": \"CERAMICA VELAS DE IGNICAO NGK BRASIL LTDA\", \"atribuir\": \"faturamento\", \"form\": \"/recebiveis/lancamento/\", \"parametros\": null, \"prazo\": null, \"criado\": \"2016-12-09T09:38:59.156Z\", \"concluido\": \"2016-12-09T09:39:21.036Z\" }, { \"id\": 1340, \"nome\": \"Cobrança Bancária\", \"titulo\": \"Gerar Remessa de Cobrança\", \"descricao\": \"\", \"atribuir\": \"financeiro\", \"form\": \"/recebiveis/cobranca/\", \"parametros\": null, \"prazo\": null, \"criado\": \"2016-12-09T09:39:21.036Z\", \"concluido\": null } ]\nif (Array.isArray(msg.payload) && msg.payload.length > 0 && msg.payload[0].erro === undefined) {\n    \n    var payload = msg.payload;\n    msg.payload = {erro: 0, mensagem: 'Tarefa concluida com sucesso !'};\n    \n    var msgs = []\n    \n    msgs.push(msg);\n    \n    msgs.push({\n        topic: '/tarefas/concluida/' + payload[0].atribuir,\n        payload: payload[0]\n    });\n\n    if (msg.payload.length > 1) {\n        msgs.push({\n            topic: '/tarefas/nova/' + payload[1].atribuir,\n            payload: payload[1]\n        })\n    }\n    \n    return msgs;\n    \n} else {\n    msg.statusCode = 500;\n    msg.payload = msg.payload[0];\n    return [msg, null, null]\n}\n","outputs":"3","noerr":0,"x":350,"y":1040,"wires":[["5eaae4f5.e0e70c"],["740a74b3.38800c"],["73d561e6.3246a"]]},{"id":"5eaae4f5.e0e70c","type":"debug","z":"53205563.d5978c","name":"","active":true,"console":"false","complete":"payload","x":590,"y":1000,"wires":[]},{"id":"d177271.208add8","type":"inject","z":"53205563.d5978c","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":120,"y":1040,"wires":[["5489bb33.e44aa4"]]},{"id":"740a74b3.38800c","type":"debug","z":"53205563.d5978c","name":"","active":true,"console":"false","complete":"payload","x":590,"y":1040,"wires":[]},{"id":"73d561e6.3246a","type":"debug","z":"53205563.d5978c","name":"","active":true,"console":"false","complete":"payload","x":590,"y":1080,"wires":[]},{"id":"c5e5cc57.20f67","type":"function","z":"53205563.d5978c","name":"tarefa","func":"msg.topic = msg.payload.topico;\n\nreturn msg;","outputs":1,"noerr":0,"x":930,"y":860,"wires":[["2fc76462.32dcec","ade1f731.312128"]]},{"id":"e83ab72e.a78bb8","type":"split","z":"53205563.d5978c","name":"","splt":"\\n","x":770,"y":860,"wires":[["c5e5cc57.20f67"]]},{"id":"8103ad33.be449","type":"function","z":"53205563.d5978c","name":"erro","func":"if ((msg.payload.erro && msg.payload.erro !== 0) || (msg.payload.number) || (msg.payload.message)) {\n    msg.statusCode = 500;\n\n    msg.payload = msg.payload || {};\n    msg.payload.erro = msg.payload.erro || msg.payload.error || msg.payload.number || 9999;\n    msg.payload.mensagem = msg.payload.mensagem || msg.payload.message || 'Ocorreu um erro interno ao executar a sua solicitação.'\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":770,"y":820,"wires":[["da00a774.895b08"]]},{"id":"da00a774.895b08","type":"http response","z":"53205563.d5978c","name":"","x":930,"y":820,"wires":[]},{"id":"ade1f731.312128","type":"debug","z":"53205563.d5978c","name":"","active":false,"console":"false","complete":"payload","x":1110,"y":900,"wires":[]},{"id":"1e291a79.c6da76","type":"function","z":"53205563.d5978c","name":"","func":"msg.payload = {\n  \"id\": 1307,\n  \"nome\": \"Lançamentos a Receber\",\n  \"titulo\": \"Pedido 74749\",\n  \"concluido\": null,\n  \"versao\": {\n    \"type\": \"Buffer\",\n    \"data\": [\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      8,\n      10\n    ]\n  }\n}\nvar str = String.fromCharCode.apply(null, msg.payload.versao.data);\n    \nmsg.payload.buffer = str;\n\nreturn msg;\n","outputs":"1","noerr":0,"x":350,"y":1160,"wires":[["7029db34.7bdba4"]]},{"id":"3c544b72.b43fd4","type":"inject","z":"53205563.d5978c","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":120,"y":1160,"wires":[["1e291a79.c6da76"]]},{"id":"7029db34.7bdba4","type":"debug","z":"53205563.d5978c","name":"","active":true,"console":"false","complete":"payload","x":590,"y":1160,"wires":[]},{"id":"54da1fc2.4cb6","type":"debug","z":"53205563.d5978c","name":"","active":true,"console":"false","complete":"payload","x":790,"y":780,"wires":[]},{"id":"58a4eb20.1e84a4","type":"http response","z":"53205563.d5978c","name":"","x":570,"y":1240,"wires":[]},{"id":"ee79b61f.c74738","type":"catch","z":"53205563.d5978c","name":"","scope":null,"x":100,"y":1260,"wires":[["3eeaf2e8.55ce9e","1b5a0866.2ef728"]]},{"id":"3eeaf2e8.55ce9e","type":"debug","z":"53205563.d5978c","name":"","active":true,"console":"false","complete":"payload.documento.cobranca","x":440,"y":1280,"wires":[]},{"id":"1b5a0866.2ef728","type":"function","z":"53205563.d5978c","name":"erro","func":"msg.statusCode = 500;\n\nreturn msg;","outputs":1,"noerr":0,"x":350,"y":1240,"wires":[["58a4eb20.1e84a4"]]},{"id":"b73bb3b6.3a053","type":"http in","z":"53205563.d5978c","name":"remessa","url":"/api/financeiro/recebiveis/remessa/","method":"post","swaggerDoc":"","x":100,"y":860,"wires":[["415d578c.a7a5d8","e6952c50.389a2"]]},{"id":"415d578c.a7a5d8","type":"function","z":"53205563.d5978c","name":"SQL","func":"var remessa = msg.payload.documento;\nvar { cliente, carteira, bordero } = remessa;\n\nvar mssql = global.get('mssql');\n\nvar procedure_name = 'LANCAMENTO_REMESSA'\n\nvar request = new mssql.Request(global.get('FINANCEIRO'));\n\nrequest.input('CARTEIRA', mssql.Int, parseInt(carteira.id))\nrequest.input('VALOR_TITULOS', mssql.Money, bordero.valor_titulos)\nrequest.input('VALOR_LIQUIDO', mssql.Money, bordero.valor_liquido)\nrequest.input('VALOR_OPERACAO', mssql.Money, bordero.valor_operacao)\nrequest.input('VALOR_TARIFA', mssql.Money, bordero.valor_tarifa)\nrequest.input('VALOR_JUROS', mssql.Money, bordero.valor_juros)\nrequest.input('VALOR_IOF', mssql.Money, bordero.valor_iof)\nrequest.input('TAXA_JUROS', mssql.Decimal(18,2), bordero.taxa_juros)\n\nvar pagadores = new mssql.Table()\n\npagadores.columns.add('cnpj', mssql.VarChar(20))\n\npagadores.columns.add('inscricao', mssql.VarChar(20))\npagadores.columns.add('fantasia', mssql.VarChar(50))\npagadores.columns.add('nome', mssql.VarChar(100))\npagadores.columns.add('logradouro', mssql.VarChar(5))\npagadores.columns.add('endereco', mssql.VarChar(50))\npagadores.columns.add('numero', mssql.VarChar(10))\npagadores.columns.add('complemento', mssql.VarChar(30))\npagadores.columns.add('bairro', mssql.VarChar(30))\npagadores.columns.add('municipio', mssql.Int);\npagadores.columns.add('cidade', mssql.VarChar(30))\npagadores.columns.add('cep', mssql.VarChar(9))\npagadores.columns.add('uf', mssql.Char(2))\npagadores.columns.add('ddd', mssql.VarChar(3))\npagadores.columns.add('telefone', mssql.VarChar(15))\npagadores.columns.add('contato', mssql.VarChar(20))\n\nif (remessa.parcelas.find( parcela => parcela.selected)) { \n\n    var row = {\n        cnpj: cliente.cnpj,\n        \n        inscricao: cliente.inscricao,\n        fantasia: cliente.fantasia,\n        nome: cliente.nome,\n        logradouro: cliente.logradouro,\n        endereco: cliente.endereco,\n        numero: cliente.numero,\n        complemento: cliente.complemento,\n        bairro: cliente.bairro,\n        municipio: cliente.municipio,\n        cidade: cliente.cidade,\n        cep: cliente.CEP,\n        uf: cliente.UF,\n        ddd: cliente.ddd,\n        telefone: cliente.telefone,\n        contato: cliente.contato\n    }\n    \n    console.log(JSON.stringify(row, null, 2));\n    \n    pagadores.rows.add(\n\n        row.cnpj,\n        \n        row.inscricao,\n        row.fantasia,\n        row.nome,\n        row.logradouro,\n        row.endereco,\n        row.numero,\n        row.complemento,\n        row.bairro,\n        row.municipio,\n        row.cidade,\n        row.cep,\n        row.uf,\n        row.ddd,\n        row.telefone,\n        row.contato\n        \n    );\n    \n}\n\nrequest.input('PAGADORES', pagadores)\n\nvar parcelas = new mssql.Table()\n\nparcelas.columns.add('remessa', mssql.Int);\nparcelas.columns.add('nosso_numero', mssql.Int);\nparcelas.columns.add('parcela', mssql.Int);\n\nparcelas.columns.add('forma_pagto', mssql.VarChar(10));\nparcelas.columns.add('tipo_vencto', mssql.VarChar(3));\nparcelas.columns.add('vencto', mssql.Date);\nparcelas.columns.add('prazo', mssql.Int);\nparcelas.columns.add('valor', mssql.Money);\n\nremessa.parcelas.filter( parcela => parcela.selected).forEach( (parcela) => \n    {\n\n        parcelas.rows.add(\n            \n            0,\n            parseInt(remessa.nosso_numero),\n            parcela.parcela,\n            \n            parcela.forma_pagto,\n            parcela.tipo_vencto,\n            new Date(parcela.vencto),\n            parcela.prazo,\n            parcela.valor\n            \n        )\n        \n    }\n)\n\nrequest.input('PARCELAS', parcelas)\n\n/*------------------------ TAREFAS------------------------*/\nvar tarefas = new mssql.Table()\n\ntarefas.columns.add('id', mssql.Int);\ntarefas.columns.add('nome', mssql.NVarChar(100));\ntarefas.columns.add('titulo', mssql.NVarChar(50));\ntarefas.columns.add('descricao', mssql.NVarChar(50));\ntarefas.columns.add('detalhes', mssql.NVarChar(100));\ntarefas.columns.add('documento', mssql.NVarChar(mssql.MAX));\ntarefas.columns.add('atribuir', mssql.NVarChar(50));\ntarefas.columns.add('atribuido', mssql.NVarChar(50));\ntarefas.columns.add('form', mssql.NVarChar(100));\ntarefas.columns.add('parametros', mssql.NVarChar(mssql.MAX));\ntarefas.columns.add('prazo', mssql.DateTime2(7));\ntarefas.columns.add('criado', mssql.DateTime2(7));\ntarefas.columns.add('concluido', mssql.DateTime2(7));\ntarefas.columns.add('versao', mssql.Int);\ntarefas.columns.add('operacao', mssql.VarChar(10));\n\ntarefas.rows.add(\n    msg.payload.id,\n    msg.payload.nome,\n    msg.payload.titulo,\n    msg.payload.descricao,\n    msg.payload.detalhes,\n    JSON.stringify(msg.payload.documento), \n    msg.payload.atribuir,\n    msg.payload.atribuido,\n    msg.payload.form,\n    msg.payload.parametros,\n    msg.payload.prazo,\n    msg.payload.criado,\n    msg.payload.concluido,\n    parseInt(msg.payload.versao),\n    'CONCLUIR'\n);\n\nvar tarefa = \n{\n    id: 0,\n    nome: 'Retorno de Cobrança',\n    titulo: carteira.nome,\n    descricao: 'Total R$ ' + remessa.parcelas.reduce( (soma, p) => soma + p.valor, 0).toFixed(2).replace('.', ','), \n    detalhes: '',\n    documento: JSON.stringify({ \n        \n        tipo: 'retorno',\n        \n        carteira: carteira,\n        data: new Date().toISOString(),\n        \n        retorno: {\n            nosso_numero: remessa.nosso_numero,\n            pedido: remessa.pedido,\n            cliente: cliente,\n            parcelas: remessa.parcelas.map( (p) => {\n            \n                var parcela = {\n                    vencto: p.vencto,\n                    origem: p.origem,\n                    forma_pagto: p.forma_pagto,\n                    tipo_vencto: p.tipo_vencto,\n                    parcela: p.parcela,\n                    prazo: p.prazo,\n                    valor: p.valor\n                }\n                \n                parcela.carteira = p.carteira;\n                parcela.data = p.data;\n\n                return parcela;\n                \n            })\n        }\n        \n    }),\n    atribuir: 'cobranca',\n    atribuido: null,\n    form: '/recebiveis/retorno/',\n    parametros: null,\n    prazo: null,\n    criado: new Date(),\n    concluido: null,\n    versao: 0    \n}\n\ntarefas.rows.add(\n    tarefa.id,\n    tarefa.nome,\n    tarefa.titulo,\n    tarefa.descricao,\n    tarefa.detalhes,\n    tarefa.documento, \n    tarefa.atribuir,\n    tarefa.atribuido,\n    tarefa.form,\n    tarefa.parametros,\n    tarefa.prazo,\n    tarefa.criado,\n    tarefa.concluido,\n    tarefa.versao,\n    'PROXIMA'\n);    \n\nrequest.input('TAREFAS', tarefas)\n\nrequest.execute(procedure_name).then(function(recordsets, returnValue, affected) {\n\n    /*console.dir('Recordsets: ' + recordsets.length); // count of recordsets returned by the procedure\n    console.dir('Record count in first recordset: ' + recordsets[0].length); // count of rows contained in first recordset\n    console.dir('Return value: ' + returnValue); // procedure return value\n    console.dir('Recordsets return value: ' + recordsets.returnValue); // same as previous line\n    console.dir('Rows affected: ' + affected); // number of rows affected by the statemens\n    console.dir('Recordset rows affected: ' + recordsets.rowsAffected);*/ // same as previous line\n\n    //console.log(request.parameters.output_parameter.value); // output value\n\n    msg.payload = Array.isArray(recordsets) && recordsets || [{ erro: 9997, mensagem: 'A procedure foi executada mas não retornou resposta para esta solicitação !'}];\n    console.log(msg.payload);\n    node.send(msg);\n\n})\n.catch(function(err) {\n    console.log(err)\n    console.log('*****************************  Erro ao chamar Stored Procedure ' + procedure_name + '  *****************************\\n' + (err !== null && typeof err === 'object' ? JSON.stringify(err, null, 2) : err || \"Erro desconhecido\"))\n    msg.payload = err !== null && typeof err === 'object' ? err : { erro: 9999, mensagem: err || \"Erro desconhecido\"};\n    node.error(msg);\n    node.send(msg);\n});\n","outputs":"1","noerr":0,"x":350,"y":860,"wires":[["4707a5a7.788d5c"]]},{"id":"c2581677.1c9518","type":"http in","z":"53205563.d5978c","name":"retorno","url":"/api/financeiro/recebiveis/retorno/","method":"post","swaggerDoc":"","x":90,"y":900,"wires":[["161a5ab7.a1f5c5"]]},{"id":"161a5ab7.a1f5c5","type":"function","z":"53205563.d5978c","name":"SQL","func":"var mssql = global.get('mssql');\n\nvar procedure_name = 'LANCAMENTO_RETORNO'\n\nvar request = new mssql.Request(global.get('FINANCEIRO'));\n\nrequest.input('CARTEIRA', mssql.Int, parseInt(msg.payload.documento.carteira.id))\nrequest.input('VALOR_TITULOS', mssql.Money, msg.payload.documento.bordero.valor_titulos)\nrequest.input('VALOR_LIQUIDO', mssql.Money, msg.payload.documento.bordero.valor_liquido)\nrequest.input('VALOR_OPERACAO', mssql.Money, msg.payload.documento.bordero.valor_operacao)\nrequest.input('VALOR_TARIFA', mssql.Money, msg.payload.documento.bordero.valor_tarifa)\nrequest.input('VALOR_JUROS', mssql.Money, msg.payload.documento.bordero.valor_juros)\nrequest.input('VALOR_IOF', mssql.Money, msg.payload.documento.bordero.valor_iof)\nrequest.input('TAXA_JUROS', mssql.Decimal(18,2), msg.payload.documento.bordero.taxa_juros)\n\nvar parcelas = new mssql.Table()\n\nparcelas.columns.add('retorno', mssql.Int);\nparcelas.columns.add('nosso_numero', mssql.Int);\nparcelas.columns.add('parcela', mssql.Int);\n\nparcelas.columns.add('forma_pagto', mssql.VarChar(10));\nparcelas.columns.add('tipo_vencto', mssql.VarChar(3));\nparcelas.columns.add('vencto', mssql.Date);\nparcelas.columns.add('prazo', mssql.Int);\nparcelas.columns.add('valor', mssql.Money);\nparcelas.columns.add('aceito', mssql.Bit);\n\nmsg.payload.documento.retorno.parcelas.forEach( (parcela) => \n    {\n\n        parcelas.rows.add(\n            \n            0,\n            parseInt(msg.payload.documento.retorno.nosso_numero),\n            parcela.parcela,\n            \n            parcela.forma_pagto,\n            parcela.tipo_vencto,\n            new Date(parcela.vencto),\n            parcela.prazo,\n            parcela.valor,\n            parcela.aceito\n            \n        )\n    }\n)\n\n\nrequest.input('PARCELAS', parcelas)\n\n/*------------------------ TAREFAS------------------------*/\nvar tarefas = new mssql.Table()\n\ntarefas.columns.add('id', mssql.Int);\ntarefas.columns.add('nome', mssql.NVarChar(100));\ntarefas.columns.add('titulo', mssql.NVarChar(50));\ntarefas.columns.add('descricao', mssql.NVarChar(50));\ntarefas.columns.add('detalhes', mssql.NVarChar(100));\ntarefas.columns.add('documento', mssql.NVarChar(mssql.MAX));\ntarefas.columns.add('atribuir', mssql.NVarChar(50));\ntarefas.columns.add('atribuido', mssql.NVarChar(50));\ntarefas.columns.add('form', mssql.NVarChar(100));\ntarefas.columns.add('parametros', mssql.NVarChar(mssql.MAX));\ntarefas.columns.add('prazo', mssql.DateTime2(7));\ntarefas.columns.add('criado', mssql.DateTime2(7));\ntarefas.columns.add('concluido', mssql.DateTime2(7));\ntarefas.columns.add('versao', mssql.Int);\ntarefas.columns.add('operacao', mssql.VarChar(10));\n\ntarefas.rows.add(\n    msg.payload.id,\n    msg.payload.nome,\n    msg.payload.titulo,\n    msg.payload.descricao,\n    msg.payload.detalhes,\n    JSON.stringify(msg.payload.documento), \n    msg.payload.atribuir,\n    msg.payload.atribuido,\n    msg.payload.form,\n    msg.payload.parametros,\n    msg.payload.prazo,\n    msg.payload.criado,\n    msg.payload.concluido,\n    parseInt(msg.payload.versao),\n    'CONCLUIR'\n);\n\nrequest.input('TAREFAS', tarefas)\n\nrequest.execute(procedure_name).then(function(recordsets, returnValue, affected) {\n\n    /*console.dir('Recordsets: ' + recordsets.length); // count of recordsets returned by the procedure\n    console.dir('Record count in first recordset: ' + recordsets[0].length); // count of rows contained in first recordset\n    console.dir('Return value: ' + returnValue); // procedure return value\n    console.dir('Recordsets return value: ' + recordsets.returnValue); // same as previous line\n    console.dir('Rows affected: ' + affected); // number of rows affected by the statemens\n    console.dir('Recordset rows affected: ' + recordsets.rowsAffected);*/ // same as previous line\n\n    //console.log(request.parameters.output_parameter.value); // output value\n\n    msg.payload = Array.isArray(recordsets) && recordsets || [{ erro: 9997, mensagem: 'A procedure foi executada mas não retornou resposta para esta solicitação !'}];\n    console.log(msg.payload);\n    node.send(msg);\n\n})\n.catch(function(err) {\n    console.log(err)\n    console.log('*****************************  Erro ao chamar Stored Procedure ' + procedure_name + '  *****************************\\n' + (err !== null && typeof err === 'object' ? JSON.stringify(err, null, 2) : err || \"Erro desconhecido\"))\n    msg.payload = err !== null && typeof err === 'object' ? err : { erro: 9999, mensagem: err || \"Erro desconhecido\"};\n    node.error(msg);\n    node.send(msg);\n});\n\n","outputs":"1","noerr":0,"x":350,"y":900,"wires":[["4707a5a7.788d5c"]]},{"id":"b3e6e6b9.d64658","type":"function","z":"53205563.d5978c","name":"SQL","func":"\nvar sql = `\n    SELECT \n        * \n    FROM \n        REM INNER JOIN CRT ON REM.carteira = CRT.id \n    WHERE \n        NOT EXISTS (\n            SELECT * \n            FROM REM_PAR INNER JOIN RET_PAR ON \n                REM_PAR.nosso_numero = RET_PAR.nosso_numero AND \n                REM_PAR.parcela = RET_PAR.parcela \n            WHERE \n                REM_PAR.remessa = REM.remessa\n        ) \n    ORDER BY \n        data DESC\n`\n\nvar mssql = global.get('mssql');\n\nvar request = new mssql.Request(global.get('FINANCEIRO')).query(sql).then(function(recordset) {\n    msg.payload = recordset;\n    console.dir(recordset);\n    node.send(msg);\n})\n.catch(function(err) {\n    msg.payload = err;\n    node.error(msg);\n});","outputs":1,"noerr":0,"x":350,"y":480,"wires":[["7cfb5c22.412dc4"]]},{"id":"8b0ee54.6f5cb18","type":"function","z":"53205563.d5978c","name":"SQL","func":"\nvar sql = `\n    SELECT TOP 5 \n        * \n    FROM \n        RET INNER JOIN CRT ON RET.carteira = CRT.id\n    ORDER BY \n        data DESC\n`\n\nvar mssql = global.get('mssql');\n\nvar request = new mssql.Request(global.get('FINANCEIRO')).query(sql).then(function(recordset) {\n    msg.payload = recordset;\n    console.dir(recordset);\n    node.send(msg);\n})\n.catch(function(err) {\n    msg.payload = err;\n    node.error(msg);\n});","outputs":1,"noerr":0,"x":350,"y":520,"wires":[["f235bd9d.ebb27"]]},{"id":"6eb19ba6.45fac4","type":"function","z":"53205563.d5978c","name":"SQL","func":"var sql = `\n    DECLARE @ID INT\n    \n    SET @ID = '${msg.req.params.usuario}'\n    \n    SELECT\n       id,\n       nome,\n       titulo,\n       descricao,\n       detalhes,\n       atribuir,\n       form,\n       parametros,\n       prazo,\n       criado,\n       CAST(versao AS INT) AS versao\n    FROM\n    \tTRF\n    WHERE\n       concluido IS NULL AND cancelado IS NULL AND\n       (atribuir IS NULL OR CHARINDEX(atribuir, (SELECT perfil FROM USR WHERE id = @ID)) > 0)\n    ORDER BY\n       criado \n`\n\nvar mssql = global.get('mssql');\n\nvar request = new mssql.Request(global.get('FINANCEIRO')).query(sql).then(function(recordset) {\n    msg.payload = recordset;\n    console.dir(recordset);\n    node.send(msg);\n})\n.catch(function(err) {\n    msg.payload = err;\n    node.error(msg);\n});","outputs":1,"noerr":0,"x":350,"y":360,"wires":[["81e9b238.fdee5"]]},{"id":"309a496c.a015a6","type":"function","z":"53205563.d5978c","name":"SQL","func":"var sql = \n`\nSELECT [id]\n    ,[nome]\n    ,[titulo]\n    ,[descricao]\n    ,[detalhes]\n    ,[documento]\n    ,[atribuir]\n    ,[atribuido]\n    ,[form]\n    ,[parametros]\n    ,[prazo]\n    ,[criado]\n    ,[concluido]\n    ,CAST([versao] AS INT) AS versao\nFROM \n    [dbo].[TRF]\nWHERE \n    id = ${msg.req.params.id}\n`\n\nvar mssql = global.get('mssql');\n\nvar request = new mssql.Request(global.get('FINANCEIRO')).query(sql).then(function(recordset) {\n    msg.payload = recordset.map( function(t) {\n        t.documento = JSON.parse(t.documento);\n        return t;\n    })[0];\n    console.log(recordset);\n    node.send(msg);\n})\n.catch(function(err) {\n    msg.payload = err;\n    node.error(msg);\n});","outputs":1,"noerr":0,"x":350,"y":400,"wires":[["bd2e97bf.947518"]]},{"id":"a1b72ac4.d0b158","type":"inject","z":"53205563.d5978c","name":"connect","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":true,"x":120,"y":40,"wires":[["542088c3.1497c8"]]},{"id":"542088c3.1497c8","type":"function","z":"53205563.d5978c","name":"FINANCEIRO","func":"var mssql = global.get('mssql');\n\nvar FINANCEIRO = new mssql.Connection(\"mssql://financeiro:financeiro@localhost/FINANCEIRO\", function(err) {\n    if (err) {\n        console.dir('-------------> ERRO NA CONEXAO FINANCEIRO !!!!!! <-------------')\n    } else {\n        global.set('FINANCEIRO', FINANCEIRO);\n        console.dir('CONECTADO FINANCEIRO !')\n        \n        FINANCEIRO.on('error', function(err) {\n            node.error({payload: err || { erro: 9996, mensagem: 'Erro desconhecido na conexão'}})\n        });\n        \n    }\n});\n","outputs":1,"noerr":0,"x":380,"y":40,"wires":[["d5d0bc2b.63022"]]},{"id":"d5d0bc2b.63022","type":"debug","z":"53205563.d5978c","name":"result","active":true,"console":"false","complete":"payload","x":570,"y":40,"wires":[]},{"id":"a9d9b650.de6328","type":"inject","z":"53205563.d5978c","name":"test","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":110,"y":120,"wires":[["7ee862b1.c9de3c"]]},{"id":"7ee862b1.c9de3c","type":"function","z":"53205563.d5978c","name":"SQL","func":"var mssql = global.get('mssql')\n\nvar request = new mssql.Request(global.get('FINANCEIRO')).query('select top 1 * from usr').then(function(recordset) {\n    node.send({payload:recordset})\n    console.dir(recordset);\n}).catch(function(err) {\n    node.error(err)\n});\n","outputs":1,"noerr":0,"x":350,"y":120,"wires":[["ab277054.519fa"]]},{"id":"ab277054.519fa","type":"debug","z":"53205563.d5978c","name":"","active":true,"console":"false","complete":"false","x":590,"y":120,"wires":[]},{"id":"dfca026f.b4365","type":"inject","z":"53205563.d5978c","name":"connect","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":true,"x":120,"y":80,"wires":[["a33e5a93.5cebe8"]]},{"id":"a33e5a93.5cebe8","type":"function","z":"53205563.d5978c","name":"GPIMAC","func":"var mssql = global.get('mssql');\n\nvar GPIMAC = new mssql.Connection(\"mssql://gpimac:215083@localhost/GPIMAC_Altamira\", function(err) {\n    if (err) {\n        console.dir('-------------> ERRO NA CONEXAO GPIMAC !!!!!! <-------------')\n    } else {\n        global.set('GPIMAC', GPIMAC);\n        console.dir('CONECTADO GPIMAC !')\n\n        GPIMAC.on('error', function(err) {\n            node.error({payload: err || { erro: 9996, mensagem: 'Erro desconhecido na conexão'}})\n        });\n        \n    }\n});\n","outputs":1,"noerr":0,"x":360,"y":80,"wires":[["30092bcc.9f13d4"]]},{"id":"30092bcc.9f13d4","type":"debug","z":"53205563.d5978c","name":"result","active":true,"console":"false","complete":"payload","x":570,"y":80,"wires":[]},{"id":"214504b4.f461dc","type":"http in","z":"53205563.d5978c","name":"carteira","url":"/api/financeiro/carteiras","method":"get","swaggerDoc":"","x":90,"y":440,"wires":[["67ae5112.cc92e"]]},{"id":"fead886c.14e5a8","type":"http response","z":"53205563.d5978c","name":"","x":570,"y":440,"wires":[]},{"id":"1ee0ad89.5301a2","type":"http in","z":"53205563.d5978c","name":"remessa","url":"/api/financeiro/remessas","method":"get","swaggerDoc":"","x":100,"y":480,"wires":[["b3e6e6b9.d64658"]]},{"id":"704f2263.c1a34c","type":"http in","z":"53205563.d5978c","name":"retorno","url":"/api/financeiro/retornos","method":"get","swaggerDoc":"","x":90,"y":520,"wires":[["8b0ee54.6f5cb18"]]},{"id":"bbe996f0.2c9ab8","type":"http in","z":"53205563.d5978c","name":"tarefas","url":"/api/tarefas/:usuario","method":"get","swaggerDoc":"","x":90,"y":360,"wires":[["6eb19ba6.45fac4"]]},{"id":"9b32aa62.6d1918","type":"http in","z":"53205563.d5978c","name":"tarefa/:id","url":"/api/tarefa/:id","method":"get","swaggerDoc":"","x":100,"y":400,"wires":[["309a496c.a015a6"]]},{"id":"bd2e97bf.947518","type":"http response","z":"53205563.d5978c","name":"","x":570,"y":400,"wires":[]},{"id":"81e9b238.fdee5","type":"http response","z":"53205563.d5978c","name":"","x":570,"y":360,"wires":[]},{"id":"f235bd9d.ebb27","type":"http response","z":"53205563.d5978c","name":"","x":570,"y":520,"wires":[]},{"id":"7cfb5c22.412dc4","type":"http response","z":"53205563.d5978c","name":"","x":570,"y":480,"wires":[]},{"id":"8373ac07.2cf99","type":"http in","z":"53205563.d5978c","name":"titulo","url":"/api/financeiro/recebiveis/lancamento/titulo/:nosso_numero","method":"get","swaggerDoc":"","x":90,"y":560,"wires":[["b9759c97.7c4ad"]]},{"id":"b9759c97.7c4ad","type":"function","z":"53205563.d5978c","name":"SQL","func":"var mssql = global.get('mssql');\n\nvar procedure_name = 'TITULO'\n\nvar request = new mssql.Request(global.get('FINANCEIRO'));\n\nrequest.input('NOSSO_NUMERO', mssql.Int, msg.req.params.nosso_numero)\n\nrequest.execute(procedure_name).then(function(recordsets, returnValue, affected) {\n\n    console.dir('Recordsets: ' + recordsets.length); // count of recordsets returned by the procedure\n    console.dir('Record count in first recordset: ' + recordsets[0].length); // count of rows contained in first recordset\n    console.dir('Return value: ' + returnValue); // procedure return value\n    console.dir('Recordsets return value: ' + recordsets.returnValue); // same as previous line\n    console.dir('Rows affected: ' + affected); // number of rows affected by the statemens\n    console.dir('Recordset rows affected: ' + recordsets.rowsAffected); // same as previous line\n\n    //console.log(request.parameters.output_parameter.value); // output value\n\n    msg.payload = Array.isArray(recordsets) && recordsets[0][0] || [{ erro: 9997, mensagem: 'A procedure foi executada mas não retornou resposta para esta solicitação !'}];\n    msg.payload.cliente = recordsets[1][0];\n    msg.payload.representante = recordsets[2][0] || {};\n    msg.payload.parcelas = recordsets[3];\n    console.dir(msg.payload);\n    node.send(msg);\n\n})\n.catch(function(err) {\n    console.dir('-----------------> Erro ao chamar Stored Procedure' + procedure_name + ' <-----------------\\n' + JSON.stringify(err))\n    msg.payload = err || { erro: 9999, mensagem: 'Erro desconhecido.'};\n    node.send(msg);\n});\n","outputs":"1","noerr":0,"x":350,"y":560,"wires":[["1646c3d4.11a2ec"]]},{"id":"1646c3d4.11a2ec","type":"http response","z":"53205563.d5978c","name":"","x":570,"y":560,"wires":[]},{"id":"ce2c6364.aa9ff","type":"function","z":"53205563.d5978c","name":"SQL","func":"var mssql = global.get('mssql');\n\nvar procedure_name = 'IMPORT_PEDIDOS_LIBERADOS'\n\nvar request = new mssql.Request(global.get('FINANCEIRO'));\n\nrequest.execute(procedure_name).then(function(recordsets, returnValue, affected) {\n\n    console.dir('Recordsets: ' + recordsets.length); // count of recordsets returned by the procedure\n    console.dir('Record count in first recordset: ' + recordsets[0].length); // count of rows contained in first recordset\n    console.dir('Return value: ' + returnValue); // procedure return value\n    console.dir('Recordsets return value: ' + recordsets.returnValue); // same as previous line\n    console.dir('Rows affected: ' + affected); // number of rows affected by the statemens\n    console.dir('Recordset rows affected: ' + recordsets.rowsAffected); // same as previous line\n\n    //console.log(request.parameters.output_parameter.value); // output value\n\n    msg.payload = Array.isArray(recordsets) && recordsets || [{ erro: 9997, mensagem: 'A procedure foi executada mas não retornou resposta para esta solicitação !'}];\n    console.dir(msg.payload);\n    node.send(msg);\n\n})\n.catch(function(err) {\n    console.dir('-----------------> Erro ao chamar Stored Procedure' + procedure_name + ' <-----------------\\n' + JSON.stringify(err))\n    msg.payload = err || { erro: 9999, mensagem: 'Erro desconhecido.'};\n    node.send(msg);\n});\n    ","outputs":"1","noerr":0,"x":350,"y":740,"wires":[["4707a5a7.788d5c"]]},{"id":"4dcfa721.644e08","type":"inject","z":"53205563.d5978c","name":"Pedido Liberado","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"*/1 8-17 * * 1,2,3,4,5","once":false,"x":150,"y":740,"wires":[["ce2c6364.aa9ff"]]},{"id":"6e04ba65.1b9684","type":"http in","z":"53205563.d5978c","name":"GPIMAC Pedido","url":"/api/gpimac/pedido/:numero","method":"get","swaggerDoc":"","x":120,"y":200,"wires":[["634cb87.71dee48"]]},{"id":"aef17b2b.73aed8","type":"http response","z":"53205563.d5978c","name":"","x":570,"y":200,"wires":[]},{"id":"634cb87.71dee48","type":"function","z":"53205563.d5978c","name":"SQL","func":"var mssql = global.get('mssql');\n\nvar procedure_name = 'CARREGA_PEDIDO_GPIMAC'\n\nvar request = new mssql.Request(global.get('FINANCEIRO'));\n\n// ---------------------- CAMPOS DA TRANSACAO ------------------------------------------\nrequest.input('NUMERO', mssql.Int, msg.req.params.numero)\n\nrequest.execute(procedure_name).then(function(recordsets, returnValue, affected) {\n\n    console.dir('Recordsets: ' + recordsets.length); // count of recordsets returned by the procedure\n    console.dir('Record count in first recordset: ' + recordsets[0].length); // count of rows contained in first recordset\n    console.dir('Return value: ' + returnValue); // procedure return value\n    console.dir('Recordsets return value: ' + recordsets.returnValue); // same as previous line\n    console.dir('Rows affected: ' + affected); // number of rows affected by the statemens\n    console.dir('Recordset rows affected: ' + recordsets.rowsAffected); // same as previous line\n\n    //console.log(request.parameters.output_parameter.value); // output value\n\n    msg.payload = Array.isArray(recordsets) && recordsets[0][0];\n    msg.payload.cliente = recordsets[1][0];\n    msg.payload.representante = recordsets[2][0];\n    msg.payload.totais = recordsets[3][0];\n    msg.payload.parcelas = recordsets[4];\n    \n    console.dir(msg.payload);\n    node.send(msg);\n\n})\n.catch(function(err) {\n    console.dir('-----------------> Erro ao chamar Stored Procedure' + procedure_name + ' <-----------------\\n' + JSON.stringify(err))\n    msg.payload = err || { erro: 9999, mensagem: 'Erro desconhecido.'};\n    node.send(msg);\n});\n    ","outputs":1,"noerr":0,"x":350,"y":200,"wires":[["aef17b2b.73aed8"]]},{"id":"e7501ce4.10a34","type":"function","z":"53205563.d5978c","name":"SQL","func":"var mssql = global.get('mssql');\n\nvar procedure_name = 'FN_CONTAS_LIST'\n\nvar request = new mssql.Request(global.get('FINANCEIRO'));\n\nrequest.execute(procedure_name).then(function(recordsets, returnValue, affected) {\n\n    console.dir('Recordsets: ' + recordsets.length); // count of recordsets returned by the procedure\n    console.dir('Record count in first recordset: ' + recordsets[0].length); // count of rows contained in first recordset\n    console.dir('Return value: ' + returnValue); // procedure return value\n    console.dir('Recordsets return value: ' + recordsets.returnValue); // same as previous line\n    console.dir('Rows affected: ' + affected); // number of rows affected by the statemens\n    console.dir('Recordset rows affected: ' + recordsets.rowsAffected); // same as previous line\n\n    //console.log(request.parameters.output_parameter.value); // output value\n\n    msg.payload = Array.isArray(recordsets) && recordsets[0].map( banco => {\n        banco.agencias = recordsets[1].filter( agencia => agencia.banco === banco.id).map( agencia => {\n            agencia.contas = recordsets[2].filter( conta => agencia.banco === conta.banco && agencia.agencia === conta.agencia)\n            return agencia;\n        })\n        return {\n            id: banco.id,\n            codigo: banco.codigo,\n            nome: banco.nome,\n            agencias: banco.agencias.map( agencia => {\n                return {\n                    agencia: agencia.agencia,\n                    contas: agencia.contas.map( conta => {\n                        return {\n                            id: conta.id,\n                            conta: conta.conta,\n                            saldo: conta.saldo,\n                            ativo: conta.ativo\n                        }\n                    })\n                }\n            })\n        };\n    });\n    \n    console.dir(msg.payload);\n    node.send(msg);\n\n})\n.catch(function(err) {\n    console.dir('-----------------> Erro ao chamar Stored Procedure ' + procedure_name + ' <-----------------')\n    console.dir(JSON.stringify(err))\n    msg.payload = err || { erro: 9999, mensagem: 'Erro desconhecido.'};\n    node.send(msg);\n});\n    ","outputs":1,"noerr":0,"x":350,"y":1500,"wires":[["f07484b4.3dece8"]]},{"id":"a62c1990.454118","type":"http in","z":"53205563.d5978c","name":"contas","url":"/api/contacorrente/contas","method":"get","swaggerDoc":"","x":90,"y":1500,"wires":[["e7501ce4.10a34"]]},{"id":"f1a84fa1.ad915","type":"function","z":"53205563.d5978c","name":"SQL","func":"var mssql = global.get('mssql');\n\nvar procedure_name = 'FN_LANCAMENTOS_A_CONFERIR'\n\nvar request = new mssql.Request(global.get('FINANCEIRO'));\n\n// ---------------------- CAMPOS DA TRANSACAO ------------------------------------------\nrequest.input('CONTA', mssql.Int, msg.req.params.conta)\n\nrequest.execute(procedure_name).then(function(recordsets, returnValue, affected) {\n\n    console.dir('Recordsets: ' + recordsets.length); // count of recordsets returned by the procedure\n    console.dir('Record count in first recordset: ' + recordsets[0].length); // count of rows contained in first recordset\n    console.dir('Return value: ' + returnValue); // procedure return value\n    console.dir('Recordsets return value: ' + recordsets.returnValue); // same as previous line\n    console.dir('Rows affected: ' + affected); // number of rows affected by the statemens\n    console.dir('Recordset rows affected: ' + recordsets.rowsAffected); // same as previous line\n\n    //console.log(request.parameters.output_parameter.value); // output value\n\n    msg.payload = Array.isArray(recordsets) && recordsets[0].map( lancamento => {\n        lancamento.liquidado = !!lancamento.liquidado\n        return lancamento\n    });\n    console.dir(msg.payload);\n    node.send(msg);\n\n})\n.catch(function(err) {\n    console.dir('-----------------> Erro ao chamar Stored Procedure ' + procedure_name + ' <-----------------');\n    console.dir(JSON.stringify(err));\n    msg.payload = err || { erro: 9999, mensagem: 'Erro desconhecido.'};\n    node.send(msg);\n});\n    ","outputs":1,"noerr":0,"x":350,"y":1560,"wires":[["b2c19b67.e44f18"]]},{"id":"179682a0.ce241d","type":"http in","z":"53205563.d5978c","name":"a conferir","url":"/api/contacorrente/lancamentos/conferir/:conta","method":"get","swaggerDoc":"","x":100,"y":1560,"wires":[["f1a84fa1.ad915"]]},{"id":"60f514aa.ea749c","type":"function","z":"53205563.d5978c","name":"SQL","func":"var mssql = global.get('mssql');\n\nvar procedure_name = 'FN_BANCOS_LIST'\n\nvar request = new mssql.Request(global.get('FINANCEIRO'));\n\nrequest.execute(procedure_name).then(function(recordsets, returnValue, affected) {\n\n    console.dir('Recordsets: ' + recordsets.length); // count of recordsets returned by the procedure\n    console.dir('Record count in first recordset: ' + recordsets[0].length); // count of rows contained in first recordset\n    console.dir('Return value: ' + returnValue); // procedure return value\n    console.dir('Recordsets return value: ' + recordsets.returnValue); // same as previous line\n    console.dir('Rows affected: ' + affected); // number of rows affected by the statemens\n    console.dir('Recordset rows affected: ' + recordsets.rowsAffected); // same as previous line\n\n    //console.log(request.parameters.output_parameter.value); // output value\n\n    msg.payload = Array.isArray(recordsets) && recordsets[0];\n\n    console.dir(msg.payload);\n    node.send(msg);\n\n})\n.catch(function(err) {\n    console.dir('-----------------> Erro ao chamar Stored Procedure ' + procedure_name + ' <-----------------')\n    console.dir(JSON.stringify(err))\n    msg.payload = err || { erro: 9999, mensagem: 'Erro desconhecido.'};\n    node.send(msg);\n});\n    ","outputs":1,"noerr":0,"x":350,"y":1460,"wires":[["a81ba527.625628"]]},{"id":"97b7aadd.0dc568","type":"http in","z":"53205563.d5978c","name":"bancos","url":"/api/contacorrente/bancos","method":"get","swaggerDoc":"","x":90,"y":1460,"wires":[["60f514aa.ea749c"]]},{"id":"1f7df9cf.d93ef6","type":"function","z":"53205563.d5978c","name":"SQL","func":"var mssql = global.get('mssql');\n\nvar procedure_name = 'FN_LANCAMENTO_ADD'\n\nvar request = new mssql.Request(global.get('FINANCEIRO'));\n\n// ---------------------- CAMPOS DA TRANSACAO ------------------------------------------\n\nrequest.input('ID', mssql.Int, msg.payload.id)\nrequest.input('CONTA', mssql.Int, msg.payload.conta)\nrequest.input('DATA', mssql.DateTime2, msg.payload.data)\nrequest.input('LIQUIDACAO', mssql.DateTime2, msg.payload.liquidacao)\nrequest.input('DOCUMENTO', mssql.VarChar(50), msg.payload.documento)\nrequest.input('DESCRICAO', mssql.VarChar(100), msg.payload.descricao)\nrequest.input('VALOR', mssql.Money, msg.payload.valor)\nrequest.input('OPERACAO', mssql.Char(1), msg.payload.operacao)\nrequest.input('LIQUIDADO', mssql.Bit, msg.payload.liquidado)\n\nrequest.execute(procedure_name).then(function(recordsets, returnValue, affected) {\n\n    console.dir('Recordsets: ' + recordsets.length); // count of recordsets returned by the procedure\n    console.dir('Record count in first recordset: ' + recordsets[0].length); // count of rows contained in first recordset\n    console.dir('Return value: ' + returnValue); // procedure return value\n    console.dir('Recordsets return value: ' + recordsets.returnValue); // same as previous line\n    console.dir('Rows affected: ' + affected); // number of rows affected by the statemens\n    console.dir('Recordset rows affected: ' + recordsets.rowsAffected); // same as previous line\n\n    //console.log(request.parameters.output_parameter.value); // output value\n\n    msg.payload = Array.isArray(recordsets) && recordsets || [{ erro: 9997, mensagem: 'A procedure foi executada mas não retornou resposta para esta solicitação !'}];\n    console.dir(msg.payload);\n    node.send(msg);\n\n})\n.catch(function(err) {\n    console.dir('-----------------> Erro ao chamar Stored Procedure ' + procedure_name + ' <-----------------')\n    console.dir(JSON.stringify(err))\n    msg.payload = err || { erro: 9999, mensagem: 'Erro desconhecido.'};\n    node.send(msg);\n});\n    ","outputs":1,"noerr":0,"x":350,"y":1700,"wires":[["a2ca00f1.44b2c"]]},{"id":"4a705584.99ac2c","type":"http in","z":"53205563.d5978c","name":"add","url":"/api/contacorrente/lancamento/add","method":"post","swaggerDoc":"","x":90,"y":1700,"wires":[["1f7df9cf.d93ef6"]]},{"id":"a2ca00f1.44b2c","type":"function","z":"53205563.d5978c","name":"NOTIFY","func":"if (Array.isArray(msg.payload) && msg.payload.length > 0) {\n    \n    if (Array.isArray(msg.payload[0]) && msg.payload[0].length > 0 && msg.payload[0][0].erro === 0) {\n        return [\n            null, // mensagens de retorno\n            {payload: msg.payload[1]}, // notificações\n            {req: msg.req, res: msg.res, payload: msg.payload[2] ? msg.payload[2][0] : ''}\n        ];\n    } else {\n        return [\n            {req: msg.req, res: msg.res, payload: msg.payload[0][0]}, // mensagens de retorno\n            null, // notificações\n            null\n        ];\n    }\n    \n} else {\n    return [\n        msg, \n        null, \n        null\n    ];\n}\n","outputs":"3","noerr":0,"x":580,"y":1700,"wires":[["81dc2dbf.cc6c1","c49b12b.447b8f"],["36402f02.e007"],["e7e1cfc1.564b1","23658ddb.da2ee2"]]},{"id":"199c8a86.8e1525","type":"mqtt out","z":"53205563.d5978c","name":"","topic":"","qos":"","retain":"","broker":"ca2398cb.485db8","x":1090,"y":1680,"wires":[]},{"id":"cf57cfb2.cde53","type":"function","z":"53205563.d5978c","name":"tarefa","func":"msg.topic = msg.payload.topico;\n\nreturn msg;","outputs":1,"noerr":0,"x":930,"y":1720,"wires":[["199c8a86.8e1525","b7a4920c.c5b85"]]},{"id":"36402f02.e007","type":"split","z":"53205563.d5978c","name":"","splt":"\\n","x":770,"y":1720,"wires":[["cf57cfb2.cde53"]]},{"id":"81dc2dbf.cc6c1","type":"function","z":"53205563.d5978c","name":"erro","func":"if ((msg.payload.erro && msg.payload.erro !== 0) || (msg.payload.number) || (msg.payload.message)) {\n    msg.statusCode = 500;\n\n    msg.payload = msg.payload || {};\n    msg.payload.erro = msg.payload.erro || msg.payload.error || msg.payload.number || 9999;\n    msg.payload.mensagem = msg.payload.mensagem || msg.payload.message || 'Ocorreu um erro interno ao executar a sua solicitação.'\n}\n\nreturn msg;","outputs":1,"noerr":0,"x":770,"y":1680,"wires":[["94d2f303.f0d5"]]},{"id":"94d2f303.f0d5","type":"http response","z":"53205563.d5978c","name":"","x":930,"y":1680,"wires":[]},{"id":"b7a4920c.c5b85","type":"debug","z":"53205563.d5978c","name":"","active":true,"console":"false","complete":"payload","x":1110,"y":1760,"wires":[]},{"id":"c49b12b.447b8f","type":"debug","z":"53205563.d5978c","name":"","active":true,"console":"false","complete":"payload","x":790,"y":1640,"wires":[]},{"id":"a81ba527.625628","type":"http response","z":"53205563.d5978c","name":"","x":570,"y":1460,"wires":[]},{"id":"f07484b4.3dece8","type":"http response","z":"53205563.d5978c","name":"","x":570,"y":1500,"wires":[]},{"id":"b2c19b67.e44f18","type":"http response","z":"53205563.d5978c","name":"","x":570,"y":1560,"wires":[]},{"id":"e7e1cfc1.564b1","type":"http response","z":"53205563.d5978c","name":"","x":770,"y":1760,"wires":[]},{"id":"23658ddb.da2ee2","type":"debug","z":"53205563.d5978c","name":"","active":true,"console":"false","complete":"payload","x":790,"y":1800,"wires":[]},{"id":"32bf5008.c8b35","type":"http in","z":"53205563.d5978c","name":"liquidar","url":"/api/contacorrente/lancamento/liquidar","method":"put","swaggerDoc":"","x":90,"y":1660,"wires":[["ca7adf8b.5794"]]},{"id":"ca7adf8b.5794","type":"function","z":"53205563.d5978c","name":"SQL","func":"var mssql = global.get('mssql');\n\nvar procedure_name = 'FN_LANCAMENTO_LIQUIDAR'\n\nvar request = new mssql.Request(global.get('FINANCEIRO'));\n\n// ---------------------- CAMPOS DA TRANSACAO ------------------------------------------\n\nrequest.input('ID', mssql.Int, msg.payload.id)\nrequest.input('LIQUIDADO', mssql.Bit, msg.payload.liquidado)\n\nrequest.execute(procedure_name).then(function(recordsets, returnValue, affected) {\n\n    console.dir('Recordsets: ' + recordsets.length); // count of recordsets returned by the procedure\n    console.dir('Record count in first recordset: ' + recordsets[0].length); // count of rows contained in first recordset\n    console.dir('Return value: ' + returnValue); // procedure return value\n    console.dir('Recordsets return value: ' + recordsets.returnValue); // same as previous line\n    console.dir('Rows affected: ' + affected); // number of rows affected by the statemens\n    console.dir('Recordset rows affected: ' + recordsets.rowsAffected); // same as previous line\n\n    //console.log(request.parameters.output_parameter.value); // output value\n\n    msg.payload = Array.isArray(recordsets) && recordsets || [{ erro: 9997, mensagem: 'A procedure foi executada mas não retornou resposta para esta solicitação !'}];\n    console.dir(msg.payload);\n    node.send(msg);\n\n})\n.catch(function(err) {\n    console.dir('-----------------> Erro ao chamar Stored Procedure ' + procedure_name + ' <-----------------')\n    console.dir(JSON.stringify(err))\n    msg.payload = err || { erro: 9999, mensagem: 'Erro desconhecido.'};\n    node.send(msg);\n});\n    ","outputs":1,"noerr":0,"x":350,"y":1660,"wires":[["a2ca00f1.44b2c"]]},{"id":"a1857c09.862ac","type":"function","z":"53205563.d5978c","name":"SQL","func":"var mssql = global.get('mssql');\n\nvar procedure_name = 'FN_LANCAMENTOS_LIQUIDADOS'\n\nvar request = new mssql.Request(global.get('FINANCEIRO'));\n\n// ---------------------- CAMPOS DA TRANSACAO ------------------------------------------\nrequest.input('CONTA', mssql.Int, msg.req.params.conta)\n\nrequest.execute(procedure_name).then(function(recordsets, returnValue, affected) {\n\n    console.dir('Recordsets: ' + recordsets.length); // count of recordsets returned by the procedure\n    console.dir('Record count in first recordset: ' + recordsets[0].length); // count of rows contained in first recordset\n    console.dir('Return value: ' + returnValue); // procedure return value\n    console.dir('Recordsets return value: ' + recordsets.returnValue); // same as previous line\n    console.dir('Rows affected: ' + affected); // number of rows affected by the statemens\n    console.dir('Recordset rows affected: ' + recordsets.rowsAffected); // same as previous line\n\n    //console.log(request.parameters.output_parameter.value); // output value\n\n    msg.payload = Array.isArray(recordsets) && recordsets[0].map( lancamento => {\n        lancamento.liquidado = !!lancamento.liquidado\n        return lancamento\n    });\n    node.send(msg);\n\n})\n.catch(function(err) {\n    console.dir('-----------------> Erro ao chamar Stored Procedure ' + procedure_name + ' <-----------------');\n    console.dir(JSON.stringify(err));\n    msg.payload = err || { erro: 9999, mensagem: 'Erro desconhecido.'};\n    node.send(msg);\n});\n    ","outputs":1,"noerr":0,"x":350,"y":1600,"wires":[["e39672a1.e5511"]]},{"id":"325246d1.250cca","type":"http in","z":"53205563.d5978c","name":"liquidados","url":"/api/contacorrente/lancamentos/liquidados/:conta","method":"get","swaggerDoc":"","x":100,"y":1600,"wires":[["a1857c09.862ac"]]},{"id":"e39672a1.e5511","type":"http response","z":"53205563.d5978c","name":"","x":570,"y":1600,"wires":[]},{"id":"5c37d54.5d43b2c","type":"function","z":"53205563.d5978c","name":"SQL","func":"var sql = \n`\nDECLARE @ID INT\n\nSET @ID = '${msg.req.params.usuario}'\n    \nSELECT DISTINCT titulo, descricao, form\nFROM\n\tUSR_LNK\nWHERE\n    CHARINDEX(perfil, (SELECT perfil FROM USR WHERE id = @ID)) > 0\nORDER BY\n    titulo\n`\n\nvar mssql = global.get('mssql');\n\nvar request = new mssql.Request(global.get('FINANCEIRO')).query(sql).then(function(recordset) {\n    msg.payload = recordset;\n    console.dir(recordset);\n    node.send(msg);\n})\n.catch(function(err) {\n    msg.payload = err;\n    node.error(msg);\n});","outputs":1,"noerr":0,"x":970,"y":220,"wires":[["feb6c86f.ff5528"]]},{"id":"36a845d5.6bf13a","type":"http in","z":"53205563.d5978c","name":"consultas","url":"/api/consultas/:usuario","method":"get","swaggerDoc":"","x":800,"y":220,"wires":[["5c37d54.5d43b2c"]]},{"id":"feb6c86f.ff5528","type":"http response","z":"53205563.d5978c","name":"","x":1130,"y":220,"wires":[]},{"id":"d3d7681b.0ec418","type":"function","z":"53205563.d5978c","name":"SQL","func":"var mssql = global.get('mssql');\n\nvar procedure_name = 'CONSULTA_LANCAMENTOS'\n\nvar request = new mssql.Request(global.get('FINANCEIRO'));\n\nrequest.execute(procedure_name).then(function(recordsets, returnValue, affected) {\n\n    console.dir('Recordsets: ' + recordsets.length); // count of recordsets returned by the procedure\n    console.dir('Record count in first recordset: ' + recordsets[0].length); // count of rows contained in first recordset\n    console.dir('Return value: ' + returnValue); // procedure return value\n    console.dir('Recordsets return value: ' + recordsets.returnValue); // same as previous line\n    console.dir('Rows affected: ' + affected); // number of rows affected by the statemens\n    console.dir('Recordset rows affected: ' + recordsets.rowsAffected); // same as previous line\n\n    //console.log(request.parameters.output_parameter.value); // output value\n\n    msg.payload = Array.isArray(recordsets) && recordsets[0].map( recebivel => {\n        \n        recebivel.pedido = recordsets[1].find( pedido => pedido.nosso_numero === recebivel.nosso_numero)\n        \n        recebivel.parcelas = recordsets[2].filter( parcela => parcela.nosso_numero === recebivel.nosso_numero)\n        \n        return recebivel\n    });\n    console.dir(msg.payload);\n    node.send(msg);\n\n})\n.catch(function(err) {\n    console.dir('-----------------> Erro ao chamar Stored Procedure ' + procedure_name + ' <-----------------');\n    console.dir(JSON.stringify(err));\n    msg.payload = err || { erro: 9999, mensagem: 'Erro desconhecido.'};\n    node.send(msg);\n});\n    ","outputs":1,"noerr":0,"x":970,"y":280,"wires":[["4d5a4b84.72ba64"]]},{"id":"da9fc804.74ca68","type":"http in","z":"53205563.d5978c","name":"lancamento","url":"/api/consulta/lancamento","method":"get","swaggerDoc":"","x":810,"y":280,"wires":[["d3d7681b.0ec418"]]},{"id":"4d5a4b84.72ba64","type":"http response","z":"53205563.d5978c","name":"","x":1130,"y":280,"wires":[]},{"id":"8321a82e.3b0538","type":"function","z":"53205563.d5978c","name":"SQL","func":"var sql = `\n    DECLARE @PERFIL NVARCHAR(50)\n    \n    SET @PERFIL = '${msg.req.query.perfil}'\n    \n    SELECT *\n    FROM\n    \tUSR_LNK\n    WHERE\n       perfil IN (@PERFIL)\n    ORDER BY\n       padrao DESC \n`\n\nvar mssql = global.get('mssql');\n\nvar request = new mssql.Request(global.get('FINANCEIRO')).query(sql).then(function(recordset) {\n    msg.payload = recordset;\n    console.dir(recordset);\n    node.send(msg);\n})\n.catch(function(err) {\n    msg.payload = err;\n    node.error(msg);\n});","outputs":1,"noerr":0,"x":970,"y":320,"wires":[["a2d4e1c3.21a4c"]]},{"id":"ff47c07d.bb955","type":"http in","z":"53205563.d5978c","name":"cobranca","url":"/api/consulta/cobranca","method":"get","swaggerDoc":"","x":800,"y":320,"wires":[["8321a82e.3b0538"]]},{"id":"a2d4e1c3.21a4c","type":"http response","z":"53205563.d5978c","name":"","x":1130,"y":320,"wires":[]},{"id":"f66f545b.3cc9d8","type":"function","z":"53205563.d5978c","name":"SQL","func":"var sql = `\n    DECLARE @PERFIL NVARCHAR(50)\n    \n    SET @PERFIL = '${msg.req.query.perfil}'\n    \n    SELECT *\n    FROM\n    \tUSR_LNK\n    WHERE\n       perfil IN (@PERFIL)\n    ORDER BY\n       padrao DESC \n`\n\nvar mssql = global.get('mssql');\n\nvar request = new mssql.Request(global.get('FINANCEIRO')).query(sql).then(function(recordset) {\n    msg.payload = recordset;\n    console.dir(recordset);\n    node.send(msg);\n})\n.catch(function(err) {\n    msg.payload = err;\n    node.error(msg);\n});","outputs":1,"noerr":0,"x":970,"y":360,"wires":[["53899772.543648"]]},{"id":"cbc1b50d.56eaa8","type":"http in","z":"53205563.d5978c","name":"remessa","url":"/api/consulta/remessa","method":"get","swaggerDoc":"","x":800,"y":360,"wires":[["f66f545b.3cc9d8"]]},{"id":"53899772.543648","type":"http response","z":"53205563.d5978c","name":"","x":1130,"y":360,"wires":[]},{"id":"bd98ece0.4c9ca","type":"function","z":"53205563.d5978c","name":"SQL","func":"var sql = `\n    DECLARE @PERFIL NVARCHAR(50)\n    \n    SET @PERFIL = '${msg.req.query.perfil}'\n    \n    SELECT *\n    FROM\n    \tUSR_LNK\n    WHERE\n       perfil IN (@PERFIL)\n    ORDER BY\n       padrao DESC \n`\n\nvar mssql = global.get('mssql');\n\nvar request = new mssql.Request(global.get('FINANCEIRO')).query(sql).then(function(recordset) {\n    msg.payload = recordset;\n    console.dir(recordset);\n    node.send(msg);\n})\n.catch(function(err) {\n    msg.payload = err;\n    node.error(msg);\n});","outputs":1,"noerr":0,"x":970,"y":400,"wires":[["406a43b8.2527bc"]]},{"id":"55b381d0.d05d7","type":"http in","z":"53205563.d5978c","name":"retorno","url":"/api/consulta/retorno","method":"get","swaggerDoc":"","x":790,"y":400,"wires":[["bd98ece0.4c9ca"]]},{"id":"406a43b8.2527bc","type":"http response","z":"53205563.d5978c","name":"","x":1130,"y":400,"wires":[]},{"id":"a0d16b9f.611198","type":"http in","z":"53205563.d5978c","name":"excluir","url":"/api/contacorrente/lancamento/excluir/:id","method":"delete","swaggerDoc":"","x":90,"y":1780,"wires":[["1f9e3b79.981995"]]},{"id":"1f9e3b79.981995","type":"function","z":"53205563.d5978c","name":"SQL","func":"var mssql = global.get('mssql');\n\nvar procedure_name = 'FN_LANCAMENTO_REMOVE'\n\nvar request = new mssql.Request(global.get('FINANCEIRO'));\n\n// ---------------------- CAMPOS DA TRANSACAO ------------------------------------------\n\nrequest.input('ID', mssql.Int, msg.req.params.id)\n\nrequest.execute(procedure_name).then(function(recordsets, returnValue, affected) {\n\n    console.dir('Recordsets: ' + recordsets.length); // count of recordsets returned by the procedure\n    console.dir('Record count in first recordset: ' + recordsets[0].length); // count of rows contained in first recordset\n    console.dir('Return value: ' + returnValue); // procedure return value\n    console.dir('Recordsets return value: ' + recordsets.returnValue); // same as previous line\n    console.dir('Rows affected: ' + affected); // number of rows affected by the statemens\n    console.dir('Recordset rows affected: ' + recordsets.rowsAffected); // same as previous line\n\n    //console.log(request.parameters.output_parameter.value); // output value\n\n    msg.payload = Array.isArray(recordsets) && recordsets || [{ erro: 9997, mensagem: 'A procedure foi executada mas não retornou resposta para esta solicitação !'}];\n    console.dir(msg.payload);\n    node.send(msg);\n\n})\n.catch(function(err) {\n    console.dir('-----------------> Erro ao chamar Stored Procedure ' + procedure_name + ' <-----------------')\n    console.dir(JSON.stringify(err))\n    msg.payload = err || { erro: 9999, mensagem: 'Erro desconhecido.'};\n    node.send(msg);\n});\n    ","outputs":1,"noerr":0,"x":350,"y":1780,"wires":[["a2ca00f1.44b2c"]]},{"id":"38d3ef7f.3a592","type":"function","z":"53205563.d5978c","name":"SQL","func":"var mssql = global.get('mssql');\n\nvar procedure_name = 'FN_LANCAMENTO_EDIT'\n\nvar request = new mssql.Request(global.get('FINANCEIRO'));\n\n// ---------------------- CAMPOS DA TRANSACAO ------------------------------------------\n\nrequest.input('ID', mssql.Int, msg.payload.id)\nrequest.input('CONTA', mssql.Int, msg.payload.conta)\nrequest.input('DATA', mssql.DateTime2, msg.payload.data)\nrequest.input('LIQUIDACAO', mssql.DateTime2, msg.payload.liquidacao)\nrequest.input('DOCUMENTO', mssql.VarChar(50), msg.payload.documento)\nrequest.input('DESCRICAO', mssql.VarChar(100), msg.payload.descricao)\nrequest.input('VALOR', mssql.Money, msg.payload.valor)\nrequest.input('OPERACAO', mssql.Char(1), msg.payload.operacao)\nrequest.input('LIQUIDADO', mssql.Bit, msg.payload.liquidado)\n\nrequest.execute(procedure_name).then(function(recordsets, returnValue, affected) {\n\n    console.dir('Recordsets: ' + recordsets.length); // count of recordsets returned by the procedure\n    console.dir('Record count in first recordset: ' + recordsets[0].length); // count of rows contained in first recordset\n    console.dir('Return value: ' + returnValue); // procedure return value\n    console.dir('Recordsets return value: ' + recordsets.returnValue); // same as previous line\n    console.dir('Rows affected: ' + affected); // number of rows affected by the statemens\n    console.dir('Recordset rows affected: ' + recordsets.rowsAffected); // same as previous line\n\n    //console.log(request.parameters.output_parameter.value); // output value\n\n    msg.payload = Array.isArray(recordsets) && recordsets || [{ erro: 9997, mensagem: 'A procedure foi executada mas não retornou resposta para esta solicitação !'}];\n    console.dir(msg.payload);\n    node.send(msg);\n\n})\n.catch(function(err) {\n    console.dir('-----------------> Erro ao chamar Stored Procedure ' + procedure_name + ' <-----------------')\n    console.dir(JSON.stringify(err))\n    msg.payload = err || { erro: 9999, mensagem: 'Erro desconhecido.'};\n    node.send(msg);\n});\n    ","outputs":1,"noerr":0,"x":350,"y":1740,"wires":[["a2ca00f1.44b2c"]]},{"id":"bb1674cc.88a008","type":"http in","z":"53205563.d5978c","name":"edit","url":"/api/contacorrente/lancamento/edit","method":"put","swaggerDoc":"","x":90,"y":1740,"wires":[["38d3ef7f.3a592"]]},{"id":"7f29279c.5ad628","type":"inject","z":"53205563.d5978c","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"x":100,"y":2020,"wires":[["e161adc3.11414"]]},{"id":"e161adc3.11414","type":"function","z":"53205563.d5978c","name":"filename","func":"function right(str, n){\n    if (n <= 0)\n       return \"\";\n    else if (n > String(str).length)\n       return str;\n    else {\n       var iLen = String(str).length;\n       return String(str).substring(iLen, iLen - n);\n    }\n}\n\nlet remessa = parseInt(global.get('remessa') || 0, 10)\nglobal.set(\"remessa\", remessa + 1);\n\nlet hoje = new Date();\nlet dia = right('00' + hoje.getDate().toString(), 2);\nlet mes = right('00' + (hoje.getMonth() + 1).toString(), 2);\nlet seq = right('00' + remessa.toString(), 2);\n\nmsg.filename = 'CB' + dia + mes + seq + '.TST'\n\nreturn msg;","outputs":1,"noerr":0,"x":340,"y":2020,"wires":[["2219c37a.0901cc","4d0ebca2.6d7224"]]},{"id":"2219c37a.0901cc","type":"debug","z":"53205563.d5978c","name":"","active":true,"console":"false","complete":"filename","x":910,"y":2020,"wires":[]},{"id":"cd5314d4.886c38","type":"comment","z":"53205563.d5978c","name":"CNAB BRADESCO - REMESSA","info":"","x":150,"y":1960,"wires":[]},{"id":"4d0ebca2.6d7224","type":"function","z":"53205563.d5978c","name":"HEADER","func":"msg.payload = []\n\nlet header = Array.apply(' ', Array(400))\n\nmsg.payload.push(header);\n\nreturn msg;","outputs":1,"noerr":0,"x":600,"y":2120,"wires":[["4cab0b96.c53364"]]},{"id":"4cab0b96.c53364","type":"debug","z":"53205563.d5978c","name":"","active":true,"console":"false","complete":"payload","x":910,"y":2120,"wires":[]},{"id":"fdd94bf8.da2318","type":"http in","z":"53205563.d5978c","name":"senha","url":"/api/usuario/password","method":"post","swaggerDoc":"","x":90,"y":280,"wires":[["c71d007a.7faef"]]},{"id":"3ef594f.09e356c","type":"http response","z":"53205563.d5978c","name":"","x":570,"y":280,"wires":[]},{"id":"c71d007a.7faef","type":"function","z":"53205563.d5978c","name":"SQL","func":"var mssql = global.get('mssql');\n\nvar procedure_name = 'USUARIO_TROCA_SENHA'\n\nvar request = new mssql.Request(global.get('FINANCEIRO'));\n\n// ---------------------- CAMPOS DA TRANSACAO ------------------------------------------\n\nrequest.input('USUARIO', mssql.VarChar(20), msg.payload.usuario)\nrequest.input('SENHA_ATUAL', mssql.VarChar(32), msg.payload.senha)\nrequest.input('SENHA_NOVA', mssql.VarChar(32), msg.payload.nova)\n\nrequest.execute(procedure_name).then(function(recordsets, returnValue, affected) {\n\n    console.dir('Recordsets: ' + recordsets.length); // count of recordsets returned by the procedure\n    console.dir('Record count in first recordset: ' + recordsets[0].length); // count of rows contained in first recordset\n    console.dir('Return value: ' + returnValue); // procedure return value\n    console.dir('Recordsets return value: ' + recordsets.returnValue); // same as previous line\n    console.dir('Rows affected: ' + affected); // number of rows affected by the statemens\n    console.dir('Recordset rows affected: ' + recordsets.rowsAffected); // same as previous line\n\n    //console.log(request.parameters.output_parameter.value); // output value\n    \n    if (Array.isArray(recordsets) && recordsets[0][0].erro !== 0) {\n        msg.statusCode = 500;\n    \n        msg.payload = recordsets[0][0] || {};\n        msg.payload.erro = msg.payload.erro || msg.payload.error || msg.payload.number || 9999;\n        msg.payload.mensagem = msg.payload.mensagem || msg.payload.message || 'Ocorreu um erro interno ao executar a sua solicitação.'\n    } else {\n        msg.payload = (Array.isArray(recordsets) && recordsets.length > 1 && recordsets[1][0]) || {}\n    }\n\n    node.send(msg);\n})\n.catch(function(err) {\n    console.dir('-----------------> Erro ao chamar Stored Procedure ' + procedure_name + ' <-----------------')\n    console.dir(JSON.stringify(err))\n    msg.payload = err || { erro: 9999, mensagem: 'Erro desconhecido.'};\n    node.send(msg);\n});\n    ","outputs":1,"noerr":0,"x":350,"y":280,"wires":[["3ef594f.09e356c"]]},{"id":"155aee60.3838a2","type":"comment","z":"53205563.d5978c","name":"CONCILIAÇÃO EXTRATO BANCARIO","info":"","x":190,"y":1400,"wires":[]},{"id":"e6952c50.389a2","type":"debug","z":"53205563.d5978c","name":"","active":true,"console":"false","complete":"payload","x":270,"y":940,"wires":[]},{"id":"ca2398cb.485db8","type":"mqtt-broker","z":"","broker":"192.168.0.1","port":"1883","clientid":"","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"willTopic":"","willQos":"0","willPayload":"","birthTopic":"","birthQos":"0","birthPayload":""}]